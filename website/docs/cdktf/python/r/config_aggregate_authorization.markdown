---
subcategory: "Config"
layout: "aws"
page_title: "AWS: aws_config_aggregate_authorization"
description: |-
  Manages an AWS Config Aggregate Authorization.
---

# Resource: aws_config_aggregate_authorization

Manages an AWS Config Aggregate Authorization

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.config_aggregate_authorization.ConfigAggregateAuthorization(self, "example",
            account_id="123456789012",
            region="eu-west-2"
        )
```

## Argument Reference

The following arguments are supported:

* `account_id` - (Required) Account ID
* `region` - (Required) Region
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - The ARN of the authorization
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

Config aggregate authorizations can be imported using `account_id:region`, e.g.,

```
$ terraform import aws_config_aggregate_authorization.example 123456789012:us-east-1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c4b0803e1393a8498b9de0a59713f2aaa0d6198b82bd81933e09f26f41134797 -->