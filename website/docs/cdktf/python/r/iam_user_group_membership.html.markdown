---
subcategory: "IAM (Identity & Access Management)"
layout: "aws"
page_title: "AWS: aws_iam_user_group_membership"
description: |-
  Provides a resource for adding an IAM User to IAM Groups without conflicting
  with itself.
---

# Resource: aws_iam_user_group_membership

Provides a resource for adding an [IAM User][2] to [IAM Groups][1]. This
resource can be used multiple times with the same user for non-overlapping
groups.

To exclusively manage the users in a group, see the
[`aws_iam_group_membership` resource][3].

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_iam_group_group1 = aws.iam_group.IamGroup(self, "group1",
            name="group1"
        )
        aws_iam_group_group2 = aws.iam_group.IamGroup(self, "group2",
            name="group2"
        )
        aws_iam_group_group3 = aws.iam_group.IamGroup(self, "group3",
            name="group3"
        )
        aws_iam_user_user1 = aws.iam_user.IamUser(self, "user1",
            name="user1"
        )
        aws.iam_user_group_membership.IamUserGroupMembership(self, "example1",
            groups=[
                cdktf.Token.as_string(aws_iam_group_group1.name),
                cdktf.Token.as_string(aws_iam_group_group2.name)
            ],
            user=cdktf.Token.as_string(aws_iam_user_user1.name)
        )
        aws.iam_user_group_membership.IamUserGroupMembership(self, "example2",
            groups=[cdktf.Token.as_string(aws_iam_group_group3.name)],
            user=cdktf.Token.as_string(aws_iam_user_user1.name)
        )
```

## Argument Reference

The following arguments are supported:

* `user` - (Required) The name of the [IAM User][2] to add to groups
* `groups` - (Required) A list of [IAM Groups][1] to add the user to

## Attributes Reference

No additional attributes are exported.

[1]: /docs/providers/aws/r/iam_group.html
[2]: /docs/providers/aws/r/iam_user.html
[3]: /docs/providers/aws/r/iam_group_membership.html

## Import

IAM user group membership can be imported using the user name and group names separated by `/`.

```
$ terraform import aws_iam_user_group_membership.example1 user1/group1/group2
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d15b569b55942567d29e2a884ea1d32fee046b29ac7cec509d9bf22fde730cdd -->