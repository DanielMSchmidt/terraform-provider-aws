---
subcategory: "Cognito Identity"
layout: "aws"
page_title: "AWS: aws_cognito_identity_pool_provider_principal_tag"
description: |-
  Provides an AWS Cognito Identity Principal Mapping.
---

# Resource: aws_cognito_identity_pool_provider_principal_tag

Provides an AWS Cognito Identity Principal Mapping.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_cognito_user_pool_example = aws.cognito_user_pool.CognitoUserPool(self, "example",
            auto_verified_attributes=["email"],
            name="user pool"
        )
        aws_cognito_user_pool_client_example =
        aws.cognito_user_pool_client.CognitoUserPoolClient(self, "example_1",
            name="client",
            supported_identity_providers=cdktf.Token.as_list(
                cdktf.Fn.compact(cdktf.Token.as_list(["COGNITO"]))),
            user_pool_id=cdktf.Token.as_string(aws_cognito_user_pool_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_user_pool_client_example.override_logical_id("example")
        aws_cognito_identity_pool_example =
        aws.cognito_identity_pool.CognitoIdentityPool(self, "example_2",
            allow_unauthenticated_identities=False,
            cognito_identity_providers=[CognitoIdentityPoolCognitoIdentityProviders(
                client_id=cdktf.Token.as_string(aws_cognito_user_pool_client_example.id),
                provider_name=cdktf.Token.as_string(aws_cognito_user_pool_example.endpoint),
                server_side_token_check=False
            )
            ],
            identity_pool_name="identity pool"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_identity_pool_example.override_logical_id("example")
        aws_cognito_identity_pool_provider_principal_tag_example =
        aws.cognito_identity_pool_provider_principal_tag.CognitoIdentityPoolProviderPrincipalTag(self, "example_3",
            identity_pool_id=cdktf.Token.as_string(aws_cognito_identity_pool_example.id),
            identity_provider_name=cdktf.Token.as_string(aws_cognito_user_pool_example.endpoint),
            principal_tags={
                "test": "value"
            },
            use_defaults=False
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_identity_pool_provider_principal_tag_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `identity_pool_id` (Required) - An identity pool ID.
* `identity_provider_name` (Required) - The name of the identity provider.
* `principal_tags`: (Optional: []) - String to string map of variables.
* `use_defaults`: (Optional: true) use default (username and clientID) attribute mappings.

## Attributes Reference

No additional attributes are exported.

## Import

Cognito Identity Pool Roles Attachment can be imported using the Identity Pool ID and provider name, e.g.,

```
$ terraform import aws_cognito_identity_pool_provider_principal_tag.example us-west-2_abc123:CorpAD
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9e4e93640cb696079ce7ec1538364935546bde46ea502594e6dc0067211f9507 -->