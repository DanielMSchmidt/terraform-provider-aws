---
subcategory: "Security Hub"
layout: "aws"
page_title: "AWS: aws_securityhub_organization_configuration"
description: |-
  Manages the Security Hub Organization Configuration
---

# Resource: aws_securityhub_organization_configuration

Manages the Security Hub Organization Configuration.

~> **NOTE:** This resource requires an [`aws_securityhub_organization_admin_account`](/docs/providers/aws/r/securityhub_organization_admin_account.html) to be configured (not necessarily with Terraform). More information about managing Security Hub in an organization can be found in the [Managing administrator and member accounts](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-accounts.html) documentation

~> **NOTE:** This is an advanced Terraform resource. Terraform will automatically assume management of the Security Hub Organization Configuration without import and perform no actions on removal from the Terraform configuration.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_organizations_organization_example =
        aws.organizations_organization.OrganizationsOrganization(self, "example",
            aws_service_access_principals=["securityhub.amazonaws.com"],
            feature_set="ALL"
        )
        aws_securityhub_organization_admin_account_example =
        aws.securityhub_organization_admin_account.SecurityhubOrganizationAdminAccount(self, "example_1",
            admin_account_id="123456789012",
            depends_on=[aws_organizations_organization_example]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_securityhub_organization_admin_account_example.override_logical_id("example")
        aws_securityhub_organization_configuration_example =
        aws.securityhub_organization_configuration.SecurityhubOrganizationConfiguration(self, "example_2",
            auto_enable=True
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_securityhub_organization_configuration_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `auto_enable` - (Required) Whether to automatically enable Security Hub for new accounts in the organization.
* `auto_enable_standards` - (Optional) Whether to automatically enable Security Hub default standards for new member accounts in the organization. By default, this parameter is equal to `DEFAULT`, and new member accounts are automatically enabled with default Security Hub standards. To opt out of enabling default standards for new member accounts, set this parameter equal to `NONE`.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - AWS Account ID.

## Import

An existing Security Hub enabled account can be imported using the AWS account ID, e.g.,

```
$ terraform import aws_securityhub_organization_configuration.example 123456789012
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-bbea5ac63dae559d8d4b9719faf3431c4d2db2db3ca557fa65f41b119eb43420 -->