---
subcategory: "S3 (Simple Storage)"
layout: "aws"
page_title: "AWS: aws_s3_bucket_policy"
description: |-
  Attaches a policy to an S3 bucket resource.
---

# Resource: aws_s3_bucket_policy

Attaches a policy to an S3 bucket resource.

## Example Usage

### Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_s3_bucket_example = aws.s3_bucket.S3Bucket(self, "example",
            bucket="my-tf-test-bucket"
        )
        data_aws_iam_policy_document_allow_access_from_another_account =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "allow_access_from_another_account",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["s3:GetObject", "s3:ListBucket"],
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["123456789012"],
                    type="AWS"
                )
                ],
                resources=[
                    cdktf.Token.as_string(aws_s3_bucket_example.arn), "${" + aws_s3_bucket_example.arn + "}/*"
                ]
            )
            ]
        )
        aws_s3_bucket_policy_allow_access_from_another_account =
        aws.s3_bucket_policy.S3BucketPolicy(self, "allow_access_from_another_account_2",
            bucket=cdktf.Token.as_string(aws_s3_bucket_example.id),
            policy=cdktf.Token.as_string(data_aws_iam_policy_document_allow_access_from_another_account.json)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_s3_bucket_policy_allow_access_from_another_account.override_logical_id("allow_access_from_another_account")
```

## Argument Reference

The following arguments are supported:

* `bucket` - (Required) Name of the bucket to which to apply the policy.
* `policy` - (Required) Text of the policy. Although this is a bucket policy rather than an IAM policy, the [`aws_iam_policy_document`](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) data source may be used, so long as it specifies a principal. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy). Note: Bucket policies are limited to 20 KB in size.

## Attributes Reference

No additional attributes are exported.

## Import

S3 bucket policies can be imported using the bucket name, e.g.,

```
$ terraform import aws_s3_bucket_policy.allow_access_from_another_account my-tf-test-bucket
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a560140d94b025a7d063f941c42064fe03e7688c587da81073fd5b7be898ee81 -->