---
subcategory: "Transcribe"
layout: "aws"
page_title: "AWS: aws_transcribe_language_model"
description: |-
  Terraform resource for managing an AWS Transcribe LanguageModel.
---

# Resource: aws_transcribe_language_model

Terraform resource for managing an AWS Transcribe LanguageModel.

-> This resource can take a significant amount of time to provision. See Language Model [FAQ](https://aws.amazon.com/transcribe/faqs/) for more details.

## Example Usage

### Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_s3_bucket_example = aws.s3_bucket.S3Bucket(self, "example",
            bucket="example-transcribe",
            force_destroy=True
        )
        aws.s3_object.S3Object(self, "object",
            bucket=cdktf.Token.as_string(aws_s3_bucket_example.id),
            key="transcribe/test1.txt",
            source="test1.txt"
        )
        data_aws_iam_policy_document_example =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "example_2",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["sts:AssumeRole"],
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["transcribe.amazonaws.com"],
                    type="Service"
                )
                ]
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_iam_policy_document_example.override_logical_id("example")
        aws_iam_role_example = aws.iam_role.IamRole(self, "example_3",
            assume_role_policy=cdktf.Token.as_string(data_aws_iam_policy_document_example.json),
            name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_role_example.override_logical_id("example")
        aws.iam_role_policy.IamRolePolicy(self, "test_policy",
            name="example",
            policy=cdktf.Fn.jsonencode({
                "Statement": [{
                    "Action": ["s3:GetObject", "s3:ListBucket"],
                    "Effect": "Allow",
                    "Resource": ["*"]
                }
                ],
                "Version": "2012-10-17"
            }),
            role=cdktf.Token.as_string(aws_iam_role_example.id)
        )
        aws_transcribe_language_model_example =
        aws.transcribe_language_model.TranscribeLanguageModel(self, "example_5",
            base_model_name="NarrowBand",
            input_data_config=TranscribeLanguageModelInputDataConfig(
                data_access_role_arn=cdktf.Token.as_string(aws_iam_role_example.arn),
                s3_uri="s3://${" + aws_s3_bucket_example.id + "}/transcribe/"
            ),
            language_code="en-US",
            model_name="example",
            tags={
                "ENVIRONMENT": "development"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_transcribe_language_model_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `base_model_name` - (Required) Name of reference base model.
* `input_data_config` - (Required) The input data config for the LanguageModel. See [Input Data Config](#input-data-config) for more details.
* `language_code` - (Required) The language code you selected for your language model. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.
* `model_name` - (Required) The model name.

### Input Data Config

* `data_access_role_arn` - (Required) IAM role with access to S3 bucket.
* `s3_uri` - (Required) S3 URI where training data is located.
* `tuning_data_s3_uri` - (Optional) S3 URI where tuning data is located.

The following arguments are optional:

* `tags` - (Optional) A map of tags to assign to the LanguageModel. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - LanguageModel name.
* `arn` - ARN of the LanguageModel.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `600m`)

## Import

Transcribe LanguageModel can be imported using the `model_name`, e.g.,

```
$ terraform import aws_transcribe_language_model.example example-name
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-8a5b5bf3b917532910a3e9a5bce2a18fe36e8f23c8be360911795cf89a8975dd -->