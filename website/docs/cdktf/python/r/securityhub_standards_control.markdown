---
subcategory: "Security Hub"
layout: "aws"
page_title: "AWS: aws_securityhub_standards_control"
description: |-
  Enable/disable Security Hub standards controls.
---

# Resource: aws_securityhub_standards_control

Disable/enable Security Hub standards control in the current region.

The `aws_securityhub_standards_control` behaves differently from normal resources, in that
Terraform does not _create_ this resource, but instead "adopts" it
into management. When you _delete_ this resource configuration, Terraform "abandons" resource as is and just removes it from the state.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_securityhub_account_example =
        aws.securityhub_account.SecurityhubAccount(self, "example")
        aws_securityhub_standards_subscription_cis_aws_foundations_benchmark =
        aws.securityhub_standards_subscription.SecurityhubStandardsSubscription(self, "cis_aws_foundations_benchmark",
            depends_on=[aws_securityhub_account_example],
            standards_arn="arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0"
        )
        aws.securityhub_standards_control.SecurityhubStandardsControl(self, "ensure_iam_password_policy_prevents_password_reuse",
            control_status="DISABLED",
            depends_on=[aws_securityhub_standards_subscription_cis_aws_foundations_benchmark
            ],
            disabled_reason="We handle password policies within Okta",
            standards_control_arn="arn:aws:securityhub:us-east-1:111111111111:control/cis-aws-foundations-benchmark/v/1.2.0/1.10"
        )
```

## Argument Reference

The following arguments are supported:

* `standards_control_arn` - (Required) The standards control ARN.
* `control_status` – (Required) The control status could be `ENABLED` or `DISABLED`. You have to specify `disabled_reason` argument for `DISABLED` control status.
* `disabled_reason` – (Optional) A description of the reason why you are disabling a security standard control. If you specify this attribute, `control_status` will be set to `DISABLED` automatically.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The standard control ARN.
* `control_id` – The identifier of the security standard control.
* `control_status_updated_at` – The date and time that the status of the security standard control was most recently updated.
* `description` – The standard control longer description. Provides information about what the control is checking for.
* `related_requirements` – The list of requirements that are related to this control.
* `remediation_url` – A link to remediation information for the control in the Security Hub user documentation.
* `severity_rating` – The severity of findings generated from this security standard control.
* `title` – The standard control title.

<!-- cache-key: cdktf-0.17.0-pre.15 input-35a6e8ed3afe8380b428ce03a9fa58b62d388e001851204e378b4d6e23d63f5a -->