---
subcategory: "ELB Classic"
layout: "aws"
page_title: "AWS: aws_load_balancer_listener_policy"
description: |-
  Attaches a load balancer policy to an ELB Listener.
---

# Resource: aws_load_balancer_listener_policy

Attaches a load balancer policy to an ELB Listener.

## Example Usage

### Custom Policy

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_elb_wu_tang = aws.elb.Elb(self, "wu-tang",
            availability_zones=["us-east-1a"],
            listener=[ElbListener(
                instance_port=443,
                instance_protocol="http",
                lb_port=443,
                lb_protocol="https",
                ssl_certificate_id="arn:aws:iam::000000000000:server-certificate/wu-tang.net"
            )
            ],
            name="wu-tang",
            tags={
                "Name": "wu-tang"
            }
        )
        aws_load_balancer_policy_wu_tang_ssl =
        aws.load_balancer_policy.LoadBalancerPolicy(self, "wu-tang-ssl",
            load_balancer_name=cdktf.Token.as_string(aws_elb_wu_tang.name),
            policy_attribute=[LoadBalancerPolicyPolicyAttribute(
                name="ECDHE-ECDSA-AES128-GCM-SHA256",
                value="true"
            ), LoadBalancerPolicyPolicyAttribute(
                name="Protocol-TLSv1.2",
                value="true"
            )
            ],
            policy_name="wu-tang-ssl",
            policy_type_name="SSLNegotiationPolicyType"
        )
        aws.load_balancer_listener_policy.LoadBalancerListenerPolicy(self, "wu-tang-listener-policies-443",
            load_balancer_name=cdktf.Token.as_string(aws_elb_wu_tang.name),
            load_balancer_port=443,
            policy_names=[
                cdktf.Token.as_string(aws_load_balancer_policy_wu_tang_ssl.policy_name)
            ]
        )
```

This example shows how to customize the TLS settings of an HTTPS listener.

### AWS Predefined Security Policy

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_elb_wu_tang = aws.elb.Elb(self, "wu-tang",
            availability_zones=["us-east-1a"],
            listener=[ElbListener(
                instance_port=443,
                instance_protocol="http",
                lb_port=443,
                lb_protocol="https",
                ssl_certificate_id="arn:aws:iam::000000000000:server-certificate/wu-tang.net"
            )
            ],
            name="wu-tang",
            tags={
                "Name": "wu-tang"
            }
        )
        aws_load_balancer_policy_wu_tang_ssl_tls11 =
        aws.load_balancer_policy.LoadBalancerPolicy(self, "wu-tang-ssl-tls-1-1",
            load_balancer_name=cdktf.Token.as_string(aws_elb_wu_tang.name),
            policy_attribute=[LoadBalancerPolicyPolicyAttribute(
                name="Reference-Security-Policy",
                value="ELBSecurityPolicy-TLS-1-1-2017-01"
            )
            ],
            policy_name="wu-tang-ssl",
            policy_type_name="SSLNegotiationPolicyType"
        )
        aws.load_balancer_listener_policy.LoadBalancerListenerPolicy(self, "wu-tang-listener-policies-443",
            load_balancer_name=cdktf.Token.as_string(aws_elb_wu_tang.name),
            load_balancer_port=443,
            policy_names=[
                cdktf.Token.as_string(aws_load_balancer_policy_wu_tang_ssl_tls11.policy_name)
            ]
        )
```

This example shows how to add a [Predefined Security Policy for ELBs](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-policy-table.html)

## Argument Reference

The following arguments are supported:

* `load_balancer_name` - (Required) The load balancer to attach the policy to.
* `load_balancer_port` - (Required) The load balancer listener port to apply the policy to.
* `policy_names` - (Required) List of Policy Names to apply to the backend server.
* `triggers` - (Optional) Map of arbitrary keys and values that, when changed, will trigger an update. To force an update without changing these keys/values, use the [`terraform taint` command](https://www.terraform.io/docs/commands/taint.html).

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The ID of the policy.
* `load_balancer_name` - The load balancer on which the policy is defined.
* `load_balancer_port` - The load balancer listener port the policies are applied to

<!-- cache-key: cdktf-0.17.0-pre.15 input-37ddc3dfdebd69c9d8270eb7850036407687883f56b8e6d9dbd128a180c7ed43 -->