---
subcategory: "Elemental MediaStore"
layout: "aws"
page_title: "AWS: aws_media_store_container_policy"
description: |-
  Provides a MediaStore Container Policy.
---

# Resource: aws_media_store_container_policy

Provides a MediaStore Container Policy.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_media_store_container_example =
        aws.media_store_container.MediaStoreContainer(self, "example",
            name="example"
        )
        data_aws_caller_identity_current =
        aws.data_aws_caller_identity.DataAwsCallerIdentity(self, "current")
        data_aws_region_current = aws.data_aws_region.DataAwsRegion(self, "current_2")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_region_current.override_logical_id("current")
        data_aws_iam_policy_document_example =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "example_3",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["mediastore:*"],
                condition=[DataAwsIamPolicyDocumentStatementCondition(
                    test="Bool",
                    values=["true"],
                    variable="aws:SecureTransport"
                )
                ],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["arn:aws:iam::${" + data_aws_caller_identity_current.account_id + "}:root"
                    ],
                    type="AWS"
                )
                ],
                resources=["arn:aws:mediastore:${" + data_aws_region_current.name + "}:${" + data_aws_caller_identity_current.account_id + "}:container/${" + aws_media_store_container_example.name + "}/*"
                ],
                sid="MediaStoreFullAccess"
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_iam_policy_document_example.override_logical_id("example")
        aws_media_store_container_policy_example =
        aws.media_store_container_policy.MediaStoreContainerPolicy(self, "example_4",
            container_name=cdktf.Token.as_string(aws_media_store_container_example.name),
            policy=cdktf.Token.as_string(data_aws_iam_policy_document_example.json)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_media_store_container_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `container_name` - (Required) The name of the container.
* `policy` - (Required) The contents of the policy. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).

## Attributes Reference

No additional attributes are exported.

## Import

MediaStore Container Policy can be imported using the MediaStore Container Name, e.g.,

```
$ terraform import aws_media_store_container_policy.example example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2dbc9e063e9efefde80dc9d5e90d80dcea75805ee41d09bd98bfc3235aabf37c -->