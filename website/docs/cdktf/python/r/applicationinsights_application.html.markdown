---
subcategory: "CloudWatch Application Insights"
layout: "aws"
page_title: "AWS: aws_applicationinsights_application"
description: |-
  Provides a CloudWatch Application Insights Application resource
---

# Resource: aws_applicationinsights_application

Provides a ApplicationInsights Application resource.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_resourcegroups_group_example =
        aws.resourcegroups_group.ResourcegroupsGroup(self, "example",
            name="example",
            resource_query=ResourcegroupsGroupResourceQuery(
                query=cdktf.Fn.jsonencode({
                    "ResourceTypeFilters": ["AWS::EC2::Instance"],
                    "TagFilters": [{
                        "Key": "Stage",
                        "Values": ["Test"]
                    }
                    ]
                })
            )
        )
        aws_applicationinsights_application_example =
        aws.applicationinsights_application.ApplicationinsightsApplication(self, "example_1",
            resource_group_name=cdktf.Token.as_string(aws_resourcegroups_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_applicationinsights_application_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `resource_group_name` - (Required) Name of the resource group.

The following arguments are optional:

* `auto_config_enabled` - (Optional)  Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
* `auto_create` - (Optional) Configures all of the resources in the resource group by applying the recommended configurations.
* `cwe_monitor_enabled` - (Optional)  Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
* `grouping_type` - (Optional) Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
* `ops_center_enabled` - (Optional) When set to `true`, creates opsItems for any problems detected on an application.
* `ops_item_sns_topic_arn` - (Optional) SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - ARN of the Application.
* `id` - Name of the resource group.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

ApplicationInsights Applications can be imported using the `resource_group_name`, e.g.,

```
$ terraform import aws_applicationinsights_application.some some-application
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d28a92d846fb756e86984433793e8fdd80f291576760707d8db619f032d9d6d7 -->