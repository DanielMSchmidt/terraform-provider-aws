---
subcategory: "EventBridge"
layout: "aws"
page_title: "AWS: aws_cloudwatch_event_connection"
description: |-
  Provides an EventBridge connection resource.
---

# Resource: aws_cloudwatch_event_connection

Provides an EventBridge connection resource.

~> **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.cloudwatch_event_connection.CloudwatchEventConnection(self, "test",
            auth_parameters=CloudwatchEventConnectionAuthParameters(
                api_key=CloudwatchEventConnectionAuthParametersApiKey(
                    key="x-signature",
                    value="1234"
                )
            ),
            authorization_type="API_KEY",
            description="A connection description",
            name="ngrok-connection"
        )
```

## Example Usage Basic Authorization

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.cloudwatch_event_connection.CloudwatchEventConnection(self, "test",
            auth_parameters=CloudwatchEventConnectionAuthParameters(
                basic=CloudwatchEventConnectionAuthParametersBasic(
                    password="Pass1234!",
                    username="user"
                )
            ),
            authorization_type="BASIC",
            description="A connection description",
            name="ngrok-connection"
        )
```

## Example Usage OAuth Authorization

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.cloudwatch_event_connection.CloudwatchEventConnection(self, "test",
            auth_parameters=CloudwatchEventConnectionAuthParameters(
                oauth=CloudwatchEventConnectionAuthParametersOauth(
                    authorization_endpoint="https://auth.url.com/endpoint",
                    client_parameters=CloudwatchEventConnectionAuthParametersOauthClientParameters(
                        client_id="1234567890",
                        client_secret="Pass1234!"
                    ),
                    http_method="GET",
                    oauth_http_parameters=CloudwatchEventConnectionAuthParametersOauthOauthHttpParameters(
                        body=[CloudwatchEventConnectionAuthParametersOauthOauthHttpParametersBody(
                            is_value_secret=False,
                            key="body-parameter-key",
                            value="body-parameter-value"
                        )
                        ],
                        header=[CloudwatchEventConnectionAuthParametersOauthOauthHttpParametersHeader(
                            is_value_secret=False,
                            key="header-parameter-key",
                            value="header-parameter-value"
                        )
                        ],
                        query_string=[CloudwatchEventConnectionAuthParametersOauthOauthHttpParametersQueryString(
                            is_value_secret=False,
                            key="query-string-parameter-key",
                            value="query-string-parameter-value"
                        )
                        ]
                    )
                )
            ),
            authorization_type="OAUTH_CLIENT_CREDENTIALS",
            description="A connection description",
            name="ngrok-connection"
        )
```

## Example Usage Invocation Http Parameters

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.cloudwatch_event_connection.CloudwatchEventConnection(self, "test",
            auth_parameters=CloudwatchEventConnectionAuthParameters(
                basic=CloudwatchEventConnectionAuthParametersBasic(
                    password="Pass1234!",
                    username="user"
                ),
                invocation_http_parameters=CloudwatchEventConnectionAuthParametersInvocationHttpParameters(
                    body=[CloudwatchEventConnectionAuthParametersInvocationHttpParametersBody(
                        is_value_secret=False,
                        key="body-parameter-key",
                        value="body-parameter-value"
                    ), CloudwatchEventConnectionAuthParametersInvocationHttpParametersBody(
                        is_value_secret=True,
                        key="body-parameter-key2",
                        value="body-parameter-value2"
                    )
                    ],
                    header=[CloudwatchEventConnectionAuthParametersInvocationHttpParametersHeader(
                        is_value_secret=False,
                        key="header-parameter-key",
                        value="header-parameter-value"
                    )
                    ],
                    query_string=[CloudwatchEventConnectionAuthParametersInvocationHttpParametersQueryString(
                        is_value_secret=False,
                        key="query-string-parameter-key",
                        value="query-string-parameter-value"
                    )
                    ]
                )
            ),
            authorization_type="BASIC",
            description="A connection description",
            name="ngrok-connection"
        )
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the new connection. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
* `description` - (Optional) Enter a description for the connection. Maximum of 512 characters.
* `authorization_type` - (Required) Choose the type of authorization to use for the connection. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
* `auth_parameters` - (Required) Parameters used for authorization. A maximum of 1 are allowed. Documented below.
* `invocation_http_parameters` - (Optional) Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.

`auth_parameters` support the following:

* `api_key` - (Optional) Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
* `basic` - (Optional) Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `api_key` and `oauth`. Documented below.
* `oauth` - (Optional) Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `api_key`. Documented below.

`api_key` support the following:

* `key` - (Required) Header Name.
* `value` - (Required) Header Value. Created and stored in AWS Secrets Manager.

`basic` support the following:

* `username` - (Required) A username for the authorization.
* `password` - (Required) A password for the authorization. Created and stored in AWS Secrets Manager.

`oauth` support the following:

* `authorization_endpoint` - (Required) The URL to the authorization endpoint.
* `http_method` - (Required) A password for the authorization. Created and stored in AWS Secrets Manager.
* `client_parameters` - (Required) Contains the client parameters for OAuth authorization. Contains the following two parameters.
    * `client_id` - (Required) The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
    * `client_secret` - (Required) The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
* `oauth_http_parameters` - (Required) OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.

`invocation_http_parameters` and `oauth_http_parameters` support the following:

* `body` - (Optional) Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    * `key` - (Required) The key for the parameter.
    * `value` - (Required) The value associated with the key. Created and stored in AWS Secrets Manager if is secret.
    * `is_value_secret` - (Optional) Specified whether the value is secret.

* `header` - (Optional) Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    * `key` - (Required) The key for the parameter.
    * `value` - (Required) The value associated with the key. Created and stored in AWS Secrets Manager if is secret.
    * `is_value_secret` - (Optional) Specified whether the value is secret.

* `query_string` - (Optional) Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
    * `key` - (Required) The key for the parameter.
    * `value` - (Required) The value associated with the key. Created and stored in AWS Secrets Manager if is secret.
    * `is_value_secret` - (Optional) Specified whether the value is secret.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - The Amazon Resource Name (ARN) of the connection.
* `secret_arn` - The Amazon Resource Name (ARN) of the secret created from the authorization parameters specified for the connection.

## Import

EventBridge Connection can be imported using the `name`, e.g.,

```console
$ terraform import aws_cloudwatch_event_connection.test ngrok-connection
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-f22646cb02429fc19ad7f16843086800eedf17d94cf167678cd0112016c60394 -->