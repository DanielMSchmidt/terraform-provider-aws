---
subcategory: "DynamoDB"
layout: "aws"
page_title: "AWS: aws_dynamodb_table_item"
description: |-
  Provides a DynamoDB table item resource
---

# Resource: aws_dynamodb_table_item

Provides a DynamoDB table item resource

-> **Note:** This resource is not meant to be used for managing large amounts of data in your table, it is not designed to scale.
  You should perform **regular backups** of all data in the table, see [AWS docs for more](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/BackupRestore.html).

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_dynamodb_table_example = aws.dynamodb_table.DynamodbTable(self, "example",
            attribute=[DynamodbTableAttribute(
                name="exampleHashKey",
                type="S"
            )
            ],
            hash_key="exampleHashKey",
            name="example-name",
            read_capacity=10,
            write_capacity=10
        )
        aws_dynamodb_table_item_example =
        aws.dynamodb_table_item.DynamodbTableItem(self, "example_1",
            hash_key=cdktf.Token.as_string(aws_dynamodb_table_example.hash_key),
            item="{\n  \"exampleHashKey\": {\"S\": \"something\"},\n  \"one\": {\"N\": \"11111\"},\n  \"two\": {\"N\": \"22222\"},\n  \"three\": {\"N\": \"33333\"},\n  \"four\": {\"N\": \"44444\"}\n}\n",
            table_name=cdktf.Token.as_string(aws_dynamodb_table_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_dynamodb_table_item_example.override_logical_id("example")
```

## Argument Reference

~> **Note:** Names included in `item` are represented internally with everything but letters removed. There is the possibility of collisions if two names, once filtered, are the same. For example, the names `your-name-here` and `yournamehere` will overlap and cause an error.

The following arguments are supported:

* `hash_key` - (Required) Hash key to use for lookups and identification of the item
* `item` - (Required) JSON representation of a map of attribute name/value pairs, one for each attribute. Only the primary key attributes are required; you can optionally provide other attribute name-value pairs for the item.
* `range_key` - (Optional) Range key to use for lookups and identification of the item. Required if there is range key defined in the table.
* `table_name` - (Required) Name of the table to contain the item.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

## Import

DynamoDB table items cannot be imported.

<!-- cache-key: cdktf-0.17.0-pre.15 input-cf13a4c7a72debbe10b39100adf451a54c8e71036faafcd0ba6c812f1c1464b2 -->