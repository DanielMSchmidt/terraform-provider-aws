---
subcategory: "CodeArtifact"
layout: "aws"
page_title: "AWS: aws_codeartifact_repository_permissions_policy"
description: |-
  Provides a CodeArtifact Repository Permissions Policy resource.
---

# Resource: aws_codeartifact_repository_permissions_policy

Provides a CodeArtifact Repostory Permissions Policy Resource.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_kms_key_example = aws.kms_key.KmsKey(self, "example",
            description="domain key"
        )
        aws_codeartifact_domain_example =
        aws.codeartifact_domain.CodeartifactDomain(self, "example_1",
            domain="example",
            encryption_key=cdktf.Token.as_string(aws_kms_key_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_codeartifact_domain_example.override_logical_id("example")
        aws_codeartifact_repository_example =
        aws.codeartifact_repository.CodeartifactRepository(self, "example_2",
            domain=cdktf.Token.as_string(aws_codeartifact_domain_example.domain),
            repository="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_codeartifact_repository_example.override_logical_id("example")
        data_aws_iam_policy_document_example =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "example_3",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["codeartifact:CreateRepository"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["*"],
                    type="*"
                )
                ],
                resources=[
                    cdktf.Token.as_string(aws_codeartifact_domain_example.arn)
                ]
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_iam_policy_document_example.override_logical_id("example")
        aws_codeartifact_repository_permissions_policy_example =
        aws.codeartifact_repository_permissions_policy.CodeartifactRepositoryPermissionsPolicy(self, "example_4",
            domain=cdktf.Token.as_string(aws_codeartifact_domain_example.domain),
            policy_document=cdktf.Token.as_string(data_aws_iam_policy_document_example.json),
            repository=cdktf.Token.as_string(aws_codeartifact_repository_example.repository)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_codeartifact_repository_permissions_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `repository` - (Required) The name of the repository to set the resource policy on.
* `domain` - (Required) The name of the domain on which to set the resource policy.
* `policy_document` - (Required) A JSON policy string to be set as the access control resource policy on the provided domain.
* `domain_owner` - (Optional) The account number of the AWS account that owns the domain.
* `policy_revision` - (Optional) The current revision of the resource policy to be set. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain's resource policy.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The ARN of the resource associated with the resource policy.
* `resource_arn` - The ARN of the resource associated with the resource policy.

## Import

CodeArtifact Repository Permissions Policies can be imported using the CodeArtifact Repository ARN, e.g.,

```
$ terraform import aws_codeartifact_repository_permissions_policy.example arn:aws:codeartifact:us-west-2:012345678912:repository/tf-acc-test-6968272603913957763/tf-acc-test-6968272603913957763
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-901e539200ca6833a10f213e1f0996dd13334c9381808ebc21f8797186e5c523 -->