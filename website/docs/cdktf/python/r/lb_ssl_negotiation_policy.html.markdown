---
subcategory: "ELB Classic"
layout: "aws"
page_title: "AWS: aws_lb_ssl_negotiation_policy"
description: |-
  Provides a load balancer SSL negotiation policy, which allows an ELB to control which ciphers and protocols are supported during SSL negotiations between a client and a load balancer.
---

# Resource: aws_lb_ssl_negotiation_policy

Provides a load balancer SSL negotiation policy, which allows an ELB to control the ciphers and protocols that are supported during SSL negotiations between a client and a load balancer.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_elb_lb = aws.elb.Elb(self, "lb",
            availability_zones=["us-east-1a"],
            listener=[ElbListener(
                instance_port=8000,
                instance_protocol="https",
                lb_port=443,
                lb_protocol="https",
                ssl_certificate_id="arn:aws:iam::123456789012:server-certificate/certName"
            )
            ],
            name="test-lb"
        )
        aws.lb_ssl_negotiation_policy.LbSslNegotiationPolicy(self, "foo",
            attribute=[LbSslNegotiationPolicyAttribute(
                name="Protocol-TLSv1",
                value="false"
            ), LbSslNegotiationPolicyAttribute(
                name="Protocol-TLSv1.1",
                value="false"
            ), LbSslNegotiationPolicyAttribute(
                name="Protocol-TLSv1.2",
                value="true"
            ), LbSslNegotiationPolicyAttribute(
                name="Server-Defined-Cipher-Order",
                value="true"
            ), LbSslNegotiationPolicyAttribute(
                name="ECDHE-RSA-AES128-GCM-SHA256",
                value="true"
            ), LbSslNegotiationPolicyAttribute(
                name="AES128-GCM-SHA256",
                value="true"
            ), LbSslNegotiationPolicyAttribute(
                name="EDH-RSA-DES-CBC3-SHA",
                value="false"
            )
            ],
            lb_port=443,
            load_balancer=cdktf.Token.as_string(aws_elb_lb.id),
            name="foo-policy"
        )
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the SSL negotiation policy.
* `load_balancer` - (Required) The load balancer to which the policy
  should be attached.
* `lb_port` - (Required) The load balancer port to which the policy
  should be applied. This must be an active listener on the load
balancer.
* `attribute` - (Optional) An SSL Negotiation policy attribute. Each has two properties:
    * `name` - The name of the attribute
    * `value` - The value of the attribute
* `triggers` - (Optional) Map of arbitrary keys and values that, when changed, will trigger a redeployment. To force a redeployment without changing these keys/values, use the [`terraform taint` command](https://www.terraform.io/docs/commands/taint.html).

To set your attributes, please see the [AWS Elastic Load Balancing Developer Guide](http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-security-policy-table.html) for a listing of the supported SSL protocols, SSL options, and SSL ciphers.

~> **NOTE:** The AWS documentation references Server Order Preference, which the AWS Elastic Load Balancing API refers to as `Server-Defined-Cipher-Order`. If you wish to set Server Order Preference, use this value instead.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The ID of the policy.
* `name` - The name of the stickiness policy.
* `load_balancer` - The load balancer to which the policy is attached.
* `lb_port` - The load balancer port to which the policy is applied.
* `attribute` - The SSL Negotiation policy attributes.

<!-- cache-key: cdktf-0.17.0-pre.15 input-f21cefa509d5da3c4aad8262777201d6197e4df09247a2d7ad867e7247539d86 -->