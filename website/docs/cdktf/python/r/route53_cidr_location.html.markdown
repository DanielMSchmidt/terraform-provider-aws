---
subcategory: "Route 53"
layout: "aws"
page_title: "AWS: aws_route53_cidr_location"
description: |-
  Provides a Route53 CIDR location resource.
---

# Resource: aws_route53_cidr_location

Provides a Route53 CIDR location resource.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_route53_cidr_collection_example =
        aws.route53_cidr_collection.Route53CidrCollection(self, "example",
            name="collection-1"
        )
        aws_route53_cidr_location_example =
        aws.route53_cidr_location.Route53CidrLocation(self, "example_1",
            cidr_blocks=["200.5.3.0/24", "200.6.3.0/24"],
            cidr_collection_id=cdktf.Token.as_string(aws_route53_cidr_collection_example.id),
            name="office"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_route53_cidr_location_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `cidr_blocks` - (Required) CIDR blocks for the location.
* `cidr_collection_id` - (Required) The ID of the CIDR collection to update.
* `name` - (Required) Name for the CIDR location.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The CIDR location ID.

## Import

CIDR locations can be imported using their the CIDR collection ID and location name, e.g.,

```
$ terraform import aws_route53_cidr_location.example 9ac32814-3e67-0932-6048-8d779cc6f511,office
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-f80c2a3a6569a4b7bc7db3217a6fa0835340c38c3d4e4dee266cb99157f812c6 -->