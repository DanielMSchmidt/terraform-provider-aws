---
subcategory: "IoT Core"
layout: "aws"
page_title: "AWS: aws_iot_policy"
description: |-
  Provides an IoT policy.
---

# Resource: aws_iot_policy

Provides an IoT policy.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.iot_policy.IotPolicy(self, "pubsub",
            name="PubSubToAnyTopic",
            policy=cdktf.Fn.jsonencode({
                "Statement": [{
                    "Action": ["iot:*"],
                    "Effect": "Allow",
                    "Resource": "*"
                }
                ],
                "Version": "2012-10-17"
            })
        )
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the policy.
* `policy` - (Required) The policy document. This is a JSON formatted string. Use the [IoT Developer Guide](http://docs.aws.amazon.com/iot/latest/developerguide/iot-policies.html) for more information on IoT Policies. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - The ARN assigned by AWS to this policy.
* `name` - The name of this policy.
* `default_version_id` - The default version of this policy.
* `policy` - The policy document.

## Import

IoT policies can be imported using the `name`, e.g.,

```
$ terraform import aws_iot_policy.pubsub PubSubToAnyTopic
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-359bda269e941c342f63628dec3bc86a1bffe05e95be33a337da4856ca5b0cae -->