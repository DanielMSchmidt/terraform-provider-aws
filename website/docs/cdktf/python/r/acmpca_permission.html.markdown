---
subcategory: "ACM PCA (Certificate Manager Private Certificate Authority)"
layout: "aws"
page_title: "AWS: aws_acmpca_permission"
description: |-
  Provides a resource to manage an AWS Certificate Manager Private Certificate Authorities Permission
---

# Resource: aws_acmpca_permission

Provides a resource to manage an AWS Certificate Manager Private Certificate Authorities Permission.
Currently, this is only required in order to allow the ACM service to automatically renew certificates issued by a PCA.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_acmpca_certificate_authority_example =
        aws.acmpca_certificate_authority.AcmpcaCertificateAuthority(self, "example",
            certificate_authority_configuration=AcmpcaCertificateAuthorityCertificateAuthorityConfiguration(
                key_algorithm="RSA_4096",
                signing_algorithm="SHA512WITHRSA",
                subject=AcmpcaCertificateAuthorityCertificateAuthorityConfigurationSubject(
                    common_name="example.com"
                )
            )
        )
        aws_acmpca_permission_example =
        aws.acmpca_permission.AcmpcaPermission(self, "example_1",
            actions=["IssueCertificate", "GetCertificate", "ListPermissions"],
            certificate_authority_arn=cdktf.Token.as_string(aws_acmpca_certificate_authority_example.arn),
            principal="acm.amazonaws.com"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_acmpca_permission_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `certificate_authority_arn` - (Required) ARN of the CA that grants the permissions.
* `actions` - (Required) Actions that the specified AWS service principal can use. These include `IssueCertificate`, `GetCertificate`, and `ListPermissions`. Note that in order for ACM to automatically rotate certificates issued by a PCA, it must be granted permission on all 3 actions, as per the example above.
* `principal` - (Required) AWS service or identity that receives the permission. At this time, the only valid principal is `acm.amazonaws.com`.
* `source_account` - (Optional) ID of the calling account

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `policy` - IAM policy that is associated with the permission.

<!-- cache-key: cdktf-0.17.0-pre.15 input-d87c4522856b3e380c2ec55644803155a0f17c7d3feedf0088b464aa2e98170c -->