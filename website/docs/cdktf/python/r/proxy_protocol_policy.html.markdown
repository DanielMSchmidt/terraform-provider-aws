---
subcategory: "ELB Classic"
layout: "aws"
page_title: "AWS: aws_proxy_protocol_policy"
description: |-
  Provides a proxy protocol policy, which allows an ELB to carry a client connection information to a backend.
---

# Resource: aws_proxy_protocol_policy

Provides a proxy protocol policy, which allows an ELB to carry a client connection information to a backend.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_elb_lb = aws.elb.Elb(self, "lb",
            availability_zones=["us-east-1a"],
            listener=[ElbListener(
                instance_port=25,
                instance_protocol="tcp",
                lb_port=25,
                lb_protocol="tcp"
            ), ElbListener(
                instance_port=587,
                instance_protocol="tcp",
                lb_port=587,
                lb_protocol="tcp"
            )
            ],
            name="test-lb"
        )
        aws.proxy_protocol_policy.ProxyProtocolPolicy(self, "smtp",
            instance_ports=["25", "587"],
            load_balancer=cdktf.Token.as_string(aws_elb_lb.name)
        )
```

## Argument Reference

The following arguments are supported:

* `load_balancer` - (Required) The load balancer to which the policy
  should be attached.
* `instance_ports` - (Required) List of instance ports to which the policy
  should be applied. This can be specified if the protocol is SSL or TCP.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The ID of the policy.
* `load_balancer` - The load balancer to which the policy is attached.

<!-- cache-key: cdktf-0.17.0-pre.15 input-2e3ec1729932396800d60a35c901fb7d6b186483348a46aad41853ccb512bb98 -->