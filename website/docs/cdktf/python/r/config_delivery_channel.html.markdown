---
subcategory: "Config"
layout: "aws"
page_title: "AWS: aws_config_delivery_channel"
description: |-
  Provides an AWS Config Delivery Channel.
---

# Resource: aws_config_delivery_channel

Provides an AWS Config Delivery Channel.

~> **Note:** Delivery Channel requires a [Configuration Recorder](/docs/providers/aws/r/config_configuration_recorder.html) to be present. Use of `depends_on` (as shown below) is recommended to avoid race conditions.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_s3_bucket_b = aws.s3_bucket.S3Bucket(self, "b",
            bucket="example-awsconfig",
            force_destroy=True
        )
        data_aws_iam_policy_document_assume_role =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "assume_role",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["sts:AssumeRole"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["config.amazonaws.com"],
                    type="Service"
                )
                ]
            )
            ]
        )
        data_aws_iam_policy_document_p =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "p",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["s3:*"],
                effect="Allow",
                resources=[
                    cdktf.Token.as_string(aws_s3_bucket_b.arn), "${" + aws_s3_bucket_b.arn + "}/*"
                ]
            )
            ]
        )
        aws_iam_role_r = aws.iam_role.IamRole(self, "r",
            assume_role_policy=cdktf.Token.as_string(data_aws_iam_policy_document_assume_role.json),
            name="awsconfig-example"
        )
        aws_iam_role_policy_p = aws.iam_role_policy.IamRolePolicy(self, "p_4",
            name="awsconfig-example",
            policy=cdktf.Token.as_string(data_aws_iam_policy_document_p.json),
            role=cdktf.Token.as_string(aws_iam_role_r.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_role_policy_p.override_logical_id("p")
        aws_config_configuration_recorder_foo =
        aws.config_configuration_recorder.ConfigConfigurationRecorder(self, "foo",
            name="example",
            role_arn=cdktf.Token.as_string(aws_iam_role_r.arn)
        )
        aws_config_delivery_channel_foo =
        aws.config_delivery_channel.ConfigDeliveryChannel(self, "foo_6",
            depends_on=[aws_config_configuration_recorder_foo],
            name="example",
            s3_bucket_name=cdktf.Token.as_string(aws_s3_bucket_b.bucket)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_config_delivery_channel_foo.override_logical_id("foo")
```

## Argument Reference

The following arguments are supported:

* `name` - (Optional) The name of the delivery channel. Defaults to `default`. Changing it recreates the resource.
* `s3_bucket_name` - (Required) The name of the S3 bucket used to store the configuration history.
* `s3_key_prefix` - (Optional) The prefix for the specified S3 bucket.
* `s3_kms_key_arn` - (Optional) The ARN of the AWS KMS key used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.
* `sns_topic_arn` - (Optional) The ARN of the SNS topic that AWS Config delivers notifications to.
* `snapshot_delivery_properties` - (Optional) Options for how AWS Config delivers configuration snapshots. See below

### `snapshot_delivery_properties`

* `delivery_frequency` - (Optional) - The frequency with which AWS Config recurringly delivers configuration snapshotsE.g., `One_Hour` or `Three_Hours`. Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The name of the delivery channel.

## Import

Delivery Channel can be imported using the name, e.g.,

```
$ terraform import aws_config_delivery_channel.foo example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e2cd4eb57620d6d582c4c116777e3303c8d298a5a8ce1d5a30baa7f7168e7112 -->