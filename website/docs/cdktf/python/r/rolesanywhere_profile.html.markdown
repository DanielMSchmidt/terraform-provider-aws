---
subcategory: "Roles Anywhere"
layout: "aws"
page_title: "AWS: aws_rolesanywhere_profile"
description: |-
  Provides a Roles Anywhere Profile resource
---

# Resource: aws_rolesanywhere_profile

Terraform resource for managing a Roles Anywhere Profile.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_iam_role_test = aws.iam_role.IamRole(self, "test",
            assume_role_policy=cdktf.Fn.jsonencode({
                "Statement": [{
                    "Action": ["sts:AssumeRole", "sts:TagSession", "sts:SetSourceIdentity"
                    ],
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "rolesanywhere.amazonaws.com"
                    },
                    "Sid": ""
                }
                ],
                "Version": "2012-10-17"
            }),
            name="test",
            path="/"
        )
        aws_rolesanywhere_profile_test =
        aws.rolesanywhere_profile.RolesanywhereProfile(self, "test_1",
            name="example",
            role_arns=[cdktf.Token.as_string(aws_iam_role_test.arn)]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_rolesanywhere_profile_test.override_logical_id("test")
```

## Argument Reference

The following arguments are supported:

* `duration_seconds` - (Optional) The number of seconds the vended session credentials are valid for. Defaults to 3600.
* `enabled` - (Optional) Whether or not the Profile is enabled.
* `managed_policy_arns` - (Optional) A list of managed policy ARNs that apply to the vended session credentials.
* `name` - (Required) The name of the Profile.
* `require_instance_properties` - (Optional) Specifies whether instance properties are required in [CreateSession](https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html) requests with this profile.
* `role_arns` - (Required) A list of IAM roles that this profile can assume
* `session_policy` - (Optional) A session policy that applies to the trust boundary of the vended session credentials.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - Amazon Resource Name (ARN) of the Profile
* `id` - The Profile ID.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

`aws_rolesanywhere_profile` can be imported using its `id`, e.g.

```
$ terraform import aws_rolesanywhere_profile.example db138a85-8925-4f9f-a409-08231233cacf
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-0c12aa571dfd8b3307e1b751e5997c57594acff2c5ad4dc89bc5d377490af3a7 -->