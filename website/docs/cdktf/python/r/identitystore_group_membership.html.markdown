---
subcategory: "SSO Identity Store"
layout: "aws"
page_title: "AWS: aws_identitystore_group_membership"
description: |-
  Terraform resource for managing an AWS IdentityStore Group Membership.
---

# Resource: aws_identitystore_group_membership

Terraform resource for managing an AWS IdentityStore Group Membership.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_aws_ssoadmin_instances_example =
        aws.data_aws_ssoadmin_instances.DataAwsSsoadminInstances(self, "example")
        aws_identitystore_group_example =
        aws.identitystore_group.IdentitystoreGroup(self, "example_1",
            description="Some group name",
            display_name="MyGroup",
            identity_store_id=cdktf.Token.as_string(
                cdktf.property_access(
                    cdktf.Fn.tolist(data_aws_ssoadmin_instances_example.identity_store_ids), ["0"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_identitystore_group_example.override_logical_id("example")
        aws_identitystore_user_example =
        aws.identitystore_user.IdentitystoreUser(self, "example_2",
            display_name="John Doe",
            identity_store_id=cdktf.Token.as_string(
                cdktf.property_access(
                    cdktf.Fn.tolist(data_aws_ssoadmin_instances_example.identity_store_ids), ["0"])),
            name=IdentitystoreUserName(
                family_name="Doe",
                given_name="John"
            ),
            user_name="john.doe@example.com"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_identitystore_user_example.override_logical_id("example")
        aws_identitystore_group_membership_example =
        aws.identitystore_group_membership.IdentitystoreGroupMembership(self, "example_3",
            group_id=cdktf.Token.as_string(aws_identitystore_group_example.group_id),
            identity_store_id=cdktf.Token.as_string(
                cdktf.property_access(
                    cdktf.Fn.tolist(data_aws_ssoadmin_instances_example.identity_store_ids), ["0"])),
            member_id=cdktf.Token.as_string(aws_identitystore_user_example.user_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_identitystore_group_membership_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `member_id` - (Required) The identifier for a user in the Identity Store.
* `group_id` - (Required)  The identifier for a group in the Identity Store.
* `identity_store_id` - (Required) Identity Store ID associated with the Single Sign-On Instance.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `membership_id` - The identifier of the newly created group membership in the Identity Store.

## Import

`aws_identitystore_group_membership` can be imported using the `identity_store_id/membership_id`, e.g.,

```
$ terraform import aws_identitystore_group_membership.example d-0000000000/00000000-0000-0000-0000-000000000000
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a6d119f90aa68a9aee898f302672658595f07443b8743cca76327622b1b88377 -->