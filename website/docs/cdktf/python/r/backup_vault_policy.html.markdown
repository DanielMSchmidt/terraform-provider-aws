---
subcategory: "Backup"
layout: "aws"
page_title: "AWS: aws_backup_vault_policy"
description: |-
  Provides an AWS Backup vault policy resource.
---

# Resource: aws_backup_vault_policy

Provides an AWS Backup vault policy resource.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_backup_vault_example = aws.backup_vault.BackupVault(self, "example",
            name="example"
        )
        data_aws_iam_policy_document_example =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "example_1",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["backup:DescribeBackupVault", "backup:DeleteBackupVault", "backup:PutBackupVaultAccessPolicy", "backup:DeleteBackupVaultAccessPolicy", "backup:GetBackupVaultAccessPolicy", "backup:StartBackupJob", "backup:GetBackupVaultNotifications", "backup:PutBackupVaultNotifications"
                ],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["*"],
                    type="AWS"
                )
                ],
                resources=[cdktf.Token.as_string(aws_backup_vault_example.arn)]
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_iam_policy_document_example.override_logical_id("example")
        aws_backup_vault_policy_example =
        aws.backup_vault_policy.BackupVaultPolicy(self, "example_2",
            backup_vault_name=cdktf.Token.as_string(aws_backup_vault_example.name),
            policy=cdktf.Token.as_string(data_aws_iam_policy_document_example.json)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_backup_vault_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `backup_vault_name` - (Required) Name of the backup vault to add policy for.
* `policy` - (Required) The backup vault access policy document in JSON format.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The name of the vault.
* `backup_vault_arn` - The ARN of the vault.

## Import

Backup vault policy can be imported using the `name`, e.g.,

```
$ terraform import aws_backup_vault_policy.test TestVault
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-46f5e6fea171b5b67d72969a4f90540b880627ac8756d421437710a83df92ffe -->