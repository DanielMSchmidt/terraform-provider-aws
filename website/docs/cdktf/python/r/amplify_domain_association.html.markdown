---
subcategory: "Amplify"
layout: "aws"
page_title: "AWS: aws_amplify_domain_association"
description: |-
  Provides an Amplify Domain Association resource.
---

# Resource: aws_amplify_domain_association

Provides an Amplify Domain Association resource.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_amplify_app_example = aws.amplify_app.AmplifyApp(self, "example",
            custom_rule=[AmplifyAppCustomRule(
                source="https://example.com",
                status="302",
                target="https://www.example.com"
            )
            ],
            name="app"
        )
        aws_amplify_branch_master = aws.amplify_branch.AmplifyBranch(self, "master",
            app_id=cdktf.Token.as_string(aws_amplify_app_example.id),
            branch_name="master"
        )
        aws_amplify_domain_association_example =
        aws.amplify_domain_association.AmplifyDomainAssociation(self, "example_2",
            app_id=cdktf.Token.as_string(aws_amplify_app_example.id),
            domain_name="example.com",
            sub_domain=[AmplifyDomainAssociationSubDomain(
                branch_name=cdktf.Token.as_string(aws_amplify_branch_master.branch_name),
                prefix=""
            ), AmplifyDomainAssociationSubDomain(
                branch_name=cdktf.Token.as_string(aws_amplify_branch_master.branch_name),
                prefix="www"
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_amplify_domain_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `app_id` - (Required) Unique ID for an Amplify app.
* `domain_name` - (Required) Domain name for the domain association.
* `enable_auto_sub_domain` - (Optional) Enables the automated creation of subdomains for branches.
* `sub_domain` - (Required) Setting for the subdomain. Documented below.
* `wait_for_verification` - (Optional) If enabled, the resource will wait for the domain association status to change to `PENDING_DEPLOYMENT` or `AVAILABLE`. Setting this to `false` will skip the process. Default: `true`.

The `sub_domain` configuration block supports the following arguments:

* `branch_name` - (Required) Branch name setting for the subdomain.
* `prefix` - (Required) Prefix setting for the subdomain.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - ARN for the domain association.
* `certificate_verification_dns_record` - The DNS record for certificate verification.

The `sub_domain` configuration block exports the following attributes:

* `dns_record` - DNS record for the subdomain.
* `verified` - Verified status of the subdomain.

## Import

Amplify domain association can be imported using `app_id` and `domain_name`, e.g.,

```
$ terraform import aws_amplify_domain_association.app d2ypk4k47z8u6/example.com
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-0816c3b38d5c2743d480a5b46b1e5fbfbbe4af2115fa7783cc8ab2b656893b0d -->