---
subcategory: "Direct Connect"
layout: "aws"
page_title: "AWS: aws_dx_hosted_private_virtual_interface_accepter"
description: |-
  Provides a resource to manage the accepter's side of a Direct Connect hosted private virtual interface.
---

# Resource: aws_dx_hosted_private_virtual_interface_accepter

Provides a resource to manage the accepter's side of a Direct Connect hosted private virtual interface.
This resource accepts ownership of a private virtual interface created by another AWS account.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.provider.AwsProvider(self, "aws")
        aws_accepter = aws.provider.AwsProvider(self, "aws_1",
            alias="accepter"
        )
        aws_vpn_gateway_vpn_gw = aws.vpn_gateway.VpnGateway(self, "vpn_gw",
            provider=aws_accepter
        )
        data_aws_caller_identity_accepter =
        aws.data_aws_caller_identity.DataAwsCallerIdentity(self, "accepter",
            provider=aws_accepter
        )
        aws_dx_hosted_private_virtual_interface_creator =
        aws.dx_hosted_private_virtual_interface.DxHostedPrivateVirtualInterface(self, "creator",
            address_family="ipv4",
            bgp_asn=65352,
            connection_id="dxcon-zzzzzzzz",
            depends_on=[aws_vpn_gateway_vpn_gw],
            name="vif-foo",
            owner_account_id=cdktf.Token.as_string(data_aws_caller_identity_accepter.account_id),
            vlan=4094
        )
        aws_dx_hosted_private_virtual_interface_accepter_accepter =
        aws.dx_hosted_private_virtual_interface_accepter.DxHostedPrivateVirtualInterfaceAccepter(self, "accepter_5",
            provider=aws_accepter,
            tags={
                "Side": "Accepter"
            },
            virtual_interface_id=cdktf.Token.as_string(aws_dx_hosted_private_virtual_interface_creator.id),
            vpn_gateway_id=cdktf.Token.as_string(aws_vpn_gateway_vpn_gw.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_dx_hosted_private_virtual_interface_accepter_accepter.override_logical_id("accepter")
```

## Argument Reference

The following arguments are supported:

* `virtual_interface_id` - (Required) The ID of the Direct Connect virtual interface to accept.
* `dx_gateway_id` - (Optional) The ID of the Direct Connect gateway to which to connect the virtual interface.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `vpn_gateway_id` - (Optional) The ID of the [virtual private gateway](vpn_gateway.html) to which to connect the virtual interface.

### Removing `aws_dx_hosted_private_virtual_interface_accepter` from your configuration

AWS allows a Direct Connect hosted private virtual interface to be deleted from either the allocator's or accepter's side.
However, Terraform only allows the Direct Connect hosted private virtual interface to be deleted from the allocator's side
by removing the corresponding `aws_dx_hosted_private_virtual_interface` resource from your configuration.
Removing a `aws_dx_hosted_private_virtual_interface_accepter` resource from your configuration will remove it
from your statefile and management, **but will not delete the Direct Connect virtual interface.**

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The ID of the virtual interface.
* `arn` - The ARN of the virtual interface.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `10m`)
- `delete` - (Default `10m`)

## Import

Direct Connect hosted private virtual interfaces can be imported using the `vif id`, e.g.,

```
$ terraform import aws_dx_hosted_private_virtual_interface_accepter.test dxvif-33cc44dd
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-4f90b1ebdff4f98641b8e50e0b04c13029dc3e97052c63cf17eee071d796d07a -->