---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_resource_policy"
description: |-
  Terraform resource for managing an AWS VPC Lattice Resource Policy.
---

# Resource: aws_vpclattice_resource_policy

Terraform resource for managing an AWS VPC Lattice Resource Policy.

## Example Usage

### Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_vpclattice_service_network_example =
        aws.vpclattice_service_network.VpclatticeServiceNetwork(self, "example",
            name="example-vpclattice-service-network"
        )
        data_aws_caller_identity_current =
        aws.data_aws_caller_identity.DataAwsCallerIdentity(self, "current")
        data_aws_partition_current = aws.data_aws_partition.DataAwsPartition(self, "current_2")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_partition_current.override_logical_id("current")
        aws_vpclattice_resource_policy_example =
        aws.vpclattice_resource_policy.VpclatticeResourcePolicy(self, "example_3",
            policy=cdktf.Fn.jsonencode({
                "Statement": [{
                    "Action": ["vpc-lattice:CreateServiceNetworkVpcAssociation", "vpc-lattice:CreateServiceNetworkServiceAssociation", "vpc-lattice:GetServiceNetwork"
                    ],
                    "Effect": "Allow",
                    "Principal": {
                        "AWS": "arn:${" + data_aws_partition_current.partition + "}:iam::${" + data_aws_caller_identity_current.account_id + "}:root"
                    },
                    "Resource": aws_vpclattice_service_network_example.arn,
                    "Sid": "test-pol-principals-6"
                }
                ],
                "Version": "2012-10-17"
            }),
            resource_arn=cdktf.Token.as_string(aws_vpclattice_service_network_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpclattice_resource_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `resource_arn` - (Required) The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
* `policy` - (Required) An IAM policy. The policy string in JSON must not contain newlines or blank lines.

## Attributes Reference

No additional attributes are exported.

## Import

VPC Lattice Resource Policy can be imported using the `resource_arn`, e.g.,

```
$ terraform import aws_vpclattice_resource_policy.example rft-8012925589
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-8705f976d624e9a849b81ea661f128586e01badf243ee85d7b861c4b3e680392 -->