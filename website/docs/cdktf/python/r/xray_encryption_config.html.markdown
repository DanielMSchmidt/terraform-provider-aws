---
subcategory: "X-Ray"
layout: "aws"
page_title: "AWS: aws_xray_encryption_config"
description: |-
    Creates and manages an AWS XRay Encryption Config.
---

# Resource: aws_xray_encryption_config

Creates and manages an AWS XRay Encryption Config.

~> **NOTE:** Removing this resource from Terraform has no effect to the encryption configuration within X-Ray.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.xray_encryption_config.XrayEncryptionConfig(self, "example",
            type="NONE"
        )
```

## Example Usage with KMS Key

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_aws_caller_identity_current =
        aws.data_aws_caller_identity.DataAwsCallerIdentity(self, "current")
        data_aws_iam_policy_document_example =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "example",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["kms:*"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["arn:aws:iam::${" + data_aws_caller_identity_current.account_id + "}:root"
                    ],
                    type="AWS"
                )
                ],
                resources=["*"],
                sid="Enable IAM User Permissions"
            )
            ]
        )
        aws_kms_key_example = aws.kms_key.KmsKey(self, "example_2",
            deletion_window_in_days=7,
            description="Some Key",
            policy=cdktf.Token.as_string(data_aws_iam_policy_document_example.json)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_kms_key_example.override_logical_id("example")
        aws_xray_encryption_config_example =
        aws.xray_encryption_config.XrayEncryptionConfig(self, "example_3",
            key_id=cdktf.Token.as_string(aws_kms_key_example.arn),
            type="KMS"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_xray_encryption_config_example.override_logical_id("example")
```

## Argument Reference

* `type` - (Required) The type of encryption. Set to `KMS` to use your own key for encryption. Set to `NONE` for default encryption.
* `key_id` - (Optional) An AWS KMS customer master key (CMK) ARN.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Region name.

## Import

XRay Encryption Config can be imported using the region name, e.g.,

```
$ terraform import aws_xray_encryption_config.example us-west-2
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-124e73fdecb5ebf1c2c029c2ed6f4f7866bd692f755017649d3a3c537d5e0bb2 -->