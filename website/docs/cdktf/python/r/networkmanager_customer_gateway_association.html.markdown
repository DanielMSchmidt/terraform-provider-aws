---
subcategory: "Network Manager"
layout: "aws"
page_title: "AWS: aws_networkmanager_customer_gateway_association"
description: |-
  Associates a customer gateway with a device and optionally, with a link.
---

# Resource: aws_networkmanager_customer_gateway_association

Associates a customer gateway with a device and optionally, with a link.
If you specify a link, it must be associated with the specified device.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_customer_gateway_example = aws.customer_gateway.CustomerGateway(self, "example",
            bgp_asn=cdktf.Token.as_string(65000),
            ip_address="172.83.124.10",
            type="ipsec.1"
        )
        aws_ec2_transit_gateway_example =
        aws.ec2_transit_gateway.Ec2TransitGateway(self, "example_1")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ec2_transit_gateway_example.override_logical_id("example")
        aws_networkmanager_global_network_example =
        aws.networkmanager_global_network.NetworkmanagerGlobalNetwork(self, "example_2",
            description="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_global_network_example.override_logical_id("example")
        aws_networkmanager_site_example =
        aws.networkmanager_site.NetworkmanagerSite(self, "example_3",
            global_network_id=cdktf.Token.as_string(aws_networkmanager_global_network_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_site_example.override_logical_id("example")
        aws_vpn_connection_example = aws.vpn_connection.VpnConnection(self, "example_4",
            customer_gateway_id=cdktf.Token.as_string(aws_customer_gateway_example.id),
            static_routes_only=True,
            transit_gateway_id=cdktf.Token.as_string(aws_ec2_transit_gateway_example.id),
            type=cdktf.Token.as_string(aws_customer_gateway_example.type)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpn_connection_example.override_logical_id("example")
        aws_networkmanager_device_example =
        aws.networkmanager_device.NetworkmanagerDevice(self, "example_5",
            global_network_id=cdktf.Token.as_string(aws_networkmanager_global_network_example.id),
            site_id=cdktf.Token.as_string(aws_networkmanager_site_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_device_example.override_logical_id("example")
        aws_networkmanager_transit_gateway_registration_example =
        aws.networkmanager_transit_gateway_registration.NetworkmanagerTransitGatewayRegistration(self, "example_6",
            depends_on=[aws_vpn_connection_example],
            global_network_id=cdktf.Token.as_string(aws_networkmanager_global_network_example.id),
            transit_gateway_arn=cdktf.Token.as_string(aws_ec2_transit_gateway_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_transit_gateway_registration_example.override_logical_id("example")
        aws_networkmanager_customer_gateway_association_example =
        aws.networkmanager_customer_gateway_association.NetworkmanagerCustomerGatewayAssociation(self, "example_7",
            customer_gateway_arn=cdktf.Token.as_string(aws_customer_gateway_example.arn),
            depends_on=[aws_networkmanager_transit_gateway_registration_example],
            device_id=cdktf.Token.as_string(aws_networkmanager_device_example.id),
            global_network_id=cdktf.Token.as_string(aws_networkmanager_global_network_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_customer_gateway_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `customer_gateway_arn` - (Required) The Amazon Resource Name (ARN) of the customer gateway.
* `device_id` - (Required) The ID of the device.
* `global_network_id` - (Required) The ID of the global network.
* `link_id` - (Optional) The ID of the link.

## Attributes Reference

No additional attributes are exported.

## Import

`aws_networkmanager_customer_gateway_association` can be imported using the global network ID and customer gateway ARN, e.g.

```
$ terraform import aws_networkmanager_customer_gateway_association.example global-network-0d47f6t230mz46dy4,arn:aws:ec2:us-west-2:123456789012:customer-gateway/cgw-123abc05e04123abc
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-383bc2c439d6fad68d8b63b5d60380c7b5d9f88773da204921429ad904823307 -->