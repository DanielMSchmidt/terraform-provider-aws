---
subcategory: "Control Tower"
layout: "aws"
page_title: "AWS: aws_controltower_control"
description: |-
  Allows the application of pre-defined controls to organizational units.
---

# Resource: aws_controltower_control

Allows the application of pre-defined controls to organizational units. For more information on usage, please see the
[AWS Control Tower User Guide](https://docs.aws.amazon.com/controltower/latest/userguide/enable-guardrails.html).

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_aws_organizations_organization_example =
        aws.data_aws_organizations_organization.DataAwsOrganizationsOrganization(self, "example")
        data_aws_organizations_organizational_units_example =
        aws.data_aws_organizations_organizational_units.DataAwsOrganizationsOrganizationalUnits(self, "example_1",
            parent_id=cdktf.Token.as_string(
                cdktf.property_access(data_aws_organizations_organization_example.roots, ["0", "id"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_organizations_organizational_units_example.override_logical_id("example")
        data_aws_region_current = aws.data_aws_region.DataAwsRegion(self, "current")
        aws_controltower_control_example =
        aws.controltower_control.ControltowerControl(self, "example_3",
            control_identifier="arn:aws:controltower:${" + data_aws_region_current.name + "}::control/AWS-GR_EC2_VOLUME_INUSE_CHECK",
            target_identifier=cdktf.Token.as_string(
                cdktf.property_access("${[ for x in ${" + data_aws_organizations_organizational_units_example.children + "} : x.arn if x.name == \"Infrastructure\"]}", ["0"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_controltower_control_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `control_identifier` - (Required) The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.
* `target_identifier` - (Required) The ARN of the organizational unit.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The ARN of the organizational unit.

## Import

Control Tower Controls can be imported using their `organizational_unit_arn/control_identifier`, e.g.,

```
$ terraform import aws_controltower_control.example arn:aws:organizations::123456789101:ou/o-qqaejywet/ou-qg5o-ufbhdtv3,arn:aws:controltower:us-east-1::control/WTDSMKDKDNLE
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-08c0c9dbf791ee519ca0aede9155164ac7bb60bb1648d5df3dafb2aa9b879d36 -->