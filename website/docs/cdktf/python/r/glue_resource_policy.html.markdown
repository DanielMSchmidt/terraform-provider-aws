---
subcategory: "Glue"
layout: "aws"
page_title: "AWS: aws_glue_resource_policy"
description: |-
  Provides a resource to configure the aws glue resource policy.
---

# Resource: aws_glue_resource_policy

Provides a Glue resource policy. Only one can exist per region.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_aws_caller_identity_current =
        aws.data_aws_caller_identity.DataAwsCallerIdentity(self, "current")
        data_aws_partition_current = aws.data_aws_partition.DataAwsPartition(self, "current_1")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_partition_current.override_logical_id("current")
        data_aws_region_current = aws.data_aws_region.DataAwsRegion(self, "current_2")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_region_current.override_logical_id("current")
        data_aws_iam_policy_document_glue_example_policy =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "glue-example-policy",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["glue:CreateTable"],
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["*"],
                    type="AWS"
                )
                ],
                resources=["arn:${" + data_aws_partition_current.partition + "}:glue:${" + data_aws_region_current.name + "}:${" + data_aws_caller_identity_current.account_id + "}:*"
                ]
            )
            ]
        )
        aws.glue_resource_policy.GlueResourcePolicy(self, "example",
            policy=cdktf.Token.as_string(data_aws_iam_policy_document_glue_example_policy.json)
        )
```

## Argument Reference

The following arguments are supported:

* `policy` â€“ (Required) The policy to be applied to the aws glue data catalog.
* `enable_hybrid` - (Optional) Indicates that you are using both methods to grant cross-account. Valid values are `TRUE` and `FALSE`. Note the terraform will not perform drift detetction on this field as its not return on read.

## Attributes Reference

No additional attributes are exported.

## Import

Glue Resource Policy can be imported using the account ID:

```
$ terraform import aws_glue_resource_policy.Test 12356789012
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9b8beb69de7318cd60c831e1797f7f9435678bc9a2618ad25e6be30273898686 -->