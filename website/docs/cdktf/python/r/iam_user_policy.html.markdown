---
subcategory: "IAM (Identity & Access Management)"
layout: "aws"
page_title: "AWS: aws_iam_user_policy"
description: |-
  Provides an IAM policy attached to a user.
---

# Resource: aws_iam_user_policy

Provides an IAM policy attached to a user.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_iam_user_lb = aws.iam_user.IamUser(self, "lb",
            name="loadbalancer",
            path="/system/"
        )
        aws.iam_user_policy.IamUserPolicy(self, "lb_ro",
            name="test",
            policy=cdktf.Fn.jsonencode({
                "Statement": [{
                    "Action": ["ec2:Describe*"],
                    "Effect": "Allow",
                    "Resource": "*"
                }
                ],
                "Version": "2012-10-17"
            }),
            user=cdktf.Token.as_string(aws_iam_user_lb.name)
        )
        aws_iam_access_key_lb = aws.iam_access_key.IamAccessKey(self, "lb_2",
            user=cdktf.Token.as_string(aws_iam_user_lb.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_access_key_lb.override_logical_id("lb")
```

## Argument Reference

The following arguments are supported:

* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).
* `name` - (Optional) The name of the policy. If omitted, Terraform will assign a random, unique name.
* `name_prefix` - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with `name`.
* `user` - (Required) IAM user to which to attach this policy.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The user policy ID, in the form of `user_name:user_policy_name`.
* `name` - The name of the policy (always set).

## Import

IAM User Policies can be imported using the `user_name:user_policy_name`, e.g.,

```
$ terraform import aws_iam_user_policy.mypolicy user_of_mypolicy_name:mypolicy_name
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-f2417818dd41e22ab21b2eec4d72c08e7c46d13af70951f7452dd727a87b16ad -->