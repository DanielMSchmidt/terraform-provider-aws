---
subcategory: "SQS (Simple Queue)"
layout: "aws"
page_title: "AWS: aws_sqs_queue_redrive_policy"
description: |-
  Provides a SQS Queue Redrive Policy resource.
---

# Resource: aws_sqs_queue_redrive_policy

Allows you to set a redrive policy of an SQS Queue
while referencing ARN of the dead letter queue inside the redrive policy.

This is useful when you want to set a dedicated
dead letter queue for a standard or FIFO queue, but need
the dead letter queue to exist before setting the redrive policy.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_sqs_queue_q = aws.sqs_queue.SqsQueue(self, "q",
            name="examplequeue"
        )
        aws_sqs_queue_ddl = aws.sqs_queue.SqsQueue(self, "ddl",
            name="examplequeue-ddl",
            redrive_allow_policy=cdktf.Fn.jsonencode({
                "redrive_permission": "byQueue",
                "source_queue_arns": [aws_sqs_queue_q.arn]
            })
        )
        aws_sqs_queue_redrive_policy_q =
        aws.sqs_queue_redrive_policy.SqsQueueRedrivePolicy(self, "q_2",
            queue_url=cdktf.Token.as_string(aws_sqs_queue_q.id),
            redrive_policy=cdktf.Fn.jsonencode({
                "dead_letter_target_arn": aws_sqs_queue_ddl.arn,
                "max_receive_count": 4
            })
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_sqs_queue_redrive_policy_q.override_logical_id("q")
```

## Argument Reference

The following arguments are supported:

* `queue_url` - (Required) The URL of the SQS Queue to which to attach the policy
* `redrive_policy` - (Required) The JSON redrive policy for the SQS queue. Accepts two key/val pairs: `deadLetterTargetArn` and `maxReceiveCount`. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).

## Attributes Reference

No additional attributes are exported.

## Import

SQS Queue Redrive Policies can be imported using the queue URL, e.g.,

```
$ terraform import aws_sqs_queue_redrive_policy.test https://queue.amazonaws.com/0123456789012/myqueue
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7e65a3007ec59694600f969d195f02c7a4326cb10920f20653db9b615ed31d4d -->