---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_auth_policy"
description: |-
  Terraform resource for managing an AWS VPC Lattice Auth Policy.
---

# Resource: aws_vpclattice_auth_policy

Terraform resource for managing an AWS VPC Lattice Auth Policy.

## Example Usage

### Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_vpclattice_service_example =
        aws.vpclattice_service.VpclatticeService(self, "example",
            auth_type="AWS_IAM",
            custom_domain_name="example.com",
            name="example-vpclattice-service"
        )
        aws_vpclattice_auth_policy_example =
        aws.vpclattice_auth_policy.VpclatticeAuthPolicy(self, "example_1",
            policy=cdktf.Fn.jsonencode({
                "Statement": [{
                    "Action": "*",
                    "Condition": {
                        "StringNotEqualsIgnoreCase": {
                            "aws:_principal_type": "anonymous"
                        }
                    },
                    "Effect": "Allow",
                    "Principal": "*",
                    "Resource": "*"
                }
                ],
                "Version": "2012-10-17"
            }),
            resource_identifier=cdktf.Token.as_string(aws_vpclattice_service_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpclattice_auth_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `resource_identifier` - (Required) The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
* `policy` - (Required) The auth policy. The policy string in JSON must not contain newlines or blank lines.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `policy` - The auth policy. The policy string in JSON must not contain newlines or blank lines.
* `state` - The state of the auth policy. The auth policy is only active when the auth type is set to AWS_IAM. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client's IAM policy. If the Auth type is NONE, then, any auth policy you provide will remain inactive.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `60m`)
* `update` - (Default `180m`)
* `delete` - (Default `90m`)

## Import

VPC Lattice Auth Policy can be imported using the `example_id_arg`, e.g.,

```
$ terraform import aws_vpclattice_auth_policy.example rft-8012925589
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-97f1ddcc6d539bd9cc8fdb132ef69de42a0b35ac7e00b27c05b04d792fb50fc3 -->