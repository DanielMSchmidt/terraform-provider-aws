---
subcategory: "AppSync"
layout: "aws"
page_title: "AWS: aws_appsync_api_key"
description: |-
  Provides an AppSync API Key.
---

# Resource: aws_appsync_api_key

Provides an AppSync API Key.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_appsync_graphql_api_example =
        aws.appsync_graphql_api.AppsyncGraphqlApi(self, "example",
            authentication_type="API_KEY",
            name="example"
        )
        aws_appsync_api_key_example = aws.appsync_api_key.AppsyncApiKey(self, "example_1",
            api_id=cdktf.Token.as_string(aws_appsync_graphql_api_example.id),
            expires="2018-05-03T04:00:00Z"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_appsync_api_key_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `api_id` - (Required) ID of the associated AppSync API
* `description` - (Optional) API key description. Defaults to "Managed by Terraform".
* `expires` - (Optional) RFC3339 string representation of the expiry date. Rounded down to nearest hour. By default, it is 7 days from the date of creation.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - API Key ID (Formatted as ApiId:Key)
* `key` - API key

## Import

`aws_appsync_api_key` can be imported using the AppSync API ID and key separated by `:`, e.g.,

```
$ terraform import aws_appsync_api_key.example xxxxx:yyyyy
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-5d48b8d5702554b7a8badf66d5c27832546ac3e0807ccd929c8b1473d59525da -->