---
subcategory: "Athena"
layout: "aws"
page_title: "AWS: aws_athena_named_query"
description: |-
  Provides an Athena Named Query resource.
---

# Resource: aws_athena_named_query

Provides an Athena Named Query resource.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_kms_key_test = aws.kms_key.KmsKey(self, "test",
            deletion_window_in_days=7,
            description="Athena KMS Key"
        )
        aws_s3_bucket_hoge = aws.s3_bucket.S3Bucket(self, "hoge",
            bucket="tf-test"
        )
        aws_athena_database_hoge = aws.athena_database.AthenaDatabase(self, "hoge_2",
            bucket=cdktf.Token.as_string(aws_s3_bucket_hoge.id),
            name="users"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_athena_database_hoge.override_logical_id("hoge")
        aws_athena_workgroup_test = aws.athena_workgroup.AthenaWorkgroup(self, "test_3",
            configuration=AthenaWorkgroupConfiguration(
                result_configuration=AthenaWorkgroupConfigurationResultConfiguration(
                    encryption_configuration=AthenaWorkgroupConfigurationResultConfigurationEncryptionConfiguration(
                        encryption_option="SSE_KMS",
                        kms_key_arn=cdktf.Token.as_string(aws_kms_key_test.arn)
                    )
                )
            ),
            name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_athena_workgroup_test.override_logical_id("test")
        aws.athena_named_query.AthenaNamedQuery(self, "foo",
            database=cdktf.Token.as_string(aws_athena_database_hoge.name),
            name="bar",
            query="SELECT * FROM ${" + aws_athena_database_hoge.name + "} limit 10;",
            workgroup=cdktf.Token.as_string(aws_athena_workgroup_test.id)
        )
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Plain language name for the query. Maximum length of 128.
* `workgroup` - (Optional) Workgroup to which the query belongs. Defaults to `primary`
* `database` - (Required) Database to which the query belongs.
* `query` - (Required) Text of the query itself. In other words, all query statements. Maximum length of 262144.
* `description` - (Optional) Brief explanation of the query. Maximum length of 1024.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Unique ID of the query.

## Import

Athena Named Query can be imported using the query ID, e.g.,

```
$ terraform import aws_athena_named_query.example 0123456789
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d1723bb8d96b59a3b28c3206758840651552c289e6a92171c0936cb744d80a7a -->