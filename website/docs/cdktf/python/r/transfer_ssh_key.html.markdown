---
subcategory: "Transfer Family"
layout: "aws"
page_title: "AWS: aws_transfer_ssh_key"
description: |-
  Provides a AWS Transfer SSH Public Key resource.
---

# Resource: aws_transfer_ssh_key

Provides a AWS Transfer User SSH Key resource.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_transfer_server_example = aws.transfer_server.TransferServer(self, "example",
            identity_provider_type="SERVICE_MANAGED",
            tags={
                "NAME": "tf-acc-test-transfer-server"
            }
        )
        data_aws_iam_policy_document_assume_role =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "assume_role",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["sts:AssumeRole"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["transfer.amazonaws.com"],
                    type="Service"
                )
                ]
            )
            ]
        )
        data_aws_iam_policy_document_example =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "example_2",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["s3:*"],
                effect="Allow",
                resources=["*"],
                sid="AllowFullAccesstoS3"
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_iam_policy_document_example.override_logical_id("example")
        aws_iam_role_example = aws.iam_role.IamRole(self, "example_3",
            assume_role_policy=cdktf.Token.as_string(data_aws_iam_policy_document_assume_role.json),
            name="tf-test-transfer-user-iam-role"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_role_example.override_logical_id("example")
        aws_iam_role_policy_example = aws.iam_role_policy.IamRolePolicy(self, "example_4",
            name="tf-test-transfer-user-iam-policy",
            policy=cdktf.Token.as_string(data_aws_iam_policy_document_example.json),
            role=cdktf.Token.as_string(aws_iam_role_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_role_policy_example.override_logical_id("example")
        aws_transfer_user_example = aws.transfer_user.TransferUser(self, "example_5",
            role=cdktf.Token.as_string(aws_iam_role_example.arn),
            server_id=cdktf.Token.as_string(aws_transfer_server_example.id),
            tags={
                "NAME": "tftestuser"
            },
            user_name="tftestuser"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_transfer_user_example.override_logical_id("example")
        aws_transfer_ssh_key_example = aws.transfer_ssh_key.TransferSshKey(self, "example_6",
            body="... SSH key ...",
            server_id=cdktf.Token.as_string(aws_transfer_server_example.id),
            user_name=cdktf.Token.as_string(aws_transfer_user_example.user_name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_transfer_ssh_key_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `server_id` - (Requirement) The Server ID of the Transfer Server (e.g., `s-12345678`)
* `user_name` - (Requirement) The name of the user account that is assigned to one or more servers.
* `body` - (Requirement) The public key portion of an SSH key pair.

## Attributes Reference

No additional attributes are exported.

## Import

Transfer SSH Public Key can be imported using the `server_id` and `user_name` and `ssh_public_key_id` separated by `/`.

```
$ terraform import aws_transfer_ssh_key.bar s-12345678/test-username/key-12345
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-1b8753e342290c5431b83618d8029e6394e9eb5a667b22b38150d8b669bc98fd -->