---
subcategory: "EventBridge Schemas"
layout: "aws"
page_title: "AWS: aws_schemas_schema"
description: |-
  Provides an EventBridge Schema resource.
---

# Resource: aws_schemas_schema

Provides an EventBridge Schema resource.

~> **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_schemas_registry_test = aws.schemas_registry.SchemasRegistry(self, "test",
            name="my_own_registry"
        )
        aws_schemas_schema_test = aws.schemas_schema.SchemasSchema(self, "test_1",
            content=cdktf.Fn.jsonencode({
                "components": {
                    "schemas": {
                        "Event": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "info": {
                    "title": "Event",
                    "version": "1.0.0"
                },
                "openapi": "3.0.0",
                "paths": {}
            }),
            description="The schema definition for my event",
            name="my_schema",
            registry_name=cdktf.Token.as_string(aws_schemas_registry_test.name),
            type="OpenApi3"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_schemas_schema_test.override_logical_id("test")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the schema. Maximum of 385 characters consisting of lower case letters, upper case letters, ., -, _, @.
* `content` - (Required) The schema specification. Must be a valid Open API 3.0 spec.
* `registry_name` - (Required) The name of the registry in which this schema belongs.
* `type` - (Required) The type of the schema. Valid values: `OpenApi3`.
* `description` - (Optional) The description of the schema. Maximum of 256 characters.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - The Amazon Resource Name (ARN) of the discoverer.
* `last_modified` - The last modified date of the schema.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `version` - The version of the schema.
* `version_created_date` - The created date of the version of the schema.

## Import

EventBridge schema can be imported using the `name` and `registry_name`, e.g.,

```console
$ terraform import aws_schemas_schema.test name/registry
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-0a02f2dd9aeff1eff144361bfeddfb27ce81f1e4da290689f5434e4334a08061 -->