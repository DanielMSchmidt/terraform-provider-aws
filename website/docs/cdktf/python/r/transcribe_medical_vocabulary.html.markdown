---
subcategory: "Transcribe"
layout: "aws"
page_title: "AWS: aws_transcribe_medical_vocabulary"
description: |-
  Terraform resource for managing an AWS Transcribe MedicalVocabulary.
---

# Resource: aws_transcribe_medical_vocabulary

Terraform resource for managing an AWS Transcribe MedicalVocabulary.

## Example Usage

### Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_s3_bucket_example = aws.s3_bucket.S3Bucket(self, "example",
            bucket="example-medical-vocab-123",
            force_destroy=True
        )
        aws_s3_object_object = aws.s3_object.S3Object(self, "object",
            bucket=cdktf.Token.as_string(aws_s3_bucket_example.id),
            key="transcribe/test1.txt",
            source="test.txt"
        )
        aws_transcribe_medical_vocabulary_example =
        aws.transcribe_medical_vocabulary.TranscribeMedicalVocabulary(self, "example_2",
            depends_on=[aws_s3_object_object],
            language_code="en-US",
            tags={
                "tag1": "value1",
                "tag2": "value3"
            },
            vocabulary_file_uri="s3://${" + aws_s3_bucket_example.id + "}/${" + aws_s3_object_object.key + "}",
            vocabulary_name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_transcribe_medical_vocabulary_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `language_code` - (Required) The language code you selected for your medical vocabulary. US English (en-US) is the only language supported with Amazon Transcribe Medical.
* `vocabulary_file_uri` - (Required) The Amazon S3 location (URI) of the text file that contains your custom medical vocabulary.
* `vocabulary_name` - (Required) The name of the Medical Vocabulary.

The following arguments are optional:

* `tags` - (Optional) A map of tags to assign to the MedicalVocabulary. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Name of the MedicalVocabulary.
* `arn` - ARN of the MedicalVocabulary.
* `download_uri` - Generated download URI.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

Transcribe MedicalVocabulary can be imported using the `vocabulary_name`, e.g.,

```
$ terraform import aws_transcribe_medical_vocabulary.example example-name
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-cb291309bcfb122b50839697b13e5613902bbd051ec72725dba4fbbdd451834c -->