---
subcategory: "ECR (Elastic Container Registry)"
layout: "aws"
page_title: "AWS: aws_ecr_registry_policy"
description: |-
  Provides an Elastic Container Registry Policy.
---

# Resource: aws_ecr_registry_policy

Provides an Elastic Container Registry Policy.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_aws_caller_identity_current =
        aws.data_aws_caller_identity.DataAwsCallerIdentity(self, "current")
        data_aws_partition_current = aws.data_aws_partition.DataAwsPartition(self, "current_1")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_partition_current.override_logical_id("current")
        data_aws_region_current = aws.data_aws_region.DataAwsRegion(self, "current_2")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_region_current.override_logical_id("current")
        aws.ecr_registry_policy.EcrRegistryPolicy(self, "example",
            policy=cdktf.Fn.jsonencode({
                "Statement": [{
                    "Action": ["ecr:ReplicateImage"],
                    "Effect": "Allow",
                    "Principal": {
                        "AWS": "arn:${" + data_aws_partition_current.partition + "}:iam::${" + data_aws_caller_identity_current.account_id + "}:root"
                    },
                    "Resource": ["arn:${" + data_aws_partition_current.partition + "}:ecr:${" + data_aws_region_current.name + "}:${" + data_aws_caller_identity_current.account_id + "}:repository/*"
                    ],
                    "Sid": "testpolicy"
                }
                ],
                "Version": "2012-10-17"
            })
        )
```

## Argument Reference

The following arguments are supported:

* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `registry_id` - The registry ID where the registry was created.

## Import

ECR Registry Policy can be imported using the registry id, e.g.,

```
$ terraform import aws_ecr_registry_policy.example 123456789012
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a2c8349cf2fb0a9efb744a97ec59069c6512005289de05effc840ef30ae4c280 -->