---
subcategory: "ECR (Elastic Container Registry)"
layout: "aws"
page_title: "AWS: aws_ecr_registry_scanning_configuration"
description: |-
  Provides an Elastic Container Registry Scanning Configuration.
---

# Resource: aws_ecr_registry_scanning_configuration

Provides an Elastic Container Registry Scanning Configuration. Can't be completely deleted, instead reverts to the default `BASIC` scanning configuration without rules.

## Example Usage

### Basic example

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.ecr_registry_scanning_configuration.EcrRegistryScanningConfiguration(self, "configuration",
            rule=[EcrRegistryScanningConfigurationRule(
                repository_filter=[EcrRegistryScanningConfigurationRuleRepositoryFilter(
                    filter="example",
                    filter_type="WILDCARD"
                )
                ],
                scan_frequency="CONTINUOUS_SCAN"
            )
            ],
            scan_type="ENHANCED"
        )
```

### Multiple rules

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.ecr_registry_scanning_configuration.EcrRegistryScanningConfiguration(self, "test",
            rule=[EcrRegistryScanningConfigurationRule(
                repository_filter=[EcrRegistryScanningConfigurationRuleRepositoryFilter(
                    filter="*",
                    filter_type="WILDCARD"
                )
                ],
                scan_frequency="SCAN_ON_PUSH"
            ), EcrRegistryScanningConfigurationRule(
                repository_filter=[EcrRegistryScanningConfigurationRuleRepositoryFilter(
                    filter="example",
                    filter_type="WILDCARD"
                )
                ],
                scan_frequency="CONTINUOUS_SCAN"
            )
            ],
            scan_type="ENHANCED"
        )
```

## Argument Reference

The following arguments are supported:

- `scan_type` - (Required) the scanning type to set for the registry. Can be either `ENHANCED` or `BASIC`.
- `rule` - (Optional) One or multiple blocks specifying scanning rules to determine which repository filters are used and at what frequency scanning will occur. See [below for schema](#rule).

### rule

- `repository_filter` - (Required) One or more repository filter blocks, containing a `filter` (required string filtering repositories, see pattern regex [here](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_ScanningRepositoryFilter.html)) and a `filter_type` (required string, currently only `WILDCARD` is supported).
- `scan_frequency` - (Required) The frequency that scans are performed at for a private registry. Can be `SCAN_ON_PUSH`, `CONTINUOUS_SCAN`, or `MANUAL`.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `registry_id` - The registry ID the scanning configuration applies to.

## Import

ECR Scanning Configurations can be imported using the `registry_id`, e.g.,

```
$ terraform import aws_ecr_registry_scanning_configuration.example 012345678901
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-be93fe94b13ea6d1bcc609b53720e6a025faec6daa53ed4c7f51f9cf0665fc46 -->