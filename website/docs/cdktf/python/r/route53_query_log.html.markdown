---
subcategory: "Route 53"
layout: "aws"
page_title: "AWS: aws_route53_query_log"
description: |-
  Provides a Route53 query logging configuration resource.
---

# Resource: aws_route53_query_log

Provides a Route53 query logging configuration resource.

~> **NOTE:** There are restrictions on the configuration of query logging. Notably,
the CloudWatch log group must be in the `us-east-1` region,
a permissive CloudWatch log resource policy must be in place, and
the Route53 hosted zone must be public.
See [Configuring Logging for DNS Queries](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html?console_help=true#query-logs-configuring) for additional details.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_us_east1 = aws.provider.AwsProvider(self, "aws",
            alias="us-east-1",
            region="us-east-1"
        )
        aws_route53_zone_example_com = aws.route53_zone.Route53Zone(self, "example_com",
            name="example.com"
        )
        data_aws_iam_policy_document_route53_query_logging_policy =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "route53-query-logging-policy",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["logs:CreateLogStream", "logs:PutLogEvents"],
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["route53.amazonaws.com"],
                    type="Service"
                )
                ],
                resources=["arn:aws:logs:*:*:log-group:/aws/route53/*"]
            )
            ]
        )
        aws_cloudwatch_log_group_aws_route53_example_com =
        aws.cloudwatch_log_group.CloudwatchLogGroup(self, "aws_route53_example_com",
            name="/aws/route53/${" + aws_route53_zone_example_com.name + "}",
            provider=aws_us_east1,
            retention_in_days=30
        )
        aws_cloudwatch_log_resource_policy_route53_query_logging_policy =
        aws.cloudwatch_log_resource_policy.CloudwatchLogResourcePolicy(self, "route53-query-logging-policy_4",
            policy_document=cdktf.Token.as_string(data_aws_iam_policy_document_route53_query_logging_policy.json),
            policy_name="route53-query-logging-policy",
            provider=aws_us_east1
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cloudwatch_log_resource_policy_route53_query_logging_policy.override_logical_id("route53-query-logging-policy")
        aws_route53_query_log_example_com =
        aws.route53_query_log.Route53QueryLog(self, "example_com_5",
            cloudwatch_log_group_arn=cdktf.Token.as_string(aws_cloudwatch_log_group_aws_route53_example_com.arn),
            depends_on=[aws_cloudwatch_log_resource_policy_route53_query_logging_policy],
            zone_id=cdktf.Token.as_string(aws_route53_zone_example_com.zone_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_route53_query_log_example_com.override_logical_id("example_com")
```

## Argument Reference

The following arguments are supported:

* `cloudwatch_log_group_arn` - (Required) CloudWatch log group ARN to send query logs.
* `zone_id` - (Required) Route53 hosted zone ID to enable query logs.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - The Amazon Resource Name (ARN) of the Query Logging Config.
* `id` - The query logging configuration ID

## Import

Route53 query logging configurations can be imported using their ID, e.g.,

```
$ terraform import aws_route53_query_log.example_com xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e903d8f24920312c1eff163e0d86083e58eee808996e13b1fbfa6ce77d3820f2 -->