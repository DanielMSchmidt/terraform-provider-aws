---
subcategory: "CloudSearch"
layout: "aws"
page_title: "AWS: aws_cloudsearch_domain_service_access_policy"
description: |-
  Provides an CloudSearch domain service access policy resource. 
---

# Resource: aws_cloudsearch_domain_service_access_policy

Provides an CloudSearch domain service access policy resource.

Terraform waits for the domain service access policy to become `Active` when applying a configuration.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_cloudsearch_domain_example =
        aws.cloudsearch_domain.CloudsearchDomain(self, "example",
            name="example-domain"
        )
        data_aws_iam_policy_document_example =
        aws.data_aws_iam_policy_document.DataAwsIamPolicyDocument(self, "example_1",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["cloudsearch:search", "cloudsearch:document"],
                condition=[DataAwsIamPolicyDocumentStatementCondition(
                    test="IpAddress",
                    values=["192.0.2.0/32"],
                    variable="aws:SourceIp"
                )
                ],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["*"],
                    type="*"
                )
                ],
                sid="search_only"
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_iam_policy_document_example.override_logical_id("example")
        aws_cloudsearch_domain_service_access_policy_example =
        aws.cloudsearch_domain_service_access_policy.CloudsearchDomainServiceAccessPolicy(self, "example_2",
            access_policy=cdktf.Token.as_string(data_aws_iam_policy_document_example.json),
            domain_name=cdktf.Token.as_string(aws_cloudsearch_domain_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cloudsearch_domain_service_access_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `access_policy` - (Required) The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
* `domain_name` - (Required) The CloudSearch domain name the policy applies to.

## Attributes Reference

No additional attributes are exported.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `update` - (Default `20m`)
* `delete` - (Default `20m`)

## Import

CloudSearch domain service access policies can be imported using the domain name, e.g.,

```
$ terraform import aws_cloudsearch_domain_service_access_policy.example example-domain
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7ab1ec27d9ac7206bfcadb83263649a740d80de1ff4883772020ddf39eb28fe4 -->