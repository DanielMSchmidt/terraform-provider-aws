---
subcategory: "Elastic Beanstalk"
layout: "aws"
page_title: "AWS: aws_elastic_beanstalk_solution_stack"
description: |-
  Get an elastic beanstalk solution stack.
---

# Data Source: aws_elastic_beanstalk_solution_stack

Use this data source to get the name of a elastic beanstalk solution stack.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.data_aws_elastic_beanstalk_solution_stack.DataAwsElasticBeanstalkSolutionStack(self, "multi_docker",
            most_recent=True,
            name_regex="^64bit Amazon Linux (.*) Multi-container Docker (.*)$"
        )
```

## Argument Reference

* `most_recent` - (Optional) If more than one result is returned, use the most
recent solution stack.

* `name_regex` - Regex string to apply to the solution stack list returned
by AWS. See [Elastic Beanstalk Supported Platforms][beanstalk-platforms] from
AWS documentation for reference solution stack names.

~> **NOTE:** If more or less than a single match is returned by the search,
Terraform will fail. Ensure that your search is specific enough to return
a single solution stack, or use `most_recent` to choose the most recent one.

## Attributes Reference

* `name` - Name of the solution stack.

[beanstalk-platforms]: http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html "AWS Elastic Beanstalk Supported Platforms documentation"

<!-- cache-key: cdktf-0.17.0-pre.15 input-a2a9f66a07808be382a65f4b238ef8005193799c79d8906c224ac6157ec20f45 -->