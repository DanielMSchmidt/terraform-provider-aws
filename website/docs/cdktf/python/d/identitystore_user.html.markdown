---
subcategory: "SSO Identity Store"
layout: "aws"
page_title: "AWS: aws_identitystore_user"
description: |-
  Get information on an Identity Store User
---

# Data Source: aws_identitystore_user

Use this data source to get an Identity Store User.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_aws_ssoadmin_instances_example =
        aws.data_aws_ssoadmin_instances.DataAwsSsoadminInstances(self, "example")
        data_aws_identitystore_user_example =
        aws.data_aws_identitystore_user.DataAwsIdentitystoreUser(self, "example_1",
            alternate_identifier=DataAwsIdentitystoreUserAlternateIdentifier(
                unique_attribute=DataAwsIdentitystoreUserAlternateIdentifierUniqueAttribute(
                    attribute_path="UserName",
                    attribute_value="ExampleUser"
                )
            ),
            identity_store_id=cdktf.Token.as_string(
                cdktf.property_access(
                    cdktf.Fn.tolist(data_aws_ssoadmin_instances_example.identity_store_ids), ["0"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_identitystore_user_example.override_logical_id("example")
        cdktf.TerraformOutput(self, "user_id",
            value=data_aws_identitystore_user_example.user_id
        )
```

## Argument Reference

The following arguments are required:

* `identity_store_id` - (Required) Identity Store ID associated with the Single Sign-On Instance.

The following arguments are optional:

* `alternate_identifier` (Optional) A unique identifier for a user or group that is not the primary identifier. Conflicts with `user_id`. Detailed below.
* `user_id` - (Optional) The identifier for a user in the Identity Store.

-> Exactly one of the above arguments must be provided.

### `alternate_identifier` Configuration Block

The following arguments are supported by the `alternate_identifier` configuration block:

* `external_id` - (Optional) Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
* `unique_attribute` - (Optional) An entity attribute that's unique to a specific entity. Detailed below.

-> Exactly one of the above arguments must be provided.

### `external_id` Configuration Block

The following arguments are supported by the `external_id` configuration block:

* `id` - (Required) The identifier issued to this resource by an external identity provider.
* `issuer` - (Required) The issuer for an external identifier.

### `unique_attribute` Configuration Block

The following arguments are supported by the `unique_attribute` configuration block:

* `attribute_path` - (Required) Attribute path that is used to specify which attribute name to search. For example: `UserName`. Refer to the [User data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html).
* `attribute_value` - (Required) Value for an attribute.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Identifier of the user in the Identity Store.
* `addresses` - List of details about the user's address.
    * `country` - The country that this address is in.
    * `formatted` - The name that is typically displayed when the address is shown for display.
    * `locality` - The address locality.
    * `postal_code` - The postal code of the address.
    * `primary` - When `true`, this is the primary address associated with the user.
    * `region` - The region of the address.
    * `street_address` - The street of the address.
    * `type` - The type of address.
* `display_name` - The name that is typically displayed when the user is referenced.
* `emails` - List of details about the user's email.
    * `primary` - When `true`, this is the primary email associated with the user.
    * `type` - The type of email.
    * `value` - The email address. This value must be unique across the identity store.
* `external_ids` - List of identifiers issued to this resource by an external identity provider.
    * `id` - The identifier issued to this resource by an external identity provider.
    * `issuer` - The issuer for an external identifier.
* `locale` - The user's geographical region or location.
* `name` - Details about the user's full name.
    * `family_name` - The family name of the user.
    * `formatted` - The name that is typically displayed when the name is shown for display.
    * `given_name` - The given name of the user.
    * `honorific_prefix` - The honorific prefix of the user.
    * `honorific_suffix` - The honorific suffix of the user.
    * `middle_name` - The middle name of the user.
* `nickname` - An alternate name for the user.
* `phone_numbers` - List of details about the user's phone number.
    * `primary` - When `true`, this is the primary phone number associated with the user.
    * `type` - The type of phone number.
    * `value` - The user's phone number.
* `preferred_language` - The preferred language of the user.
* `profile_url` - An URL that may be associated with the user.
* `timezone` - The user's time zone.
* `title` - The user's title.
* `user_name` - User's user name value.
* `user_type` - The user type.

<!-- cache-key: cdktf-0.17.0-pre.15 input-e84411b4dc3469d10b972b85b956fe392c86c089cfed2bac0de394296f18cfa6 -->