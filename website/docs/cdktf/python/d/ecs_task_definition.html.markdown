---
subcategory: "ECS (Elastic Container)"
layout: "aws"
page_title: "AWS: aws_ecs_task_definition"
description: |-
    Provides details about an ecs task definition
---

# Data Source: aws_ecs_task_definition

The ECS task definition data source allows access to details of
a specific AWS ECS task definition.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws_ecs_cluster_foo = aws.ecs_cluster.EcsCluster(self, "foo",
            name="foo"
        )
        aws_ecs_task_definition_mongo =
        aws.ecs_task_definition.EcsTaskDefinition(self, "mongo",
            container_definitions="[\n  {\n    \"cpu\": 128,\n    \"environment\": [{\n      \"name\": \"SECRET\",\n      \"value\": \"KEY\"\n    }],\n    \"essential\": true,\n    \"image\": \"mongo:latest\",\n    \"memory\": 128,\n    \"memoryReservation\": 64,\n    \"name\": \"mongodb\"\n  }\n]\n",
            family="mongodb"
        )
        data_aws_ecs_task_definition_mongo =
        aws.data_aws_ecs_task_definition.DataAwsEcsTaskDefinition(self, "mongo_2",
            task_definition=cdktf.Token.as_string(aws_ecs_task_definition_mongo.family)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_ecs_task_definition_mongo.override_logical_id("mongo")
        aws_ecs_service_mongo = aws.ecs_service.EcsService(self, "mongo_3",
            cluster=cdktf.Token.as_string(aws_ecs_cluster_foo.id),
            desired_count=2,
            name="mongo",
            task_definition=cdktf.Token.as_string(data_aws_ecs_task_definition_mongo.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ecs_service_mongo.override_logical_id("mongo")
```

## Argument Reference

The following arguments are supported:

* `task_definition` - (Required) Family for the latest ACTIVE revision, family and revision (family:revision) for a specific revision in the family, the ARN of the task definition to access to.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - ARN of the task definition.
* `arn` - ARN of the task definition.
* `arn_without_revision` - ARN of the Task Definition with the trailing `revision` removed. This may be useful for situations where the latest task definition is always desired. If a revision isn't specified, the latest ACTIVE revision is used. See the [AWS documentation](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_StartTask.html#ECS-StartTask-request-taskDefinition) for details.
* `execution_role_arn` - ARN of the task execution role that the Amazon ECS container agent and the Docker.
* `family` - Family of this task definition.
* `network_mode` - Docker networking mode to use for the containers in this task.
* `revision` - Revision of this task definition.
* `status` - Status of this task definition.
* `task_role_arn` - ARN of the IAM role that containers in this task can assume.

<!-- cache-key: cdktf-0.17.0-pre.15 input-b1023f1377e85d7266f8582c455c8a154b4014ff68dabf6019c740c7308ba4b1 -->