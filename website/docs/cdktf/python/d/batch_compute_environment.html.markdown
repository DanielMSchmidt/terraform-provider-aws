---
subcategory: "Batch"
layout: "aws"
page_title: "AWS: aws_batch_compute_environment"
description: |-
    Provides details about a batch compute environment
---

# Data Source: aws_batch_compute_environment

The Batch Compute Environment data source allows access to details of a specific
compute environment within AWS Batch.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.data_aws_batch_compute_environment.DataAwsBatchComputeEnvironment(self, "batch-mongo",
            compute_environment_name="batch-mongo-production"
        )
```

## Argument Reference

The following arguments are supported:

* `compute_environment_name` - (Required) Name of the Batch Compute Environment

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - ARN of the compute environment.
* `ecs_cluster_arn` - ARN of the underlying Amazon ECS cluster used by the compute environment.
* `service_role` - ARN of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
* `type` - Type of the compute environment (for example, `MANAGED` or `UNMANAGED`).
* `status` - Current status of the compute environment (for example, `CREATING` or `VALID`).
* `status_reason` - Short, human-readable string to provide additional details about the current status of the compute environment.
* `state` - State of the compute environment (for example, `ENABLED` or `DISABLED`). If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues.
* `tags` - Key-value map of resource tags

<!-- cache-key: cdktf-0.17.0-pre.15 input-7a5f590ede3542ad841b8589a8faa7275720f2a717a82f7c436801700a972a74 -->