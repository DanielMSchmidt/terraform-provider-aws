---
subcategory: "Elastic Beanstalk"
layout: "aws"
page_title: "AWS: aws_elastic_beanstalk_application"
description: |-
  Retrieve information about an Elastic Beanstalk Application
---

# Data Source: aws_elastic_beanstalk_application

Retrieve information about an Elastic Beanstalk Application.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_aws_elastic_beanstalk_application_example =
        aws.data_aws_elastic_beanstalk_application.DataAwsElasticBeanstalkApplication(self, "example",
            name="example"
        )
        cdktf.TerraformOutput(self, "arn",
            value=data_aws_elastic_beanstalk_application_example.arn
        )
        cdktf.TerraformOutput(self, "description",
            value=data_aws_elastic_beanstalk_application_example.description
        )
```

## Argument Reference

* `name` - (Required) Name of the application

## Attributes Reference

* `id` - Name of the application
* `arn` - ARN of the application.
* `description` - Short description of the application

Application version lifecycle (`appversion_lifecycle`) supports the nested attribute containing.

* `service_role` - ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
* `max_count` - Maximum number of application versions to retain.
* `max_age_in_days` - Number of days to retain an application version.
* `delete_source_from_s3` - Specifies whether delete a version's source bundle from S3 when the application version is deleted.

<!-- cache-key: cdktf-0.17.0-pre.15 input-2bf68a9484097468f0c191f924e5ba44f7989970eb7578aef589b22a6f517add -->