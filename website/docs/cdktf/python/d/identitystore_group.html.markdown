---
subcategory: "SSO Identity Store"
layout: "aws"
page_title: "AWS: aws_identitystore_group"
description: |-
  Get information on an Identity Store Group
---

# Data Source: aws_identitystore_group

Use this data source to get an Identity Store Group.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_aws_ssoadmin_instances_example =
        aws.data_aws_ssoadmin_instances.DataAwsSsoadminInstances(self, "example")
        data_aws_identitystore_group_example =
        aws.data_aws_identitystore_group.DataAwsIdentitystoreGroup(self, "example_1",
            alternate_identifier=DataAwsIdentitystoreGroupAlternateIdentifier(
                unique_attribute=DataAwsIdentitystoreGroupAlternateIdentifierUniqueAttribute(
                    attribute_path="DisplayName",
                    attribute_value="ExampleGroup"
                )
            ),
            identity_store_id=cdktf.Token.as_string(
                cdktf.property_access(
                    cdktf.Fn.tolist(data_aws_ssoadmin_instances_example.identity_store_ids), ["0"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_identitystore_group_example.override_logical_id("example")
        cdktf.TerraformOutput(self, "group_id",
            value=data_aws_identitystore_group_example.group_id
        )
```

## Argument Reference

The following arguments are required:

* `identity_store_id` - (Required) Identity Store ID associated with the Single Sign-On Instance.

The following arguments are optional:

* `alternate_identifier` (Optional) A unique identifier for the group that is not the primary identifier. Conflicts with `group_id`. Detailed below.
* `group_id` - (Optional) The identifier for a group in the Identity Store.

-> Exactly one of the above arguments must be provided.

### `alternate_identifier` Configuration Block

The following arguments are supported by the `alternate_identifier` configuration block:

* `external_id` - (Optional) Configuration block for filtering by the identifier issued by an external identity provider. Detailed below.
* `unique_attribute` - (Optional) An entity attribute that's unique to a specific entity. Detailed below.

-> Exactly one of the above arguments must be provided.

### `external_id` Configuration Block

The following arguments are supported by the `external_id` configuration block:

* `id` - (Required) The identifier issued to this resource by an external identity provider.
* `issuer` - (Required) The issuer for an external identifier.

### `unique_attribute` Configuration Block

The following arguments are supported by the `unique_attribute` configuration block:

* `attribute_path` - (Required) Attribute path that is used to specify which attribute name to search. For example: `DisplayName`. Refer to the [Group data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html).
* `attribute_value` - (Required) Value for an attribute.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Identifier of the group in the Identity Store.
* `description` - Description of the specified group.
* `display_name` - Group's display name value.
* `external_ids` - List of identifiers issued to this resource by an external identity provider.
    * `id` - The identifier issued to this resource by an external identity provider.
    * `issuer` - The issuer for an external identifier.

<!-- cache-key: cdktf-0.17.0-pre.15 input-89120e6acd7b517e7b2ac283873268991bc08e6d9baf4f0bbadb12d7a4139e22 -->