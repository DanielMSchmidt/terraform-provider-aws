---
subcategory: "RDS (Relational Database)"
layout: "aws"
page_title: "AWS: aws_rds_reserved_instance_offering"
description: |-
  Information about a single RDS Reserved Instance Offering.
---

# Data Source: aws_rds_reserved_instance_offering

Information about a single RDS Reserved Instance Offering.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.data_aws_rds_reserved_instance_offering.DataAwsRdsReservedInstanceOffering(self, "test",
            db_instance_class="db.t2.micro",
            duration=31536000,
            multi_az=False,
            offering_type="All Upfront",
            product_description="mysql"
        )
```

## Argument Reference

The following arguments are supported:

* `db_instance_class` - (Required) DB instance class for the reserved DB instance.
* `duration` - (Required) Duration of the reservation in years or seconds. Valid values are `1`, `3`, `31536000`, `94608000`
* `multi_az` - (Required) Whether the reservation applies to Multi-AZ deployments.
* `offering_type` - (Required) Offering type of this reserved DB instance. Valid values are `No Upfront`, `Partial Upfront`, `All Upfront`.
* `product_description` - (Required) Description of the reserved DB instance.

## Attribute Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Unique identifier for the reservation. Same as `offering_id`.
* `currency_code` - Currency code for the reserved DB instance.
* `fixed_price` - Fixed price charged for this reserved DB instance.
* `offering_id` - Unique identifier for the reservation.

<!-- cache-key: cdktf-0.17.0-pre.15 input-22f471c027aeb247367b188dc85ceb1f1fd3bee4e0868cdb657881d7669e7376 -->