---
subcategory: "EBS (EC2)"
layout: "aws"
page_title: "AWS: aws_ebs_volumes"
description: |-
    Provides identifying information for EBS volumes matching given criteria
---

# Data Source: aws_ebs_volumes

`aws_ebs_volumes` provides identifying information for EBS volumes matching given criteria.

This data source can be useful for getting a list of volume IDs with (for example) matching tags.

## Example Usage

The following demonstrates obtaining a map of availability zone to EBS volume ID for volumes with a given tag value.

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_aws_ebs_volumes_example =
        aws.data_aws_ebs_volumes.DataAwsEbsVolumes(self, "example",
            tags={
                "VolumeSet": "TestVolumeSet"
            }
        )
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        data_aws_ebs_volume_example_for_each_iterator =
        cdktf.TerraformIterator.from_list(
            cdktf.Token.as_any(data_aws_ebs_volumes_example.ids))
        data_aws_ebs_volume_example = aws.data_aws_ebs_volume.DataAwsEbsVolume(self, "example_1",
            filter=[DataAwsEbsVolumeFilter(
                name="volume-id",
                values=[
                    cdktf.Token.as_string(data_aws_ebs_volume_example_for_each_iterator.value)
                ]
            )
            ],
            for_each=data_aws_ebs_volume_example_for_each_iterator
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_ebs_volume_example.override_logical_id("example")
        cdktf.TerraformOutput(self, "availability_zone_to_volume_id",
            value="${{ for s in ${" + data_aws_ebs_volume_example.fqn + "} : s.id => s.availability_zone}}"
        )
```

## Argument Reference

* `filter` - (Optional) Custom filter block as described below.

* `tags` - (Optional) Map of tags, each pair of which must exactly match
  a pair on the desired volumes.

More complex filters can be expressed using one or more `filter` sub-blocks,
which take the following arguments:

* `name` - (Required) Name of the field to filter by, as defined by
  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html).
  For example, if matching against the `size` filter, use:

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.data_aws_ebs_volumes.DataAwsEbsVolumes(self, "ten_or_twenty_gb_volumes",
            filter=[DataAwsEbsVolumesFilter(
                name="size",
                values=["10", "20"]
            )
            ]
        )
```

* `values` - (Required) Set of values that are accepted for the given field.
  EBS Volume IDs will be selected if any one of the given values match.

## Attributes Reference

* `id` - AWS Region.
* `ids` - Set of all the EBS Volume IDs found. This data source will fail if
  no volumes match the provided criteria.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `read` - (Default `20m`)

<!-- cache-key: cdktf-0.17.0-pre.15 input-7af424b0815c52c6420f5dbfd6b97dcbc1f31cb547ca733b0c17446e8c9b69d0 -->