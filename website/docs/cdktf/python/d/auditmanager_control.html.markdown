---
subcategory: "Audit Manager"
layout: "aws"
page_title: "AWS: aws_auditmanager_control"
description: |-
  Terraform data source for managing an AWS Audit Manager Control.
---

# Data Source: aws_auditmanager_control

Terraform data source for managing an AWS Audit Manager Control.

## Example Usage

### Basic Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        aws.data_aws_auditmanager_control.DataAwsAuditmanagerControl(self, "example",
            name="1. Risk Management",
            type="Standard"
        )
```

### With Framework Resource

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.aws as aws
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_aws_auditmanager_control_example =
        aws.data_aws_auditmanager_control.DataAwsAuditmanagerControl(self, "example",
            name="1. Risk Management",
            type="Standard"
        )
        data_aws_auditmanager_control_example2 =
        aws.data_aws_auditmanager_control.DataAwsAuditmanagerControl(self, "example2",
            name="2. Personnel",
            type="Standard"
        )
        aws_auditmanager_framework_example =
        aws.auditmanager_framework.AuditmanagerFramework(self, "example_2",
            control_sets=[AuditmanagerFrameworkControlSets(
                controls=[AuditmanagerFrameworkControlSetsControls(
                    id=cdktf.Token.as_string(data_aws_auditmanager_control_example.id)
                )
                ],
                name="example"
            ), AuditmanagerFrameworkControlSets(
                controls=[AuditmanagerFrameworkControlSetsControls(
                    id=cdktf.Token.as_string(data_aws_auditmanager_control_example2.id)
                )
                ],
                name="example2"
            )
            ],
            name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_auditmanager_framework_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the control.
* `type` - (Required) Type of control. Valid values are `Custom` and `Standard`.

## Attributes Reference

See the [`aws_auditmanager_control` resource](/docs/providers/aws/r/auditmanager_control.html) for details on the returned attributes - they are identical.

<!-- cache-key: cdktf-0.17.0-pre.15 input-d129f11e51cb3093ffa94e5c2bd33ac7f8f76b036aa701247f7e51a21b6fbafd -->