---
subcategory: "Audit Manager"
layout: "aws"
page_title: "AWS: aws_auditmanager_control"
description: |-
  Terraform data source for managing an AWS Audit Manager Control.
---

# Data Source: aws_auditmanager_control

Terraform data source for managing an AWS Audit Manager Control.

## Example Usage

### Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new aws.dataAwsAuditmanagerControl.DataAwsAuditmanagerControl(
      this,
      "example",
      {
        name: "1. Risk Management",
        type: "Standard",
      }
    );
  }
}

```

### With Framework Resource

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAwsAuditmanagerControlExample =
      new aws.dataAwsAuditmanagerControl.DataAwsAuditmanagerControl(
        this,
        "example",
        {
          name: "1. Risk Management",
          type: "Standard",
        }
      );
    const dataAwsAuditmanagerControlExample2 =
      new aws.dataAwsAuditmanagerControl.DataAwsAuditmanagerControl(
        this,
        "example2",
        {
          name: "2. Personnel",
          type: "Standard",
        }
      );
    const awsAuditmanagerFrameworkExample =
      new aws.auditmanagerFramework.AuditmanagerFramework(this, "example_2", {
        controlSets: [
          {
            controls: [
              {
                id: cdktf.Token.asString(dataAwsAuditmanagerControlExample.id),
              },
            ],
            name: "example",
          },
          {
            controls: [
              {
                id: cdktf.Token.asString(dataAwsAuditmanagerControlExample2.id),
              },
            ],
            name: "example2",
          },
        ],
        name: "example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAuditmanagerFrameworkExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the control.
* `type` - (Required) Type of control. Valid values are `custom` and `standard`.

## Attributes Reference

See the [`awsAuditmanagerControl` resource](/docs/providers/aws/r/auditmanager_control.html) for details on the returned attributes - they are identical.

<!-- cache-key: cdktf-0.17.0-pre.15 input-d129f11e51cb3093ffa94e5c2bd33ac7f8f76b036aa701247f7e51a21b6fbafd -->