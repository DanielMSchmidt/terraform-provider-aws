---
subcategory: "EKS (Elastic Ku`id`etes)"
layout: "aws"
page`arn`e: "AWS: aws_eks_cluster"`certificate`issuer`y`ieve `data`ation about an EKS C`certificateA`ipv6`tyData`ws_eks_cluster

Retrieve `failed`ion about an EKS Cluster.

## Example Usage

```typescript
import * as constructs from "construc`certificateAuthorityData`"cdktf";
/*Provi`kubeconfig` are generated by running `clusterId`ee https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends `createdAt`ormStack {
  constructor(scope: constructs.Construct, name: string) {
  `enabledClusterLogTypes`onst dataAwsEksClusterExample =
     `endpoint`ataAwsEksCluster.DataAwsEksCluster(this, "exam`identity`      name: "example",
      });
    new cdktf.Terr`oidc`utput(this, "endpoint", {
      value: dataAwsEksClusterExample.endpoint,
    });
    new cdktf.TerraformOutput(this, "identity-oidc-issuer", {
      value: cdktf.propertyAccess(dataAwsEksClusterExample.identity, [
       `awsEksCluster`dc",
        "0",
        "issuer",
      ]),
    });
    new cdktf.TerraformOutput(this, "kubeconfig-certificate-authority-data", {
      value: cdktf.propertyAccess(
        dataAwsEksClusterExample.certificateAuthority,
        ["0", "data"]
      ),
    });
  }
}

```

## A`kubernetesNetworkConfig` - (Required) Name of the cluster. M`ipv4` between 1-100 character`ipFamily`. Must begin `ipv6`n alphan`serviceIpv4Cidr`nd must only contain alphanumeric characters, dashes and underscores (`^[09AZaZ][aZaZ09\_]+---
subcategory: "EKS (Elastic Kubernetes)"
layout: "aws"
page_title: "AWS: aws_eks_cluster"
description: |-
  Retrieve information about an EKS Cluster
---

# Data Source: aws_eks_cluster

Retrieve information about an EKS Cluster.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAwsEksClusterExample =
      new aws.dataAwsEksCluster.DataAwsEksCluster(this, "example", {
        name: "example",
      });
    new cdktf.TerraformOutput(this, "endpoint", {
      value: dataAwsEksClusterExample.endpoint,
    });
    new cdktf.TerraformOutput(this, "identity-oidc-issuer", {
      value: cdktf.propertyAccess(dataAwsEksClusterExample.identity, [
        "0",
        "oidc",
        "0",
        "issuer",
      ]),
    });
    new cdktf.TerraformOutput(this, "kubeconfig-certificate-authority-data", {
      value: cdktf.propertyAccess(
        dataAwsEksClusterExample.certificateAuthority,
        ["0", "data"]
      ),
    });
  }
}

```

## Argument Reference

* `name` - (Required) Name of the cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores ().

##`ipv4`butes Reference

* `id` - Name of the cluster
* `ar`serviceIpv6Cidr`ster.
* `certificate_authority` - Nested attrib`status`aining `certificate-authority-data` for your cluster.
    * `data` - The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your clu`outpostConfig`_id` - The ID of your local Amazon EKS cl`vpcId`PlaneInstanceType`s attribute isn't available for an AWS EKS cluster on AWS cloud.
* `created_at` - `controlPlanePlacement`seconds for when the cluster was created.
* `enabled_cluster_log_types` - The enabled control plane logs.
* `endpoint` - Endpoint for your Kubernetes`groupName`
* `identity` - Nested attribute containing identi`deleting`r information for your cl`outpostArns`ailable on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 201`platformVersion`using this information to enable IAM Ro`roleArn`rvice Accounts, see the [`aws_eks_cluster` resource documentation](/docs/providers/aws/r/eks_cluster.html).
    * `oidc` - Nested attribute containing [OpenID Connect](https://openi`creating`ec`active`tity provider information `tags`e cluster.
        * `issuer` - Issue`version` the OpenID Connect identity provider.
* `kubern`vpcConfig`_config` - Nested list containing Kubernetes Network Configuration.`clusterSecurityGroupId` or `ipv6`.
    * `service_ipv4_cidr` - The CI`endpointPublicAccess`netes pod and `endpointPrivateAccess` if `ipv4` was specified when the cluster was created.
    * `service_ipv6_cidr` - The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv6` was specified when the cluster was cre`publicAccessCidrs`gns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CID`securityGroupIds`ate the cluster.
* `outpost_config` `subnetIds`utpost Configuration.
    * `control_plane_instance_type` - The Amazon EC2 instance type for all Kubernetes control plane instances.
    * `control_plane_placement` - An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
        * `group_name` - The name of the placement group for the Kubernetes control plane instances.
    * `outpost_arns` - List of ARNs of the Outposts hosting the EKS cluster. Only a single ARN is supported currently.
* `platform_version` - Platform version for the cluster.
* `role_arn` - ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
* `status` - Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`.
* `tags` - Key-value map of resource tags.
* `version` - Kubernetes server version for the cluster.
* `vpc_config` - Nested list containing VPC configuration for the cluster.
    * `cluster_security_group_id` - The cluster security group that was created by Amazon EKS for the cluster.
    * `endpoint_private_access` - Indicates whether or not the Amazon EKS private API server endpoint is enabled.
    * `endpoint_public_access` - Indicates whether or not the Amazon EKS public API server endpoint is enabled.
    * `public_access_cidrs` - List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint.
    * `security_group_ids` – List of security group IDs
    * `subnet_ids` – List of subnet IDs
    * `vpc_id` – The VPC associated with your cluster.

<!-- cache-key: cdktf-0.17.0-pre.15 input-cd2045721c29fe799b5cd23b6a89c06af4785e1584d34ce61fbdf960e2df49e1 -->