---
subcategory: "AppConfig"
layout: "aws"
page_title: "AWS: aws_appconfig_environment"
description: |-
  Terraform data source for managing an AWS AppConfig Environment.
---

# Data Source: aws_appconfig_environment

Provides access to an AppConfig Environment.

## Example Usage

### Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new aws.dataAwsAppconfigEnvironment.DataAwsAppconfigEnvironment(
      this,
      "example",
      {
        applicationId: "b5d5gpj",
        environmentId: "qrbb1c1",
      }
    );
  }
}

```

## Argument Reference

The following arguments are required:

* `applicationId` - (Required) ID of the AppConfig Application to which this Environment belongs.
* `environmentId` - (Required) ID of the AppConfig Environment.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - ARN of the environment.
* `name` - Name of the environment.
* `description` - Name of the environment.
* `monitor` - Set of Amazon CloudWatch alarms to monitor during the deployment process.
    * `alarmArn` - ARN of the Amazon CloudWatch alarm.
    * `alarmRoleArn` - ARN of an IAM role for AWS AppConfig to monitor.
* `state` - State of the environment. Possible values are `readyForDeployment`, `deploying`, `rollingBack`
  or `rolledBack`.
* `tags` - Map of tags for the resource.

<!-- cache-key: cdktf-0.17.0-pre.15 input-29b55d406dd4c29cddfb3f948cad3b62b6731a9e2a8cbead8f696b1aa879b0ee -->