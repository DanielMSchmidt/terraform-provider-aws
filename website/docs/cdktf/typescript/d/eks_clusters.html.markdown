---
subcategory: "EKS (Elastic Kubernetes)"
layout: "aws"
page_title: "AWS: aws_eks_clusters"
description: |-
  Retrieve EKS Clusters list
---

# Data Source: aws_eks_clusters

Retrieve EKS Clusters list

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAwsEksClustersExample =
      new aws.dataAwsEksClusters.DataAwsEksClusters(this, "example", {});
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const dataAwsEksClusterExampleForEachIterator =
      cdktf.TerraformIterator.fromList(
        cdktf.Token.asAny(cdktf.Fn.toset(dataAwsEksClustersExample.names))
      );
    const dataAwsEksClusterExample =
      new aws.dataAwsEksCluster.DataAwsEksCluster(this, "example_1", {
        name: cdktf.Token.asString(
          dataAwsEksClusterExampleForEachIterator.value
        ),
        forEach: dataAwsEksClusterExampleForEachIterator,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsEksClusterExample.overrideLogicalId("example");
  }
}

```

## Attributes Reference

* `id` - AWS Region.
* `names` - Set of EKS clusters names

<!-- cache-key: cdktf-0.17.0-pre.15 input-274167aa673a17636bb25d6f28b48a3af577eccb197fd9965e06a7c533bef087 -->