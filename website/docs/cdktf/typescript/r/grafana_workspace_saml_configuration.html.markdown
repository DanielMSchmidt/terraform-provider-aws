---
subcategory: "Managed Grafana"
layout: "aws"
page_title: "AWS: aws_grafana_workspace_saml_configuration"
description: |-
  Provides an Amazon Managed Grafana workspace SAML configuration resource.
---

# Resource: aws_grafana_workspace_saml_configuration

Provides an Amazon Managed Grafana workspace SAML configuration resource.

## Example Usage

### Basic configuration

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsIamRoleAssume = new aws.iamRole.IamRole(this, "assume", {
      assumeRolePolicy: cdktf.Fn.jsonencode({
        Statement: [
          {
            Action: "sts:AssumeRole",
            Effect: "Allow",
            Principal: {
              Service: "grafana.amazonaws.com",
            },
            Sid: "",
          },
        ],
        Version: "2012-10-17",
      }),
      name: "grafana-assume",
    });
    const awsGrafanaWorkspaceExample =
      new aws.grafanaWorkspace.GrafanaWorkspace(this, "example", {
        accountAccessType: "CURRENT_ACCOUNT",
        authenticationProviders: ["SAML"],
        permissionType: "SERVICE_MANAGED",
        roleArn: cdktf.Token.asString(awsIamRoleAssume.arn),
      });
    const awsGrafanaWorkspaceSamlConfigurationExample =
      new aws.grafanaWorkspaceSamlConfiguration.GrafanaWorkspaceSamlConfiguration(
        this,
        "example_2",
        {
          editorRoleValues: ["editor"],
          idpMetadataUrl: "https://my_idp_metadata.url",
          workspaceId: cdktf.Token.asString(awsGrafanaWorkspaceExample.id),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsGrafanaWorkspaceSamlConfigurationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `editorRoleValues` - (Required) The editor role values.
* `workspaceId` - (Required) The workspace id.

The following arguments are optional:

* `adminRoleValues` - (Optional) The admin role values.
* `allowedOrganizations` - (Optional) The allowed organizations.
* `emailAssertion` - (Optional) The email assertion.
* `groupsAssertion` - (Optional) The groups assertion.
* `idpMetadataUrl` - (Optional) The IDP Metadata URL. Note that either `idpMetadataUrl` or `idpMetadataXml` (but not both) must be specified.
* `idpMetadataXml` - (Optional) The IDP Metadata XML. Note that either `idpMetadataUrl` or `idpMetadataXml` (but not both) must be specified.
* `loginAssertion` - (Optional) The login assertion.
* `loginValidityDuration` - (Optional) The login validity duration.
* `nameAssertion` - (Optional) The name assertion.
* `orgAssertion` - (Optional) The org assertion.
* `roleAssertion` - (Optional) The role assertion.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `status` - The status of the SAML configuration.

## Import

Grafana Workspace SAML configuration can be imported using the workspace's `id`, e.g.,

```
$ terraform import aws_grafana_workspace_saml_configuration.example g-2054c75a02
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-3f700f37e72c0cc581433a8bebe0ae2331695a16cc144c1a7968d200514c8b79 -->