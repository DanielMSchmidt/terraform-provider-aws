---
subcategory: "ELB Classic"
layout: "aws"
page_title: "AWS: aws_proxy_protocol_policy"
description: |-
  Provides a proxy protocol policy, which allows an ELB to carry a client connection information to a backend.
---

# Resource: aws_proxy_protocol_policy

Provides a proxy protocol policy, which allows an ELB to carry a client connection information to a backend.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsElbLb = new aws.elb.Elb(this, "lb", {
      availabilityZones: ["us-east-1a"],
      listener: [
        {
          instancePort: 25,
          instanceProtocol: "tcp",
          lbPort: 25,
          lbProtocol: "tcp",
        },
        {
          instancePort: 587,
          instanceProtocol: "tcp",
          lbPort: 587,
          lbProtocol: "tcp",
        },
      ],
      name: "test-lb",
    });
    new aws.proxyProtocolPolicy.ProxyProtocolPolicy(this, "smtp", {
      instancePorts: ["25", "587"],
      loadBalancer: cdktf.Token.asString(awsElbLb.name),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `loadBalancer` - (Required) The load balancer to which the policy
  should be attached.
* `instancePorts` - (Required) List of instance ports to which the policy
  should be applied. This can be specified if the protocol is SSL or TCP.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The ID of the policy.
* `loadBalancer` - The load balancer to which the policy is attached.

<!-- cache-key: cdktf-0.17.0-pre.15 input-2e3ec1729932396800d60a35c901fb7d6b186483348a46aad41853ccb512bb98 -->