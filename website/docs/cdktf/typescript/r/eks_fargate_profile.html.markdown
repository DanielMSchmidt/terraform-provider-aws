---
sub`fa`id`eProfileName`c Kubernetes)"
layout: "aws"
page_title: "AWS: aw`podExecutionRoleArn`escription: |-
  Manages an EKS Fargate Profile
---

# Resource: aws_eks_fargate_profile

Manages an EKS Fargate P`selector`# Example Usage

```terraform
resource "aws_eks_fargate_profile" "example" {
  cluster_name           = aws_eks_cluster.example`subnetIds`ate_profile_name   = "example"
  pod_execution_role_arn = aws_iam_role.example.arn
  subnet_ids             = aws_subnet.example[*].id

  select`kubernetesIo/cluster/clusterName`
```

##`clusterName`Role for EKS Fargate Profile

```typescript
impo`tags`s constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.`defaultTags`dk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsIamRoleExample = new aws.iamRole.IamRole(th`namespace`e", {
      assumeRole`:`icy: cdktf.Fn.jsonencode({
        Statement: [
          {
       `labels`ion: "sts:AssumeRole",
            Effect: "Allow",
            Principal: {
              Service: "eks-fargate-pods.amazonaws.com",
            },
          },
      `arn`        Version: "2012-10-17",
      }),
      name: "eks-fargate-profile-example",
    });
    new aws.iamRolePolicyAt`status`.IamRolePolicyAttachment(
      this,
      "example-AmazonEKSFa`tagsAll`ecutionRolePolicy",
      {
        policyArn:
          "arn:aws:iam::aws:policy/Amazon`defaultTags`xecutionRolePolicy",
        role: cdktf.Token.asString(awsIamRoleExample.name),
      }
    );
  }
}

```

## Argument Reference

T`:`following arguments are required:

* `clusterName` – (Required) Name of the EKS Cluster. Must be between 1-100 ch`10M``create`ength. Must `10M` wit`delete`hanumeric character, and must only contain alphanumeric characters, dashes and`clusterName``^[09AZaZ][aZaZ09\_]+---
subcategory: "EKS (Elastic Kubernetes)"
layout: "aws"
page_title: "AWS: aws_eks_fargate_profile"
description: |-
  Manages an EKS Fargate Profile
---

# Resource: aws_eks_fargate_profile

Manages an EKS Fargate Profile.

## Example Usage

```terraform
resource "aws_eks_fargate_profile" "example" {
  cluster_name           = aws_eks_cluster.example.name
  fargate_profile_name   = "example"
  pod_execution_role_arn = aws_iam_role.example.arn
  subnet_ids             = aws_subnet.example[*].id

  selector {
    namespace = "example"
  }
}
```

### Example IAM Role for EKS Fargate Profile

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsIamRoleExample = new aws.iamRole.IamRole(this, "example", {
      assumeRolePolicy: cdktf.Fn.jsonencode({
        Statement: [
          {
            Action: "sts:AssumeRole",
            Effect: "Allow",
            Principal: {
              Service: "eks-fargate-pods.amazonaws.com",
            },
          },
        ],
        Version: "2012-10-17",
      }),
      name: "eks-fargate-profile-example",
    });
    new aws.iamRolePolicyAttachment.IamRolePolicyAttachment(
      this,
      "example-AmazonEKSFargatePodExecutionRolePolicy",
      {
        policyArn:
          "arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy",
        role: cdktf.Token.asString(awsIamRoleExample.name),
      }
    );
  }
}

```

## Argument Reference

The following arguments are required:

* `clusterName` – (Required) Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores ().
* `fargateProfileName` – (Required) Name of the EKS Fargate Profile.
* `pod_execution_role_arn` – (Required) Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Fargate Profile.
* `selector` - (Required) Configuration block(s) for selecting Kubernetes Pods to execute with this EKS Fargate Profile. Detailed below.
* `subnet_ids` – (Required) Identifiers of private EC2 Subnets to associate with the EKS Fargate Profile. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME` (where `CLUSTER_NAME` is replaced with the name of the EKS Cluster).

The following arguments are optional:

* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### selector Configuration Block

The following arguments are required:

* `namespace` - (Required) Kubernetes namespace for selection.

The following arguments are optional:

* `labels` - (Optional) Key-value map of Kubernetes labels for selection.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - Amazon Resource Name (ARN) of the EKS Fargate Profile.
* `id` - EKS Cluster name and EKS Fargate Profile name separated by a colon (`:`).
* `status` - Status of the EKS Fargate Profile.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `10m`)
* `delete` - (Default `10m`)

## Import

EKS Fargate Profiles can be imported using the `cluster_name` and `fargate_profile_name` separated by a colon (`:`), e.g.,

```
$ terraform import aws_eks_fargate_profile.my_fargate_profile my_cluster:my_fargate_profile
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d30b94566032f99ee0124f08aafaebec6c68a111159669a79f2ec46b163570e5 -->