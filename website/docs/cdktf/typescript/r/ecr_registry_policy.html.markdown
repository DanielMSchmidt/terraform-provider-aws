---
subcategory: "ECR (Elastic Container Registry)"
layout: "aws"
page_title: "AWS: aws_ecr_registry_policy"
description: |-
  Provides an Elastic Container Registry Policy.
---

# Resource: aws_ecr_registry_policy

Provides an Elastic Container Registry Policy.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAwsCallerIdentityCurrent =
      new aws.dataAwsCallerIdentity.DataAwsCallerIdentity(this, "current", {});
    const dataAwsPartitionCurrent = new aws.dataAwsPartition.DataAwsPartition(
      this,
      "current_1",
      {}
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsPartitionCurrent.overrideLogicalId("current");
    const dataAwsRegionCurrent = new aws.dataAwsRegion.DataAwsRegion(
      this,
      "current_2",
      {}
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsRegionCurrent.overrideLogicalId("current");
    new aws.ecrRegistryPolicy.EcrRegistryPolicy(this, "example", {
      policy: cdktf.Fn.jsonencode({
        Statement: [
          {
            Action: ["ecr:ReplicateImage"],
            Effect: "Allow",
            Principal: {
              AWS:
                "arn:${" +
                dataAwsPartitionCurrent.partition +
                "}:iam::${" +
                dataAwsCallerIdentityCurrent.accountId +
                "}:root",
            },
            Resource: [
              "arn:${" +
                dataAwsPartitionCurrent.partition +
                "}:ecr:${" +
                dataAwsRegionCurrent.name +
                "}:${" +
                dataAwsCallerIdentityCurrent.accountId +
                "}:repository/*",
            ],
            Sid: "testpolicy",
          },
        ],
        Version: "2012-10-17",
      }),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `registryId` - The registry ID where the registry was created.

## Import

ECR Registry Policy can be imported using the registry id, e.g.,

```
$ terraform import aws_ecr_registry_policy.example 123456789012
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a2c8349cf2fb0a9efb744a97ec59069c6512005289de05effc840ef30ae4c280 -->