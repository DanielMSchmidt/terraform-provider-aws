---
subcategory: "AppStream 2.0"
layout: "aws"
page_title: "AWS: aws_appstream_user_stack_association"
description: |-
  Manages an AppStream User Stack association.
---

# Resource: aws_appstream_user_stack_association

Manages an AppStream User Stack association.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsAppstreamStackTest = new aws.appstreamStack.AppstreamStack(
      this,
      "test",
      {
        name: "STACK NAME",
      }
    );
    const awsAppstreamUserTest = new aws.appstreamUser.AppstreamUser(
      this,
      "test_1",
      {
        authenticationType: "USERPOOL",
        userName: "EMAIL",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAppstreamUserTest.overrideLogicalId("test");
    const awsAppstreamUserStackAssociationTest =
      new aws.appstreamUserStackAssociation.AppstreamUserStackAssociation(
        this,
        "test_2",
        {
          authenticationType: cdktf.Token.asString(
            awsAppstreamUserTest.authenticationType
          ),
          stackName: cdktf.Token.asString(awsAppstreamStackTest.name),
          userName: cdktf.Token.asString(awsAppstreamUserTest.userName),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAppstreamUserStackAssociationTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

The following arguments are required:

* `authenticationType` - (Required) Authentication type for the user.
* `stackName` (Required) Name of the stack that is associated with the user.
* `userName` (Required) Email address of the user who is associated with the stack.

The following arguments are optional:

* `sendEmailNotification` - (Optional) Whether a welcome email is sent to a user after the user is created in the user pool.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Unique ID of the appstream User Stack association.

## Import

AppStream User Stack Association can be imported by using the `userName`, `authenticationType`, and `stackName`, separated by a slash (`/`), e.g.,

```
$ terraform import aws_appstream_user_stack_association.example userName/auhtenticationType/stackName
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-65103463008bc993d80aa0eb6e1bd7ce9eaf0fb635fbc5a885c122b9048395d4 -->