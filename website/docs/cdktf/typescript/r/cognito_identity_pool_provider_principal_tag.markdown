---
subcategory: "Cognito Identity"
layout: "aws"
page_title: "AWS: aws_cognito_identity_pool_provider_principal_tag"
description: |-
  Provides an AWS Cognito Identity Principal Mapping.
---

# Resource: aws_cognito_identity_pool_provider_principal_tag

Provides an AWS Cognito Identity Principal Mapping.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsCognitoUserPoolExample = new aws.cognitoUserPool.CognitoUserPool(
      this,
      "example",
      {
        autoVerifiedAttributes: ["email"],
        name: "user pool",
      }
    );
    const awsCognitoUserPoolClientExample =
      new aws.cognitoUserPoolClient.CognitoUserPoolClient(this, "example_1", {
        name: "client",
        supportedIdentityProviders: cdktf.Token.asList(
          cdktf.Fn.compact(cdktf.Token.asList(["COGNITO"]))
        ),
        userPoolId: cdktf.Token.asString(awsCognitoUserPoolExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCognitoUserPoolClientExample.overrideLogicalId("example");
    const awsCognitoIdentityPoolExample =
      new aws.cognitoIdentityPool.CognitoIdentityPool(this, "example_2", {
        allowUnauthenticatedIdentities: false,
        cognitoIdentityProviders: [
          {
            clientId: cdktf.Token.asString(awsCognitoUserPoolClientExample.id),
            providerName: cdktf.Token.asString(
              awsCognitoUserPoolExample.endpoint
            ),
            serverSideTokenCheck: false,
          },
        ],
        identityPoolName: "identity pool",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCognitoIdentityPoolExample.overrideLogicalId("example");
    const awsCognitoIdentityPoolProviderPrincipalTagExample =
      new aws.cognitoIdentityPoolProviderPrincipalTag.CognitoIdentityPoolProviderPrincipalTag(
        this,
        "example_3",
        {
          identityPoolId: cdktf.Token.asString(
            awsCognitoIdentityPoolExample.id
          ),
          identityProviderName: cdktf.Token.asString(
            awsCognitoUserPoolExample.endpoint
          ),
          principalTags: {
            test: "value",
          },
          useDefaults: false,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCognitoIdentityPoolProviderPrincipalTagExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `identityPoolId` (Required) - An identity pool ID.
* `identityProviderName` (Required) - The name of the identity provider.
* `principalTags`: (Optional: []) - String to string map of variables.
* `useDefaults`: (Optional: true) use default (username and clientID) attribute mappings.

## Attributes Reference

No additional attributes are exported.

## Import

Cognito Identity Pool Roles Attachment can be imported using the Identity Pool ID and provider name, e.g.,

```
$ terraform import aws_cognito_identity_pool_provider_principal_tag.example us-west-2_abc123:CorpAD
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9e4e93640cb696079ce7ec1538364935546bde46ea502594e6dc0067211f9507 -->