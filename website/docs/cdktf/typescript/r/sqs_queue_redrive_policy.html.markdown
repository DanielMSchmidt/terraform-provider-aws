---
subcategory: "SQS (Simple Queue)"
layout: "aws"
page_title: "AWS: aws_sqs_queue_redrive_policy"
description: |-
  Provides a SQS Queue Redrive Policy resource.
---

# Resource: aws_sqs_queue_redrive_policy

Allows you to set a redrive policy of an SQS Queue
while referencing ARN of the dead letter queue inside the redrive policy.

This is useful when you want to set a dedicated
dead letter queue for a standard or FIFO queue, but need
the dead letter queue to exist before setting the redrive policy.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsSqsQueueQ = new aws.sqsQueue.SqsQueue(this, "q", {
      name: "examplequeue",
    });
    const awsSqsQueueDdl = new aws.sqsQueue.SqsQueue(this, "ddl", {
      name: "examplequeue-ddl",
      redriveAllowPolicy: cdktf.Fn.jsonencode({
        redrivePermission: "byQueue",
        sourceQueueArns: [awsSqsQueueQ.arn],
      }),
    });
    const awsSqsQueueRedrivePolicyQ =
      new aws.sqsQueueRedrivePolicy.SqsQueueRedrivePolicy(this, "q_2", {
        queueUrl: cdktf.Token.asString(awsSqsQueueQ.id),
        redrivePolicy: cdktf.Fn.jsonencode({
          deadLetterTargetArn: awsSqsQueueDdl.arn,
          maxReceiveCount: 4,
        }),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSqsQueueRedrivePolicyQ.overrideLogicalId("q");
  }
}

```

## Argument Reference

The following arguments are supported:

* `queueUrl` - (Required) The URL of the SQS Queue to which to attach the policy
* `redrivePolicy` - (Required) The JSON redrive policy for the SQS queue. Accepts two key/val pairs: `deadLetterTargetArn` and `maxReceiveCount`. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).

## Attributes Reference

No additional attributes are exported.

## Import

SQS Queue Redrive Policies can be imported using the queue URL, e.g.,

```
$ terraform import aws_sqs_queue_redrive_policy.test https://queue.amazonaws.com/0123456789012/myqueue
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7e65a3007ec59694600f969d195f02c7a4326cb10920f20653db9b615ed31d4d -->