---
subcategory: "SSO Admin"
layout: "aws"
page_title: "AWS: aws_ssoadmin_permissions_boundary_attachment"
description: |-
  Attaches a permissions boundary policy to a Single Sign-On (SSO) Permission Set resource.
---

# Resource: aws_ssoadmin_permissions_boundary_attachment

Attaches a permissions boundary policy to a Single Sign-On (SSO) Permission Set resource.

~> **NOTE:** A permission set can have at most one permissions boundary attached; using more than one `awsSsoadminPermissionsBoundaryAttachment` references the same permission set will show a permanent difference.

## Example Usage

### Attaching a customer-managed policy

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsIamPolicyExample = new aws.iamPolicy.IamPolicy(this, "example", {
      description: "My test policy",
      name: "TestPolicy",
      policy: cdktf.Fn.jsonencode({
        Statement: [
          {
            Action: ["ec2:Describe*"],
            Effect: "Allow",
            Resource: "*",
          },
        ],
        Version: "2012-10-17",
      }),
    });
    const dataAwsSsoadminInstancesExample =
      new aws.dataAwsSsoadminInstances.DataAwsSsoadminInstances(
        this,
        "example_1",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsSsoadminInstancesExample.overrideLogicalId("example");
    const awsSsoadminPermissionSetExample =
      new aws.ssoadminPermissionSet.SsoadminPermissionSet(this, "example_2", {
        instanceArn: cdktf.Token.asString(
          cdktf.propertyAccess(
            cdktf.Fn.tolist(dataAwsSsoadminInstancesExample.arns),
            ["0"]
          )
        ),
        name: "Example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsoadminPermissionSetExample.overrideLogicalId("example");
    const awsSsoadminPermissionsBoundaryAttachmentExample =
      new aws.ssoadminPermissionsBoundaryAttachment.SsoadminPermissionsBoundaryAttachment(
        this,
        "example_3",
        {
          instanceArn: cdktf.Token.asString(
            awsSsoadminPermissionSetExample.instanceArn
          ),
          permissionSetArn: cdktf.Token.asString(
            awsSsoadminPermissionSetExample.arn
          ),
          permissionsBoundary: {
            customerManagedPolicyReference: {
              name: cdktf.Token.asString(awsIamPolicyExample.name),
              path: "/",
            },
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsoadminPermissionsBoundaryAttachmentExample.overrideLogicalId(
      "example"
    );
  }
}

```

### Attaching an AWS-managed policy

```terraform
resource "aws_ssoadmin_permissions_boundary_attachment" "example" {
  instance_arn       = aws_ssoadmin_permission_set.example.instance_arn
  permission_set_arn = aws_ssoadmin_permission_set.example.arn
  permissions_boundary {
    managed_policy_arn = "arn:aws:iam::aws:policy/ReadOnlyAccess"
  }
}
```

## Argument Reference

The following arguments are required:

* `instanceArn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
* `permissionSetArn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the Permission Set.
* `permissionsBoundary` - (Required, Forces new resource) The permissions boundary policy. See below.

### Permissions Boundary

The `permissionsBoundary` config block describes the permissions boundary policy to attach. You can reference either an AWS-managed policy, or a customer managed policy, but only one may be set.

* `managedPolicyArn` - (Optional) AWS-managed IAM policy ARN to use as the permissions boundary.
* `customerManagedPolicyReference` - (Optional) Specifies the name and path of a customer managed policy. See below.

### Customer Managed Policy Reference

The `customerManagedPolicyReference` config block describes a customer managed IAM policy. You must have an IAM policy that matches the name and path in each AWS account where you want to deploy your specified permission set.

* `name` - (Required, Forces new resource) Name of the customer managed IAM Policy to be attached.
* `path` - (Optional, Forces new resource) The path to the IAM policy to be attached. The default is `/`. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) for more information.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Permission Set Amazon Resource Name (ARN) and SSO Instance ARN, separated by a comma (`,`).

## Import

SSO Admin Permissions Boundary Attachments can be imported using the `permissionSetArn` and `instanceArn`, separated by a comma (`,`) e.g.,

```
$ terraform import aws_ssoadmin_permissions_boundary_attachment.example arn:aws:sso:::permissionSet/ssoins-2938j0x8920sbj72/ps-80383020jr9302rk,arn:aws:sso:::instance/ssoins-2938j0x8920sbj72
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-278fcc354435c682ff653cc92b868732e0afbf3278ff49e229bd4a0741251624 -->