---
subcategory: "X-Ray"
layout: "aws"
page_title: "AWS: aws_xray_encryption_config"
description: |-
    Creates and manages an AWS XRay Encryption Config.
---

# Resource: aws_xray_encryption_config

Creates and manages an AWS XRay Encryption Config.

~> **NOTE:** Removing this resource from Terraform has no effect to the encryption configuration within X-Ray.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new aws.xrayEncryptionConfig.XrayEncryptionConfig(this, "example", {
      type: "NONE",
    });
  }
}

```

## Example Usage with KMS Key

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAwsCallerIdentityCurrent =
      new aws.dataAwsCallerIdentity.DataAwsCallerIdentity(this, "current", {});
    const dataAwsIamPolicyDocumentExample =
      new aws.dataAwsIamPolicyDocument.DataAwsIamPolicyDocument(
        this,
        "example",
        {
          statement: [
            {
              actions: ["kms:*"],
              effect: "Allow",
              principals: [
                {
                  identifiers: [
                    "arn:aws:iam::${" +
                      dataAwsCallerIdentityCurrent.accountId +
                      "}:root",
                  ],
                  type: "AWS",
                },
              ],
              resources: ["*"],
              sid: "Enable IAM User Permissions",
            },
          ],
        }
      );
    const awsKmsKeyExample = new aws.kmsKey.KmsKey(this, "example_2", {
      deletionWindowInDays: 7,
      description: "Some Key",
      policy: cdktf.Token.asString(dataAwsIamPolicyDocumentExample.json),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsKmsKeyExample.overrideLogicalId("example");
    const awsXrayEncryptionConfigExample =
      new aws.xrayEncryptionConfig.XrayEncryptionConfig(this, "example_3", {
        keyId: cdktf.Token.asString(awsKmsKeyExample.arn),
        type: "KMS",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsXrayEncryptionConfigExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

* `type` - (Required) The type of encryption. Set to `kms` to use your own key for encryption. Set to `none` for default encryption.
* `keyId` - (Optional) An AWS KMS customer master key (CMK) ARN.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Region name.

## Import

XRay Encryption Config can be imported using the region name, e.g.,

```
$ terraform import aws_xray_encryption_config.example us-west-2
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-124e73fdecb5ebf1c2c029c2ed6f4f7866bd692f755017649d3a3c537d5e0bb2 -->