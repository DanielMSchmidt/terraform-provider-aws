---
subcategory: "Data Pipeline"
layout: "aws"
page_title: "AWS: aws_datapipeline_pipeline"
description: |-
  Provides a AWS DataPipeline Pipeline.
---

# Resource: aws_datapipeline_pipeline

Provides a DataPipeline Pipeline resource.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new aws.datapipelinePipeline.DatapipelinePipeline(this, "default", {
      name: "tf-pipeline-default",
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of Pipeline.
* `description` - (Optional) The description of Pipeline.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The identifier of the client certificate.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

`awsDatapipelinePipeline` can be imported by using the id (Pipeline ID), e.g.,

```
$ terraform import aws_datapipeline_pipeline.default df-1234567890
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-ac2a08087c377bd237b29f3ccc1c80a4b80ccb60d13b477963c598f018d3d5e9 -->