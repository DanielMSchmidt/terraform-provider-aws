---
subcategory: "IoT Core"
layout: "aws"
page_title: "AWS: aws_iot_certificate"
description: |-
    Creates and manages an AWS IoT certificate.
---

# Resource: aws_iot_certificate

Creates and manages an AWS IoT certificate.

## Example Usage

### With CSR

```terraform
resource "aws_iot_certificate" "cert" {
  csr    = file("/my/csr.pem")
  active = true
}
```

### Without CSR

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new aws.iotCertificate.IotCertificate(this, "cert", {
      active: true,
    });
  }
}

```

### From existing certificate without a CA

```terraform
resource "aws_iot_certificate" "cert" {
  certificate_pem = file("/my/cert.pem")
  active          = true
}
```

## Argument Reference

* `active` - (Required)  Boolean flag to indicate if the certificate should be active
* `csr` - (Optional) The certificate signing request. Review
  [CreateCertificateFromCsr](https://docs.aws.amazon.com/iot/latest/apireference/API_CreateCertificateFromCsr.html)
  for more information on generating a certificate from a certificate signing request (CSR).
  If none is specified both the certificate and keys will be generated, review [CreateKeysAndCertificate](https://docs.aws.amazon.com/iot/latest/apireference/API_CreateKeysAndCertificate.html)
  for more information on generating keys and a certificate.
* `certificatePem` - (Optional) The certificate to be registered. If `caPem` is unspecified, review
  [RegisterCertificateWithoutCA](https://docs.aws.amazon.com/iot/latest/apireference/API_RegisterCertificateWithoutCA.html).
  If `caPem` is specified, review
  [RegisterCertificate](https://docs.aws.amazon.com/iot/latest/apireference/API_RegisterCertificate.html)
  for more information on registering a certificate.
* `caPem` - (Optional) The CA certificate for the certificate to be registered. If this is set, the CA needs to be registered with AWS IoT beforehand.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The internal ID assigned to this certificate.
* `arn` - The ARN of the created certificate.
* `certificatePem` - The certificate data, in PEM format.
* `publicKey` - When neither CSR nor certificate is provided, the public key.
* `privateKey` - When neither CSR nor certificate is provided, the private key.

<!-- cache-key: cdktf-0.17.0-pre.15 input-bd27f164817cfc683246b1ca98f790e9772f2050dddcd76f81ea39034c66c11f -->