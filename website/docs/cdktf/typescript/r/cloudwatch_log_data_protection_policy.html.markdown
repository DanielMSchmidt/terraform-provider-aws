---
subcategory: "CloudWatch Logs"
layout: "aws"
page_title: "AWS: aws_cloudwatch_log_data_protection_policy"
description: |-
  Provides a CloudWatch Log Data Protection Policy resource.
---

# Resource: aws_cloudwatch_log_data_protection_policy

Provides a CloudWatch Log Data Protection Policy resource.

Read more about protecting sensitive user data in the [User Guide](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html).

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsCloudwatchLogGroupExample =
      new aws.cloudwatchLogGroup.CloudwatchLogGroup(this, "example", {
        name: "example",
      });
    const awsS3BucketExample = new aws.s3Bucket.S3Bucket(this, "example_1", {
      bucket: "example",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketExample.overrideLogicalId("example");
    const awsCloudwatchLogDataProtectionPolicyExample =
      new aws.cloudwatchLogDataProtectionPolicy.CloudwatchLogDataProtectionPolicy(
        this,
        "example_2",
        {
          logGroupName: cdktf.Token.asString(awsCloudwatchLogGroupExample.name),
          policyDocument: cdktf.Fn.jsonencode({
            Name: "Example",
            Statement: [
              {
                DataIdentifier: [
                  "arn:aws:dataprotection::aws:data-identifier/EmailAddress",
                ],
                Operation: {
                  Audit: {
                    FindingsDestination: {
                      S3: {
                        Bucket: awsS3BucketExample.bucket,
                      },
                    },
                  },
                },
                Sid: "Audit",
              },
              {
                DataIdentifier: [
                  "arn:aws:dataprotection::aws:data-identifier/EmailAddress",
                ],
                Operation: {
                  Deidentify: {
                    MaskConfig: {},
                  },
                },
                Sid: "Redact",
              },
            ],
            Version: "2021-06-01",
          }),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCloudwatchLogDataProtectionPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `logGroupName` - (Required) The name of the log group under which the log stream is to be created.
* `policyDocument` - (Required) Specifies the data protection policy in JSON. Read more at [Data protection policy syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data-start.html#mask-sensitive-log-data-policysyntax).

## Attributes Reference

No additional attributes are exported.

## Import

This resource can be imported using the `logGroupName`. For example:

```
$ terraform import aws_cloudwatch_log_data_protection_policy.example my-log-group
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-dedb86337ed85b10b60406b36e4da6c8cfde5f0a30a43c4f1ae6461a61dee079 -->