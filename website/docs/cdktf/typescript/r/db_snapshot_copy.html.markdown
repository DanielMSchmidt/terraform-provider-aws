---
subcategory: "RDS (Relational Database)"
layout: "aws"
page_title: "AWS: aws_db_snapshot_copy"
description: |-
  Manages an RDS database instance snapshot copy.
---

# Resource: aws_db_snapshot_copy

Manages an RDS database instance snapshot copy. For managing RDS database cluster snapshots, see the [`awsDbClusterSnapshot` resource](/docs/providers/aws/r/db_cluster_snapshot.html).

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsDbInstanceExample = new aws.dbInstance.DbInstance(
      this,
      "example",
      {
        allocatedStorage: 10,
        backupRetentionPeriod: 0,
        dbName: "baz",
        engine: "mysql",
        engineVersion: "5.6.21",
        instanceClass: "db.t2.micro",
        maintenanceWindow: "Fri:09:00-Fri:09:30",
        parameterGroupName: "default.mysql5.6",
        password: "barbarbarbar",
        username: "foo",
      }
    );
    const awsDbSnapshotExample = new aws.dbSnapshot.DbSnapshot(
      this,
      "example_1",
      {
        dbInstanceIdentifier: cdktf.Token.asString(
          awsDbInstanceExample.identifier
        ),
        dbSnapshotIdentifier: "testsnapshot1234",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsDbSnapshotExample.overrideLogicalId("example");
    const awsDbSnapshotCopyExample = new aws.dbSnapshotCopy.DbSnapshotCopy(
      this,
      "example_2",
      {
        sourceDbSnapshotIdentifier: cdktf.Token.asString(
          awsDbSnapshotExample.dbSnapshotArn
        ),
        targetDbSnapshotIdentifier: "testsnapshot1234-copy",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsDbSnapshotCopyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `copyTags` - (Optional) Whether to copy existing tags. Defaults to `false`.
* `destinationRegion` - (Optional) The Destination region to place snapshot copy.
* `kmsKeyId` - (Optional) KMS key ID.
* `optionGroupName`- (Optional) The name of an option group to associate with the copy of the snapshot.
* `presignedUrl` - (Optional) he URL that contains a Signature Version 4 signed request.
* `sourceDbSnapshotIdentifier` - (Required) Snapshot identifier of the source snapshot.
* `targetCustomAvailabilityZone` - (Optional) The external custom Availability Zone.
* `targetDbSnapshotIdentifier` - (Required) The Identifier for the snapshot.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Snapshot Identifier.
* `allocatedStorage` - Specifies the allocated storage size in gigabytes (GB).
* `availabilityZone` - Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.
* `dbSnapshotArn` - The Amazon Resource Name (ARN) for the DB snapshot.
* `encrypted` - Specifies whether the DB snapshot is encrypted.
* `engine` - Specifies the name of the database engine.
* `engineVersion` - Specifies the version of the database engine.
* `iops` - Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.
* `kmsKeyId` - The ARN for the KMS encryption key.
* `licenseModel` - License model information for the restored DB instance.
* `optionGroupName` - Provides the option group name for the DB snapshot.
* `sourceDbSnapshotIdentifier` - The DB snapshot Arn that the DB snapshot was copied from. It only has value in case of cross customer or cross region copy.
* `sourceRegion` - The region that the DB snapshot was created in or copied from.
* `storageType` - Specifies the storage type associated with DB snapshot.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `vpcId` - Provides the VPC ID associated with the DB snapshot.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `20M`)

## Import

`awsDbSnapshotCopy` can be imported by using the snapshot identifier, e.g.,

```
$ terraform import aws_db_snapshot_copy.example my-snapshot
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a168a30fa9e99254f8cd6d00a04bbc77720b45c0088965cb78e8447ee4736621 -->