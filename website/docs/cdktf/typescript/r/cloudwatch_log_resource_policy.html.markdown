---
subcategory: "CloudWatch Logs"
layout: "aws"
page_title: "AWS: aws_cloudwatch_log_resource_policy"
description: |-
  Provides a resource to manage a CloudWatch log resource policy
---

# Resource: aws_cloudwatch_log_resource_policy

Provides a resource to manage a CloudWatch log resource policy.

## Example Usage

### Elasticsearch Log Publishing

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAwsIamPolicyDocumentElasticsearchLogPublishingPolicy =
      new aws.dataAwsIamPolicyDocument.DataAwsIamPolicyDocument(
        this,
        "elasticsearch-log-publishing-policy",
        {
          statement: [
            {
              actions: [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:PutLogEventsBatch",
              ],
              principals: [
                {
                  identifiers: ["es.amazonaws.com"],
                  type: "Service",
                },
              ],
              resources: ["arn:aws:logs:*"],
            },
          ],
        }
      );
    const awsCloudwatchLogResourcePolicyElasticsearchLogPublishingPolicy =
      new aws.cloudwatchLogResourcePolicy.CloudwatchLogResourcePolicy(
        this,
        "elasticsearch-log-publishing-policy_1",
        {
          policyDocument: cdktf.Token.asString(
            dataAwsIamPolicyDocumentElasticsearchLogPublishingPolicy.json
          ),
          policyName: "elasticsearch-log-publishing-policy",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCloudwatchLogResourcePolicyElasticsearchLogPublishingPolicy.overrideLogicalId(
      "elasticsearch-log-publishing-policy"
    );
  }
}

```

### Route53 Query Logging

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAwsIamPolicyDocumentRoute53QueryLoggingPolicy =
      new aws.dataAwsIamPolicyDocument.DataAwsIamPolicyDocument(
        this,
        "route53-query-logging-policy",
        {
          statement: [
            {
              actions: ["logs:CreateLogStream", "logs:PutLogEvents"],
              principals: [
                {
                  identifiers: ["route53.amazonaws.com"],
                  type: "Service",
                },
              ],
              resources: ["arn:aws:logs:*:*:log-group:/aws/route53/*"],
            },
          ],
        }
      );
    const awsCloudwatchLogResourcePolicyRoute53QueryLoggingPolicy =
      new aws.cloudwatchLogResourcePolicy.CloudwatchLogResourcePolicy(
        this,
        "route53-query-logging-policy_1",
        {
          policyDocument: cdktf.Token.asString(
            dataAwsIamPolicyDocumentRoute53QueryLoggingPolicy.json
          ),
          policyName: "route53-query-logging-policy",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCloudwatchLogResourcePolicyRoute53QueryLoggingPolicy.overrideLogicalId(
      "route53-query-logging-policy"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `policyDocument` - (Required) Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.
* `policyName` - (Required) Name of the resource policy.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The name of the CloudWatch log resource policy

## Import

CloudWatch log resource policies can be imported using the policy name, e.g.,

```
$ terraform import aws_cloudwatch_log_resource_policy.MyPolicy MyPolicy
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-ba6ad3b128f8a7fc7908944ae9c344b25223db810faedd601c887ee850cb01af -->