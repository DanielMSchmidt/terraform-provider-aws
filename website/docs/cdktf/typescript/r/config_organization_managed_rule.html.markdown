---
subcategory: "Config"
layout: "aws"
page_title: "AWS: aws_config_organization_managed_rule"
description: |-
  Manages a Config Organization Managed Rule
---

# Resource: aws_config_organization_managed_rule

Manages a Config Organization Managed Rule. More information about these rules can be found in the [Enabling AWS Config Rules Across all Accounts in Your Organization](https://docs.aws.amazon.com/config/latest/developerguide/config-rule-multi-account-deployment.html) and [AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) documentation. For working with Organization Custom Rules (those invoking a custom Lambda Function), see the [`awsConfigOrganizationCustomRule` resource](/docs/providers/aws/r/config_organization_custom_rule.html).

~> **NOTE:** This resource must be created in the Organization master account and rules will include the master account unless its ID is added to the `excludedAccounts` argument.

~> **NOTE:** Every Organization account except those configured in the `excludedAccounts` argument must have a Configuration Recorder with proper IAM permissions before the rule will successfully create or update. See also the [`awsConfigConfigurationRecorder` resource](/docs/providers/aws/r/config_configuration_recorder.html).

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsOrganizationsOrganizationExample =
      new aws.organizationsOrganization.OrganizationsOrganization(
        this,
        "example",
        {
          awsServiceAccessPrincipals: [
            "config-multiaccountsetup.amazonaws.com",
          ],
          featureSet: "ALL",
        }
      );
    const awsConfigOrganizationManagedRuleExample =
      new aws.configOrganizationManagedRule.ConfigOrganizationManagedRule(
        this,
        "example_1",
        {
          dependsOn: [awsOrganizationsOrganizationExample],
          name: "example",
          ruleIdentifier: "IAM_PASSWORD_POLICY",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsConfigOrganizationManagedRuleExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the rule
* `ruleIdentifier` - (Required) Identifier of an available AWS Config Managed Rule to call. For available values, see the [List of AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html) documentation
* `description` - (Optional) Description of the rule
* `excludedAccounts` - (Optional) List of AWS account identifiers to exclude from the rule
* `inputParameters` - (Optional) A string in JSON format that is passed to the AWS Config Rule Lambda Function
* `maximumExecutionFrequency` - (Optional) The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `twentyFourHours` for periodic frequency triggered rules. Valid values: `oneHour`, `threeHours`, `sixHours`, `twelveHours`, or `twentyFourHours`.
* `resourceIdScope` - (Optional) Identifier of the AWS resource to evaluate
* `resourceTypesScope` - (Optional) List of types of AWS resources to evaluate
* `tagKeyScope` - (Optional, Required if `tagValueScope` is configured) Tag key of AWS resources to evaluate
* `tagValueScope` - (Optional) Tag value of AWS resources to evaluate

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - Amazon Resource Name (ARN) of the rule

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5M`)
* `delete` - (Default `5M`)
* `update` - (Default `5M`)

## Import

Config Organization Managed Rules can be imported using the name, e.g.,

```
$ terraform import aws_config_organization_managed_rule.example example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7181ab20143ca25af33079509d274b4157e51567c577694fa0b606cec66971d7 -->