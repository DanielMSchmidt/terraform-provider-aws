---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_resource_policy"
description: |-
  Terraform resource for managing an AWS VPC Lattice Resource Policy.
---

# Resource: aws_vpclattice_resource_policy

Terraform resource for managing an AWS VPC Lattice Resource Policy.

## Example Usage

### Basic Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsVpclatticeServiceNetworkExample =
      new aws.vpclatticeServiceNetwork.VpclatticeServiceNetwork(
        this,
        "example",
        {
          name: "example-vpclattice-service-network",
        }
      );
    const dataAwsCallerIdentityCurrent =
      new aws.dataAwsCallerIdentity.DataAwsCallerIdentity(this, "current", {});
    const dataAwsPartitionCurrent = new aws.dataAwsPartition.DataAwsPartition(
      this,
      "current_2",
      {}
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsPartitionCurrent.overrideLogicalId("current");
    const awsVpclatticeResourcePolicyExample =
      new aws.vpclatticeResourcePolicy.VpclatticeResourcePolicy(
        this,
        "example_3",
        {
          policy: cdktf.Fn.jsonencode({
            Statement: [
              {
                Action: [
                  "vpc-lattice:CreateServiceNetworkVpcAssociation",
                  "vpc-lattice:CreateServiceNetworkServiceAssociation",
                  "vpc-lattice:GetServiceNetwork",
                ],
                Effect: "Allow",
                Principal: {
                  AWS:
                    "arn:${" +
                    dataAwsPartitionCurrent.partition +
                    "}:iam::${" +
                    dataAwsCallerIdentityCurrent.accountId +
                    "}:root",
                },
                Resource: awsVpclatticeServiceNetworkExample.arn,
                Sid: "test-pol-principals-6",
              },
            ],
            Version: "2012-10-17",
          }),
          resourceArn: cdktf.Token.asString(
            awsVpclatticeServiceNetworkExample.arn
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsVpclatticeResourcePolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `resourceArn` - (Required) The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
* `policy` - (Required) An IAM policy. The policy string in JSON must not contain newlines or blank lines.

## Attributes Reference

No additional attributes are exported.

## Import

VPC Lattice Resource Policy can be imported using the `resourceArn`, e.g.,

```
$ terraform import aws_vpclattice_resource_policy.example rft-8012925589
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-8705f976d624e9a849b81ea661f128586e01badf243ee85d7b861c4b3e680392 -->