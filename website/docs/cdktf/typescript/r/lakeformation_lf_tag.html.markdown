---
subcategory: "Lake Formation"
layout: "aws"
page_title: "AWS: aws_lakeformation_lf_tag"
description: |-
    Creates a tag with the specified name and values.
---

# Resource: aws_lakeformation_lf_tag

Creates an LF-Tag with the specified name and values. Each key must have at least one value. The maximum number of values permitted is 15.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new aws.lakeformationLfTag.LakeformationLfTag(this, "example", {
      key: "module",
      values: ["Orders", "Sales", "Customers"],
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `catalogId` - (Optional) ID of the Data Catalog to create the tag in. If omitted, this defaults to the AWS Account ID.
* `key` - (Required) Key-name for the tag.
* `values` - (Required) List of possible values an attribute can take.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Catalog ID and key-name of the tag

## Import

Lake Formation LF-Tags can be imported using the `catalogId:key`. If you have not set a Catalog ID specify the AWS Account ID that the database is in, e.g.

```
$ terraform import aws_lakeformation_lf_tag.example 123456789012:some_key
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-67d97f7ed1c06f49c800850a8ed33d421cf773242ded177b6bbfa349a039cf2b -->