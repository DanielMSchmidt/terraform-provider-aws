---
subcategory: "CE (Cost Explorer)"
layout: "aws"
page_title: "AWS: aws_ce_anomaly_subscription"
description: |-
  Provides a CE Cost Anomaly Subscription
---

# Resource: aws_ce_anomaly_subscription

Provides a CE Anomaly Subscription.

## Example Usage

### Basic Example

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsCeAnomalyMonitorTest = new aws.ceAnomalyMonitor.CeAnomalyMonitor(
      this,
      "test",
      {
        monitorDimension: "SERVICE",
        monitorType: "DIMENSIONAL",
        name: "AWSServiceMonitor",
      }
    );
    const awsCeAnomalySubscriptionTest =
      new aws.ceAnomalySubscription.CeAnomalySubscription(this, "test_1", {
        frequency: "DAILY",
        monitorArnList: [cdktf.Token.asString(awsCeAnomalyMonitorTest.arn)],
        name: "DAILYSUBSCRIPTION",
        subscriber: [
          {
            address: "abc@example.com",
            type: "EMAIL",
          },
        ],
        threshold: 100,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCeAnomalySubscriptionTest.overrideLogicalId("test");
  }
}

```

### Threshold Expression

```terraform
resource "aws_ce_anomaly_subscription" "test" {
  name      = "AWSServiceMonitor"
  frequency = "DAILY"

  monitor_arn_list = [
    aws_ce_anomaly_monitor.test.arn,
  ]

  subscriber {
    type    = "EMAIL"
    address = "abc@example.com"
  }

  threshold_expression {
    dimension {
      key           = "ANOMALY_TOTAL_IMPACT_ABSOLUTE"
      values        = ["100.0"]
      match_options = ["GREATER_THAN_OR_EQUAL"]
    }
  }
}
```

### SNS Example

```terraform
resource "aws_sns_topic" "cost_anomaly_updates" {
  name = "CostAnomalyUpdates"
}

data "aws_iam_policy_document" "sns_topic_policy" {
  policy_id = "__default_policy_ID"

  statement {
    sid = "AWSAnomalyDetectionSNSPublishingPermissions"

    actions = [
      "SNS:Publish",
    ]

    effect = "Allow"

    principals {
      type        = "Service"
      identifiers = ["costalerts.amazonaws.com"]
    }

    resources = [
      aws_sns_topic.cost_anomaly_updates.arn,
    ]
  }

  statement {
    sid = "__default_statement_ID"

    actions = [
      "SNS:Subscribe",
      "SNS:SetTopicAttributes",
      "SNS:RemovePermission",
      "SNS:Receive",
      "SNS:Publish",
      "SNS:ListSubscriptionsByTopic",
      "SNS:GetTopicAttributes",
      "SNS:DeleteTopic",
      "SNS:AddPermission",
    ]

    condition {
      test     = "StringEquals"
      variable = "AWS:SourceOwner"

      values = [
        var.account-id,
      ]
    }

    effect = "Allow"

    principals {
      type        = "AWS"
      identifiers = ["*"]
    }

    resources = [
      aws_sns_topic.cost_anomaly_updates.arn,
    ]
  }
}

resource "aws_sns_topic_policy" "default" {
  arn = aws_sns_topic.cost_anomaly_updates.arn

  policy = data.aws_iam_policy_document.sns_topic_policy.json
}

resource "aws_ce_anomaly_monitor" "anomaly_monitor" {
  name              = "AWSServiceMonitor"
  monitor_type      = "DIMENSIONAL"
  monitor_dimension = "SERVICE"
}

resource "aws_ce_anomaly_subscription" "realtime_subscription" {
  name      = "RealtimeAnomalySubscription"
  threshold = 0
  frequency = "IMMEDIATE"

  monitor_arn_list = [
    aws_ce_anomaly_monitor.anomaly_monitor.arn,
  ]

  subscriber {
    type    = "SNS"
    address = aws_sns_topic.cost_anomaly_updates.arn
  }

  depends_on = [
    aws_sns_topic_policy.default,
  ]
}
```

## Argument Reference

The following arguments are required:

* `accountId` - (Optional) The unique identifier for the AWS account in which the anomaly subscription ought to be created.
* `frequency` - (Required) The frequency that anomaly reports are sent. Valid Values: `daily` | `immediate` | `weekly`.
* `monitorArnList` - (Required) A list of cost anomaly monitors.
* `name` - (Required) The name for the subscription.
* `subscriber` - (Required) A subscriber configuration. Multiple subscribers can be defined.
    * `type` - (Required) The type of subscription. Valid Values: `sns` | `email`.
    * `address` - (Required) The address of the subscriber. If type is `sns`, this will be the arn of the sns topic. If type is `email`, this will be the destination email address.
* `threshold` - (Optional) The dollar value that triggers a notification if the threshold is exceeded. Depracated, use `thresholdExpression` instead.
* `thresholdExpression` - (Optional) An Expression object used to specify the anomalies that you want to generate alerts for. See [Threshold Expression](#threshold-expression).
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Threshold Expression

* `and` - (Optional) Return results that match both [Dimension](#dimension) objects.
* `costCategory` - (Optional) Configuration block for the filter that's based on  values. See [Cost Category](#cost-category) below.
* `dimension` - (Optional) Configuration block for the specific [Dimension](#dimension) to use for.
* `not` - (Optional) Return results that match both [Dimension](#dimension) object.
* `or` - (Optional) Return results that match both [Dimension](#dimension) object.
* `tags` - (Optional) Configuration block for the specific Tag to use for. See [Tags](#tags) below.

### Cost Category

* `key` - (Optional) Unique name of the Cost Category.
* `matchOptions` - (Optional) Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `equals` and `caseSensitive`. Valid values are: `equals`,  `absent`, `startsWith`, `endsWith`, `contains`, `caseSensitive`, `caseInsensitive`.
* `values` - (Optional) Specific value of the Cost Category.

### Dimension

* `key` - (Optional) Unique name of the Cost Category.
* `matchOptions` - (Optional) Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `equals` and `caseSensitive`. Valid values are: `equals`,  `absent`, `startsWith`, `endsWith`, `contains`, `caseSensitive`, `caseInsensitive`.
* `values` - (Optional) Specific value of the Cost Category.

### Tags

* `key` - (Optional) Key for the tag.
* `matchOptions` - (Optional) Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `equals` and `caseSensitive`. Valid values are: `equals`,  `absent`, `startsWith`, `endsWith`, `contains`, `caseSensitive`, `caseInsensitive`.
* `values` - (Optional) Specific value of the Cost Category.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - ARN of the anomaly subscription.
* `id` - Unique ID of the anomaly subscription. Same as `arn`.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

`awsCeAnomalySubscription` can be imported using the `id`, e.g.

```
$ terraform import aws_ce_anomaly_subscription.example AnomalySubscriptionARN
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-72798c0ffe6f3c4d3723669b1edc369cc015d0eba86e1d99157e370683b8e0d8 -->