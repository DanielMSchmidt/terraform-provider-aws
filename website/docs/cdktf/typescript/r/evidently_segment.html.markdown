---
subcategory: "CloudWatch Evidently"
layout: "aws"
page_title: "AWS: aws_evidently_segment"
description: |-
  Provides a CloudWatch Evidently Segment resource.
---

# Resource: aws_evidently_segment

Provides a CloudWatch Evidently Segment resource.

## Example Usage

### Basic

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new aws.evidentlySegment.EvidentlySegment(this, "example", {
      name: "example",
      pattern: '{\\"Price\\":[{\\"numeric\\":[\\">\\",10,\\"<=\\",20]}]}',
      tags: {
        Key1: "example Segment",
      },
    });
  }
}

```

### With JSON object in pattern

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new aws.evidentlySegment.EvidentlySegment(this, "example", {
      name: "example",
      pattern:
        '  {\n    "Price": [\n      {\n        "numeric": [">",10,"<=",20]\n      }\n    ]\n  }\n',
      tags: {
        Key1: "example Segment",
      },
    });
  }
}

```

### With Description

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new aws.evidentlySegment.EvidentlySegment(this, "example", {
      description: "example",
      name: "example",
      pattern: '{\\"Price\\":[{\\"numeric\\":[\\">\\",10,\\"<=\\",20]}]}',
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `description` - (Optional, Forces new resource) Specifies the description of the segment.
* `name` - (Required, Forces new resource) A name for the segment.
* `pattern` - (Required, Forces new resource) The pattern to use for the segment. For more information about pattern syntax, see [Segment rule pattern syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html#CloudWatch-Evidently-segments-syntax.html).
* `tags` - (Optional) Tags to apply to the segment. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - The ARN of the segment.
* `createdTime` - The date and time that the segment is created.
* `experimentCount` - The number of experiments that this segment is used in. This count includes all current experiments, not just those that are currently running.
* `id` - The ID has the same value as the ARN of the segment.
* `lastUpdatedTime` - The date and time that this segment was most recently updated.
* `launchCount` - The number of launches that this segment is used in. This count includes all current launches, not just those that are currently running.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

CloudWatch Evidently Segment can be imported using the `arn`, e.g.,

```
$ terraform import aws_evidently_segment.example arn:aws:evidently:us-west-2:123456789012:segment/example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-ea498cd24d768f69e923d3c70a0b54f2b7561f97748b7f9de080e4fe8d729270 -->