---
subcategory: "RDS (Relational Database)"
layout: "aws"
page_title: "AWS: aws_db_snapshot"
description: |-
  Manages an RDS database instance snapshot.
---

# Resource: aws_db_snapshot

Manages an RDS database instance snapshot. For managing RDS database cluster snapshots, see the [`awsDbClusterSnapshot` resource](/docs/providers/aws/r/db_cluster_snapshot.html).

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsDbInstanceBar = new aws.dbInstance.DbInstance(this, "bar", {
      allocatedStorage: 10,
      backupRetentionPeriod: 0,
      dbName: "baz",
      engine: "mysql",
      engineVersion: "5.6.21",
      instanceClass: "db.t2.micro",
      maintenanceWindow: "Fri:09:00-Fri:09:30",
      parameterGroupName: "default.mysql5.6",
      password: "barbarbarbar",
      username: "foo",
    });
    new aws.dbSnapshot.DbSnapshot(this, "test", {
      dbInstanceIdentifier: cdktf.Token.asString(awsDbInstanceBar.identifier),
      dbSnapshotIdentifier: "testsnapshot1234",
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `dbInstanceIdentifier` - (Required) The DB Instance Identifier from which to take the snapshot.
* `dbSnapshotIdentifier` - (Required) The Identifier for the snapshot.
* `sharedAccounts` - (Optional) List of AWS Account ids to share snapshot with, use `all` to make snaphot public.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `allocatedStorage` - Specifies the allocated storage size in gigabytes (GB).
* `availabilityZone` - Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.
* `dbSnapshotArn` - The Amazon Resource Name (ARN) for the DB snapshot.
* `encrypted` - Specifies whether the DB snapshot is encrypted.
* `engine` - Specifies the name of the database engine.
* `engineVersion` - Specifies the version of the database engine.
* `iops` - Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.
* `kmsKeyId` - The ARN for the KMS encryption key.
* `licenseModel` - License model information for the restored DB instance.
* `optionGroupName` - Provides the option group name for the DB snapshot.
* `sourceDbSnapshotIdentifier` - The DB snapshot Arn that the DB snapshot was copied from. It only has value in case of cross customer or cross region copy.
* `sourceRegion` - The region that the DB snapshot was created in or copied from.
* `status` - Specifies the status of this DB snapshot.
* `storageType` - Specifies the storage type associated with DB snapshot.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `vpcId` - Provides the VPC ID associated with the DB snapshot.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `20M`)

## Import

`awsDbSnapshot` can be imported by using the snapshot identifier, e.g.,

```
$ terraform import aws_db_snapshot.example my-snapshot
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-82f1a8a20bd963ef3d22e87c238db09102701a38769cd9b4db8088ee117ade17 -->