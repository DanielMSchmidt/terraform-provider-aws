---
subcategory: "SES (Simple Email)"
layout: "aws"
page_title: "AWS: aws_ses_identity_policy"
description: |-
  Manages a SES Identity Policy
---

# Resource: aws_ses_identity_policy

Manages a SES Identity Policy. More information about SES Sending Authorization Policies can be found in the [SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html).

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsSesDomainIdentityExample =
      new aws.sesDomainIdentity.SesDomainIdentity(this, "example", {
        domain: "example.com",
      });
    const dataAwsIamPolicyDocumentExample =
      new aws.dataAwsIamPolicyDocument.DataAwsIamPolicyDocument(
        this,
        "example_1",
        {
          statement: [
            {
              actions: ["SES:SendEmail", "SES:SendRawEmail"],
              principals: [
                {
                  identifiers: ["*"],
                  type: "AWS",
                },
              ],
              resources: [
                cdktf.Token.asString(awsSesDomainIdentityExample.arn),
              ],
            },
          ],
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsIamPolicyDocumentExample.overrideLogicalId("example");
    const awsSesIdentityPolicyExample =
      new aws.sesIdentityPolicy.SesIdentityPolicy(this, "example_2", {
        identity: cdktf.Token.asString(awsSesDomainIdentityExample.arn),
        name: "example",
        policy: cdktf.Token.asString(dataAwsIamPolicyDocumentExample.json),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSesIdentityPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `identity` - (Required) Name or Amazon Resource Name (ARN) of the SES Identity.
* `name` - (Required) Name of the policy.
* `policy` - (Required) JSON string of the policy. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).

## Attributes Reference

No additional attributes are exported.

## Import

SES Identity Policies can be imported using the identity and policy name, separated by a pipe character (`|`), e.g.,

```
$ terraform import aws_ses_identity_policy.example 'example.com|example'
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e7e96b87f7a2cb43caf3397079dfc2c89203f11528e5d4f906c379370e528715 -->