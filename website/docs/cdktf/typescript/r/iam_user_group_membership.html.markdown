---
subcategory: "IAM (Identity & Access Management)"
layout: "aws"
page_title: "AWS: aws_iam_user_group_membership"
description: |-
  Provides a resource for adding an IAM User to IAM Groups without conflicting
  with itself.
---

# Resource: aws_iam_user_group_membership

Provides a resource for adding an [IAM User][2] to [IAM Groups][1]. This
resource can be used multiple times with the same user for non-overlapping
groups.

To exclusively manage the users in a group, see the
[`awsIamGroupMembership` resource][3].

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsIamGroupGroup1 = new aws.iamGroup.IamGroup(this, "group1", {
      name: "group1",
    });
    const awsIamGroupGroup2 = new aws.iamGroup.IamGroup(this, "group2", {
      name: "group2",
    });
    const awsIamGroupGroup3 = new aws.iamGroup.IamGroup(this, "group3", {
      name: "group3",
    });
    const awsIamUserUser1 = new aws.iamUser.IamUser(this, "user1", {
      name: "user1",
    });
    new aws.iamUserGroupMembership.IamUserGroupMembership(this, "example1", {
      groups: [
        cdktf.Token.asString(awsIamGroupGroup1.name),
        cdktf.Token.asString(awsIamGroupGroup2.name),
      ],
      user: cdktf.Token.asString(awsIamUserUser1.name),
    });
    new aws.iamUserGroupMembership.IamUserGroupMembership(this, "example2", {
      groups: [cdktf.Token.asString(awsIamGroupGroup3.name)],
      user: cdktf.Token.asString(awsIamUserUser1.name),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `user` - (Required) The name of the [IAM User][2] to add to groups
* `groups` - (Required) A list of [IAM Groups][1] to add the user to

## Attributes Reference

No additional attributes are exported.

[1]: /docs/providers/aws/r/iam_group.html
[2]: /docs/providers/aws/r/iam_user.html
[3]: /docs/providers/aws/r/iam_group_membership.html

## Import

IAM user group membership can be imported using the user name and group names separated by `/`.

```
$ terraform import aws_iam_user_group_membership.example1 user1/group1/group2
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d15b569b55942567d29e2a884ea1d32fee046b29ac7cec509d9bf22fde730cdd -->