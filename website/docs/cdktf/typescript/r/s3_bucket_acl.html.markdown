---
subcategory: "S3 (Simple Storage)"
layout: "aws"
page_title: "AWS: aws_s3_bucket_acl"
description: |-
  Provides an S3 bucket ACL resource.
---

# Resource: aws_s3_bucket_acl

Provides an S3 bucket ACL resource.

~> **Note:** `terraform destroy` does not delete the S3 Bucket ACL but does remove the resource from Terraform state.

## Example Usage

### With `private` ACL

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsS3BucketExample = new aws.s3Bucket.S3Bucket(this, "example", {
      bucket: "my-tf-example-bucket",
    });
    const awsS3BucketOwnershipControlsExample =
      new aws.s3BucketOwnershipControls.S3BucketOwnershipControls(
        this,
        "example_1",
        {
          bucket: cdktf.Token.asString(awsS3BucketExample.id),
          rule: {
            objectOwnership: "BucketOwnerPreferred",
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketOwnershipControlsExample.overrideLogicalId("example");
    const awsS3BucketAclExample = new aws.s3BucketAcl.S3BucketAcl(
      this,
      "example_2",
      {
        acl: "private",
        bucket: cdktf.Token.asString(awsS3BucketExample.id),
        dependsOn: [awsS3BucketOwnershipControlsExample],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketAclExample.overrideLogicalId("example");
  }
}

```

### With `publicRead` ACL

-> This example explicitly disables the default S3 bucket security settings. This
should be done with caution, as all bucket objects become publicly exposed.

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsS3BucketExample = new aws.s3Bucket.S3Bucket(this, "example", {
      bucket: "my-tf-example-bucket",
    });
    const awsS3BucketOwnershipControlsExample =
      new aws.s3BucketOwnershipControls.S3BucketOwnershipControls(
        this,
        "example_1",
        {
          bucket: cdktf.Token.asString(awsS3BucketExample.id),
          rule: {
            objectOwnership: "BucketOwnerPreferred",
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketOwnershipControlsExample.overrideLogicalId("example");
    const awsS3BucketPublicAccessBlockExample =
      new aws.s3BucketPublicAccessBlock.S3BucketPublicAccessBlock(
        this,
        "example_2",
        {
          blockPublicAcls: false,
          blockPublicPolicy: false,
          bucket: cdktf.Token.asString(awsS3BucketExample.id),
          ignorePublicAcls: false,
          restrictPublicBuckets: false,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketPublicAccessBlockExample.overrideLogicalId("example");
    const awsS3BucketAclExample = new aws.s3BucketAcl.S3BucketAcl(
      this,
      "example_3",
      {
        acl: "public-read",
        bucket: cdktf.Token.asString(awsS3BucketExample.id),
        dependsOn: [
          awsS3BucketOwnershipControlsExample,
          awsS3BucketPublicAccessBlockExample,
        ],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketAclExample.overrideLogicalId("example");
  }
}

```

### With Grants

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsS3BucketExample = new aws.s3Bucket.S3Bucket(this, "example", {
      bucket: "my-tf-example-bucket",
    });
    const awsS3BucketOwnershipControlsExample =
      new aws.s3BucketOwnershipControls.S3BucketOwnershipControls(
        this,
        "example_1",
        {
          bucket: cdktf.Token.asString(awsS3BucketExample.id),
          rule: {
            objectOwnership: "BucketOwnerPreferred",
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketOwnershipControlsExample.overrideLogicalId("example");
    const dataAwsCanonicalUserIdCurrent =
      new aws.dataAwsCanonicalUserId.DataAwsCanonicalUserId(
        this,
        "current",
        {}
      );
    const awsS3BucketAclExample = new aws.s3BucketAcl.S3BucketAcl(
      this,
      "example_3",
      {
        accessControlPolicy: {
          grant: [
            {
              grantee: {
                id: cdktf.Token.asString(dataAwsCanonicalUserIdCurrent.id),
                type: "CanonicalUser",
              },
              permission: "READ",
            },
            {
              grantee: {
                type: "Group",
                uri: "http://acs.amazonaws.com/groups/s3/LogDelivery",
              },
              permission: "READ_ACP",
            },
          ],
          owner: {
            id: cdktf.Token.asString(dataAwsCanonicalUserIdCurrent.id),
          },
        },
        bucket: cdktf.Token.asString(awsS3BucketExample.id),
        dependsOn: [awsS3BucketOwnershipControlsExample],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketAclExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `acl` - (Optional, Conflicts with `accessControlPolicy`) Canned ACL to apply to the bucket.
* `accessControlPolicy` - (Optional, Conflicts with `acl`) Configuration block that sets the ACL permissions for an object per grantee. [See below](#access_control_policy).
* `bucket` - (Required, Forces new resource) Name of the bucket.
* `expectedBucketOwner` - (Optional, Forces new resource) Account ID of the expected bucket owner.

### access_control_policy

The `accessControlPolicy` configuration block supports the following arguments:

* `grant` - (Required) Set of `grant` configuration blocks. [See below](#grant).
* `owner` - (Required) Configuration block of the bucket owner's display name and ID. [See below](#owner).

### grant

The `grant` configuration block supports the following arguments:

* `grantee` - (Required) Configuration block for the person being granted permissions. [See below](#grantee).
* `permission` - (Required) Logging permissions assigned to the grantee for the bucket.

### owner

The `owner` configuration block supports the following arguments:

* `id` - (Required) ID of the owner.
* `displayName` - (Optional) Display name of the owner.

### grantee

The `grantee` configuration block supports the following arguments:

* `emailAddress` - (Optional) Email address of the grantee. See [Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for supported AWS regions where this argument can be specified.
* `id` - (Optional) Canonical user ID of the grantee.
* `type` - (Required) Type of grantee. Valid values: `canonicalUser`, `amazonCustomerByEmail`, `group`.
* `uri` - (Optional) URI of the grantee group.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - The `bucket`, `expectedBucketOwner` (if configured), and `acl` (if configured) separated by commas (`,`).

## Import

S3 bucket ACL can be imported in one of four ways.

If the owner (account ID) of the source bucket is the _same_ account used to configure the Terraform AWS Provider, and the source bucket is **not configured** with a
[canned ACL][1] (i.e. predefined grant), the S3 bucket ACL resource should be imported using the `bucket` e.g.,

```
$ terraform import aws_s3_bucket_acl.example bucket-name
```

If the owner (account ID) of the source bucket is the _same_ account used to configure the Terraform AWS Provider, and the source bucket is **configured** with a
[canned ACL][1] (i.e. predefined grant), the S3 bucket ACL resource should be imported using the `bucket` and `acl` separated by a comma (`,`), e.g.

```
$ terraform import aws_s3_bucket_acl.example bucket-name,private
```

If the owner (account ID) of the source bucket _differs_ from the account used to configure the Terraform AWS Provider, and the source bucket is **not configured** with a
[canned ACL][1] (i.e. predefined grant), the S3 bucket ACL resource should be imported using the `bucket` and `expectedBucketOwner` separated by a comma (`,`) e.g.,

```
$ terraform import aws_s3_bucket_acl.example bucket-name,123456789012
```

If the owner (account ID) of the source bucket _differs_ from the account used to configure the Terraform AWS Provider, and the source bucket is **configured** with a
[canned ACL][1] (i.e. predefined grant), the S3 bucket ACL resource should be imported using the `bucket`, `expectedBucketOwner`, and `acl` separated by commas (`,`), e.g.,

```
$ terraform import aws_s3_bucket_acl.example bucket-name,123456789012,private
```

[1]: https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl

<!-- cache-key: cdktf-0.17.0-pre.15 input-27e4de47a1b73e781b57a90dce739bda2b8b22af58b2887ba5da7d3371d57067 -->