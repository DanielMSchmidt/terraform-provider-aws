---
subcategory: "EventBridge"
layout: "aws"
page_title: "AWS: aws_cloudwatch_event_archive"
description: |-
  Provides an EventBridge event archive resource.
---

# Resource: aws_cloudwatch_event_archive

Provides an EventBridge event archive resource.

~> **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsCloudwatchEventBusOrder =
      new aws.cloudwatchEventBus.CloudwatchEventBus(this, "order", {
        name: "orders",
      });
    const awsCloudwatchEventArchiveOrder =
      new aws.cloudwatchEventArchive.CloudwatchEventArchive(this, "order_1", {
        eventSourceArn: cdktf.Token.asString(awsCloudwatchEventBusOrder.arn),
        name: "order-archive",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCloudwatchEventArchiveOrder.overrideLogicalId("order");
  }
}

```

## Example all optional arguments

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsCloudwatchEventBusOrder =
      new aws.cloudwatchEventBus.CloudwatchEventBus(this, "order", {
        name: "orders",
      });
    const awsCloudwatchEventArchiveOrder =
      new aws.cloudwatchEventArchive.CloudwatchEventArchive(this, "order_1", {
        description: "Archived events from order service",
        eventPattern: cdktf.Fn.jsonencode({
          source: ["company.team.order"],
        }),
        eventSourceArn: cdktf.Token.asString(awsCloudwatchEventBusOrder.arn),
        name: "order-archive",
        retentionDays: 7,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCloudwatchEventArchiveOrder.overrideLogicalId("order");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the new event archive. The archive name cannot exceed 48 characters.
* `eventSourceArn` - (Required) Event bus source ARN from where these events should be archived.
* `description` - (Optional) The description of the new event archive.
* `eventPattern` - (Optional) Instructs the new event archive to only capture events matched by this pattern. By default, it attempts to archive every event received in the `eventSourceArn`.
* `retentionDays` - (Optional) The maximum number of days to retain events in the new event archive. By default, it archives indefinitely.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - The Amazon Resource Name (ARN) of the event archive.

## Import

Event Archive can be imported using their name, for example

```console
$ terraform import aws_cloudwatch_event_archive.imported_event_archive order-archive
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-cf6adce265c4fc2c293991934694cec0af650d63081abb6d5444e471c12f1ada -->