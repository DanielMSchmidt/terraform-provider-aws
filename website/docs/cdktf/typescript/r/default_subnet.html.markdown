---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_default_subnet"
description: |-
  Manage a default subnet resource.
---

# Resource: aws_default_subnet

Provides a resource to manage a [default subnet](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html#default-vpc-basics) in the current region.

**This is an advanced resource** and has special caveats to be aware of when using it. Please read this document in its entirety before using this resource.

The `awsDefaultSubnet` resource behaves differently from normal resources in that if a default subnet exists in the specified Availability Zone, Terraform does not _create_ this resource, but instead "adopts" it into management.
If no default subnet exists, Terraform creates a new default subnet.
By default, `terraform destroy` does not delete the default subnet but does remove the resource from Terraform state.
Set the `forceDestroy` argument to `true` to delete the default subnet.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new aws.defaultSubnet.DefaultSubnet(this, "default_az1", {
      availabilityZone: "us-west-2a",
      tags: {
        Name: "Default subnet for us-west-2a",
      },
    });
  }
}

```

## Argument Reference

The arguments of an `awsDefaultSubnet` differ slightly from those of [`awsSubnet`](subnet.html):

* `availabilityZone` is required
* The `availabilityZoneId`, `cidrBlock` and `vpcId` arguments become computed attributes
* The default value for `mapPublicIpOnLaunch` is `true`

The following additional arguments are supported:

* `forceDestroy` - (Optional) Whether destroying the resource deletes the default subnet. Default: `false`

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `availabilityZoneId` - The AZ ID of the subnet
* `cidrBlock` - The IPv4 CIDR block assigned to the subnet
* `vpcId` - The ID of the VPC the subnet is in

## Import

Subnets can be imported using the `subnet id`, e.g.,

```
$ terraform import aws_default_subnet.public_subnet subnet-9d4a7b6c
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-78bda642b8fa3458beb138ead9644a08e569d3578778a327fc0f6ebce497de4a -->