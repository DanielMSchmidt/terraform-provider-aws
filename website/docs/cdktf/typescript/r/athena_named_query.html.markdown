---
subcategory: "Athena"
layout: "aws"
page_title: "AWS: aws_athena_named_query"
description: |-
  Provides an Athena Named Query resource.
---

# Resource: aws_athena_named_query

Provides an Athena Named Query resource.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsKmsKeyTest = new aws.kmsKey.KmsKey(this, "test", {
      deletionWindowInDays: 7,
      description: "Athena KMS Key",
    });
    const awsS3BucketHoge = new aws.s3Bucket.S3Bucket(this, "hoge", {
      bucket: "tf-test",
    });
    const awsAthenaDatabaseHoge = new aws.athenaDatabase.AthenaDatabase(
      this,
      "hoge_2",
      {
        bucket: cdktf.Token.asString(awsS3BucketHoge.id),
        name: "users",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAthenaDatabaseHoge.overrideLogicalId("hoge");
    const awsAthenaWorkgroupTest = new aws.athenaWorkgroup.AthenaWorkgroup(
      this,
      "test_3",
      {
        configuration: {
          resultConfiguration: {
            encryptionConfiguration: {
              encryptionOption: "SSE_KMS",
              kmsKeyArn: cdktf.Token.asString(awsKmsKeyTest.arn),
            },
          },
        },
        name: "example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAthenaWorkgroupTest.overrideLogicalId("test");
    new aws.athenaNamedQuery.AthenaNamedQuery(this, "foo", {
      database: cdktf.Token.asString(awsAthenaDatabaseHoge.name),
      name: "bar",
      query: "SELECT * FROM ${" + awsAthenaDatabaseHoge.name + "} limit 10;",
      workgroup: cdktf.Token.asString(awsAthenaWorkgroupTest.id),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Plain language name for the query. Maximum length of 128.
* `workgroup` - (Optional) Workgroup to which the query belongs. Defaults to `primary`
* `database` - (Required) Database to which the query belongs.
* `query` - (Required) Text of the query itself. In other words, all query statements. Maximum length of 262144.
* `description` - (Optional) Brief explanation of the query. Maximum length of 1024.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - Unique ID of the query.

## Import

Athena Named Query can be imported using the query ID, e.g.,

```
$ terraform import aws_athena_named_query.example 0123456789
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d1723bb8d96b59a3b28c3206758840651552c289e6a92171c0936cb744d80a7a -->