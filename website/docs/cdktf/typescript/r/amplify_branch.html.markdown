---
subcategory: "Amplify"
layout: "aws"
page_title: "AWS: aws_amplify_branch"
description: |-
  Provides an Amplify Branch resource.
---

# Resource: aws_amplify_branch

Provides an Amplify Branch resource.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsAmplifyAppExample = new aws.amplifyApp.AmplifyApp(
      this,
      "example",
      {
        name: "app",
      }
    );
    new aws.amplifyBranch.AmplifyBranch(this, "master", {
      appId: cdktf.Token.asString(awsAmplifyAppExample.id),
      branchName: "master",
      environmentVariables: {
        REACT_APP_API_SERVER: "https://api.example.com",
      },
      framework: "React",
      stage: "PRODUCTION",
    });
  }
}

```

### Basic Authentication

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as aws from "./.gen/providers/aws";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const awsAmplifyAppExample = new aws.amplifyApp.AmplifyApp(
      this,
      "example",
      {
        name: "app",
      }
    );
    new aws.amplifyBranch.AmplifyBranch(this, "master", {
      appId: cdktf.Token.asString(awsAmplifyAppExample.id),
      basicAuthCredentials: cdktf.Fn.base64encode("username:password"),
      branchName: "master",
      enableBasicAuth: true,
    });
  }
}

```

### Notifications

Amplify Console uses EventBridge (formerly known as CloudWatch Events) and SNS for email notifications.  To implement the same functionality, you need to set `enableNotification` in a `awsAmplifyBranch` resource, as well as creating an EventBridge Rule, an SNS topic, and SNS subscriptions.

```terraform
resource "aws_amplify_app" "example" {
  name = "app"
}

resource "aws_amplify_branch" "master" {
  app_id      = aws_amplify_app.example.id
  branch_name = "master"

  # Enable SNS notifications.
  enable_notification = true
}

# EventBridge Rule for Amplify notifications

resource "aws_cloudwatch_event_rule" "amplify_app_master" {
  name        = "amplify-${aws_amplify_app.app.id}-${aws_amplify_branch.master.branch_name}-branch-notification"
  description = "AWS Amplify build notifications for :  App: ${aws_amplify_app.app.id} Branch: ${aws_amplify_branch.master.branch_name}"

  event_pattern = jsonencode({
    "detail" = {
      "appId" = [
        aws_amplify_app.example.id
      ]
      "branchName" = [
        aws_amplify_branch.master.branch_name
      ],
      "jobStatus" = [
        "SUCCEED",
        "FAILED",
        "STARTED"
      ]
    }
    "detail-type" = [
      "Amplify Deployment Status Change"
    ]
    "source" = [
      "aws.amplify"
    ]
  })
}

resource "aws_cloudwatch_event_target" "amplify_app_master" {
  rule      = aws_cloudwatch_event_rule.amplify_app_master.name
  target_id = aws_amplify_branch.master.branch_name
  arn       = aws_sns_topic.amplify_app_master.arn

  input_transformer {
    input_paths = {
      jobId  = "$.detail.jobId"
      appId  = "$.detail.appId"
      region = "$.region"
      branch = "$.detail.branchName"
      status = "$.detail.jobStatus"
    }

    input_template = "\"Build notification from the AWS Amplify Console for app: https://<branch>.<appId>.amplifyapp.com/. Your build status is <status>. Go to https://console.aws.amazon.com/amplify/home?region=<region>#<appId>/<branch>/<jobId> to view details on your build. \""
  }
}

# SNS Topic for Amplify notifications

resource "aws_sns_topic" "amplify_app_master" {
  name = "amplify-${aws_amplify_app.app.id}_${aws_amplify_branch.master.branch_name}"
}

data "aws_iam_policy_document" "amplify_app_master" {
  statement {
    sid = "Allow_Publish_Events ${aws_amplify_branch.master.arn}"

    effect = "Allow"

    actions = [
      "SNS:Publish",
    ]

    principals {
      type = "Service"
      identifiers = [
        "events.amazonaws.com",
      ]
    }

    resources = [
      aws_sns_topic.amplify_app_master.arn,
    ]
  }
}

resource "aws_sns_topic_policy" "amplify_app_master" {
  arn    = aws_sns_topic.amplify_app_master.arn
  policy = data.aws_iam_policy_document.amplify_app_master.json
}

resource "aws_sns_topic_subscription" "this" {
  topic_arn = aws_sns_topic.amplify_app_master.arn
  protocol  = "email"
  endpoint  = "user@acme.com"
}
```

## Argument Reference

The following arguments are supported:

* `appId` - (Required) Unique ID for an Amplify app.
* `branchName` - (Required) Name for the branch.
* `backendEnvironmentArn` - (Optional) ARN for a backend environment that is part of an Amplify app.
* `basicAuthCredentials` - (Optional) Basic authorization credentials for the branch.
* `description` - (Optional) Description for the branch.
* `displayName` - (Optional) Display name for a branch. This is used as the default domain prefix.
* `enableAutoBuild` - (Optional) Enables auto building for the branch.
* `enableBasicAuth` - (Optional) Enables basic authorization for the branch.
* `enableNotification` - (Optional) Enables notifications for the branch.
* `enablePerformanceMode` - (Optional) Enables performance mode for the branch.
* `enablePullRequestPreview` - (Optional) Enables pull request previews for this branch.
* `environmentVariables` - (Optional) Environment variables for the branch.
* `framework` - (Optional) Framework for the branch.
* `pullRequestEnvironmentName` - (Optional) Amplify environment name for the pull request.
* `stage` - (Optional) Describes the current stage for the branch. Valid values: `production`, `beta`, `development`, `experimental`, `pullRequest`.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `ttl` - (Optional) Content Time To Live (TTL) for the website in seconds.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - ARN for the branch.
* `associatedResources` - A list of custom resources that are linked to this branch.
* `customDomains` - Custom domains for the branch.
* `destinationBranch` - Destination branch if the branch is a pull request branch.
* `sourceBranch` - Source branch if the branch is a pull request branch.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

Amplify branch can be imported using `appId` and `branchName`, e.g.,

```
$ terraform import aws_amplify_branch.master d2ypk4k47z8u6/master
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-885aad59cd94d6740db418b798419213ee7bd270f77b0e8c89555d87cb09c30b -->